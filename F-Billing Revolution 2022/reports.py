from cProfile import label
from cgitb import text
import csv
from enum import auto

from itertools import count
from pydoc import describe
from sqlite3 import Cursor
from tkinter import *
from tkinter import messagebox
from tkinter import ttk

from turtle import clear, color, width
from unittest.util import _count_diff_all_purpose
from PIL import ImageTk, Image
import pandas as pd
from tkinter.messagebox import showinfo
import tkinter.scrolledtext as scrolledtext
from tkinter.filedialog import askopenfilename
import os
import webbrowser

from setuptools import Command
from tkcalendar import Calendar
from tkcalendar import DateEntry
from datetime import date,datetime, timedelta
from tkinter import filedialog
import subprocess
import mysql.connector
import io
from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg
import datetime as dt
from tkPDFViewer import tkPDFViewer as pdf# For pdf view

#saiju
import matplotlib.pyplot as plt
from pylab import plot, show, xlabel, ylabel
from matplotlib.widgets import Cursor
from dateutil.relativedelta import relativedelta
import pendulum

from pathlib import Path
import pandas as pd
from tkinter import messagebox
from tkinter import *
from docx import Document
from fpdf import FPDF
import os
import sys
from PyPDF2 import PdfFileWriter, PdfFileReader
import pdfkit






# ##########################################################################################################
fbilldb = mysql.connector.connect(
    host="localhost", user="root", password="", database="fbillingsintgrtd", port="3306"
)
fbcursor = fbilldb.cursor()
##########################################################################################################
def reset():
  global root
  root.destroy()

root=Tk()
root.geometry("1360x730")

root.title("F-Billing Revolution 2022(FREE version) | Company database:fbillingdb | User:Administrator")
p1 = PhotoImage(file = 'images/fbicon.png')
root.iconphoto(False, p1)


s = ttk.Style()
s.theme_use('default')
s.configure('TNotebook.Tab', background="#999999", width=20, padding=10)
invoices= PhotoImage(file="images/invoice.png")
orders = PhotoImage(file="images/order.png")
estimates = PhotoImage(file="images/estimate.png")
recurring = PhotoImage(file="images/recurring.png")
purchase = PhotoImage(file="images/purchase.png")
expenses = PhotoImage(file="images/expense.png")
customer = PhotoImage(file="images/customer.png")
product = PhotoImage(file="images/package.png")
reports = PhotoImage(file="images/report.png")
setting = PhotoImage(file="images/setting.png")
tick = PhotoImage(file="images/check.png")
warnin = PhotoImage(file="images/sign_warning.png")
cancel = PhotoImage(file="images/close.png")
saves = PhotoImage(file="images/save.png")
folder = PhotoImage(file="images/folder-black.png")
photo11 = PhotoImage(file = "images/invoice-pvt.png")
customer = PhotoImage(file="images/customer.png")
smslog = PhotoImage(file = "images/smslog.png")
video = PhotoImage(file = "images/video.png")
mark1 = PhotoImage(file="images/mark.png")
mark2 = PhotoImage(file="images/mark2.png")
photo10 = PhotoImage(file = "images/text-message.png")
addnew = PhotoImage(file="images/plus.png")
delete = PhotoImage(file="images/delete_E.png")
tabControl = ttk.Notebook(root)
tab1 = ttk.Frame(tabControl)
tab2 = ttk.Frame(tabControl)
tab3=  ttk.Frame(tabControl)
tab4 = ttk.Frame(tabControl)
tab5 = ttk.Frame(tabControl)
tab6=  ttk.Frame(tabControl)
tab7 = ttk.Frame(tabControl)
tab8 = ttk.Frame(tabControl)
tab9 =  ttk.Frame(tabControl)
tab10=  ttk.Frame(tabControl)
tabControl.add(tab1,image=invoices,compound = LEFT, text ='Invoices',)
tabControl.add(tab2,image=orders,compound = LEFT, text ='Orders')
tabControl.add(tab3,image=estimates,compound = LEFT, text ='Estimates')
tabControl.add(tab4,image=recurring,compound = LEFT, text ='Recurring')
tabControl.add(tab5,image=purchase,compound = LEFT, text ='Purchase Orders') 
tabControl.add(tab6,image=expenses,compound = LEFT, text ='Expenses')
tabControl.add(tab7,image=customer,compound = LEFT, text ='Customers')
tabControl.add(tab8,image=product,compound = LEFT, text ='Product/Services')
tabControl.add(tab9,image=reports,compound = LEFT, text ='Report')
tabControl.add(tab10,image=setting,compound = LEFT, text ='Settings')
tabControl.pack(expand = 1, fill ="both")


selectall = PhotoImage(file="images/table_select_all.png")
cut = PhotoImage(file="images/cut.png")
copy = PhotoImage(file="images/copy.png")
paste = PhotoImage(file="images/paste.png")

undo = PhotoImage(file="images/undo.png")
redo = PhotoImage(file="images/redo.png")
bold = PhotoImage(file="images/bold.png")

italics = PhotoImage(file="images/italics.png")
underline = PhotoImage(file="images/underline.png")
left = PhotoImage(file="images/left.png")

right = PhotoImage(file="images/right.png")
center = PhotoImage(file="images/center.png")
hyperlink = PhotoImage(file="images/hyperlink.png")
remove = PhotoImage(file="images/eraser.png")


photo = PhotoImage(file = "images/plus.png")
photo1 = PhotoImage(file = "images/edit.png")
photo2 = PhotoImage(file = "images/delete_E.png")
photo3 = PhotoImage(file = "images/export-file.png")
photo4 = PhotoImage(file = "images/seo.png")
photo5 = PhotoImage(file = "images/printer.png")
photo6 = PhotoImage(file = "images/gmail.png")
photo7 = PhotoImage(file = "images/priewok.png")
photo8 = PhotoImage(file = "images/refresh_E.png")
photo9 = PhotoImage(file = "images/sum.png")
photo10 = PhotoImage(file = "images/text-message.png")
photo11 = PhotoImage(file = "images/export excel.png")

#==============================================++++++++++++++++++++++++++++++++++++++ Saiju
reportframe=Frame(tab9, relief=GROOVE, bg="#f5f3f2")
reportframe.pack(side="top", fill=BOTH)

midFrame=Frame(reportframe, bg="#f5f3f2", height=60)
midFrame.pack(side="top", fill=X)

# midFrame2=Frame(reportframe, bg="red", height=60)
# midFrame2.pack(side="top", fill=X)

w = Canvas(midFrame, width=1, height=65, bg="#b3b3b3", bd=0)
w.pack(side="left", padx=(5, 2))
w = Canvas(midFrame, width=1, height=65, bg="#b3b3b3", bd=0)
w.pack(side="left", padx=(0, 5))

refreshlebel = Button(midFrame,compound="top", text="Refresh",relief=RAISED, image=photo8,bg="#f5f3f2", fg="black", height=55, bd=1, width=55, command=lambda:screen_flt())
refreshlebel.pack(side="left")
w = Canvas(midFrame, width=1, height=65, bg="#b3b3b3", bd=0)
w.pack(side="left", padx=(5, 2))

printlabel = Button(midFrame,compound="top", text="Print Chart",relief=RAISED, image=photo5,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command="create")
printlabel.pack(side="left")
w = Canvas(midFrame, width=1, height=65, bg="#b3b3b3", bd=0)
w.pack(side="left", padx=(5, 2))


saveLabel = Button(midFrame,compound="top", text="Save Chart\nimage",relief=RAISED, image=photo3,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command=lambda:image())
saveLabel.pack(side="left",)
w = Canvas(midFrame, width=1, height=65, bg="#b3b3b3", bd=0)
w.pack(side="left", padx=(0, 5))

copyLabel = Button(midFrame,compound="top", text="Copy Chart\n to Clipboard",relief=RAISED, image=copy,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command="convert")
copyLabel.pack(side="left")
w = Canvas(midFrame, width=1, height=65, bg="#b3b3b3", bd=0)
w.pack(side="left", padx=(0, 5))
#***********************************************************************************************
#right side of menu bar

lbframe = LabelFrame(midFrame, height=60, width=1500, bg="#f8f8f2")
lbframe.pack(side="left", padx=10, pady=0)
import tempfile
############################################(print function)####################################################
def exportcanvas():

    var_1=rp_exir.get()
    var_2=rp_exir1.get()
    
    cols = ["No","Date","Due Date","Terms","Status","Invoice Total","Invoice Paid","Balance"] # Your column headings here
    path = filedialog.asksaveasfilename(initialdir=os.getcwd,title="Save File",filetypes=[('CSV File', '*.csv',)],defaultextension=".csv")
    
    lst = []
    with open(path, "w", newline='') as myfile:
        csvwriter = csv.writer(myfile, delimiter=',')
        sql = 'select invoice_number,	invodate,duedate,terms,status,invoicetot,totpaid,balance from invoice where invodate between %s and %s'
        
        irv=(var_1,var_2)
        fbcursor.execute(sql,irv)
        pandsdata = fbcursor.fetchall()
        for row_id in pandsdata:
            row = row_id
            lst.append(row)
        lst = list(map(list,lst))
        lst.insert(0,cols)
        for row in lst:
            csvwriter.writerow(row)

def exportcanvas2():
    var_1=irwcfrm1.get()
    var_2=irwcto1.get()
    
    cols = ["No","Date","Due Date","Customer","Status","Invoice Total"] # Your column headings here
    path = filedialog.asksaveasfilename(initialdir=os.getcwd,title="Save File",filetypes=[('CSV File', '*.csv',)],defaultextension=".csv")
    
    lst = []
    with open(path, "w", newline='') as myfile:
        csvwriter = csv.writer(myfile, delimiter=',')
        sql = 'select invoice_number,	invodate,duedate,businessname,status,invoicetot from invoice where invodate between %s and %s'
        
        irv=(var_1,var_2)
        print(var_1)
        fbcursor.execute(sql,irv)
        pandsdata = fbcursor.fetchall()
        for row_id in pandsdata:
            row = row_id
            lst.append(row)
        lst = list(map(list,lst))
        lst.insert(0,cols)
        for row in lst:
            csvwriter.writerow(row)

def exportcanvas3():
    var_1=orfrm1.get()
    var_2=orto1.get()

    cols = ["No","Date","Due Date","Customer","Status","Invoice Total"] # Your column headings here
    path = filedialog.asksaveasfilename(initialdir=os.getcwd,title="Save File",filetypes=[('CSV File', '*.csv',)],defaultextension=".csv")
    
    lst = []
    with open(path, "w", newline='') as myfile:
        
        csvwriter = csv.writer(myfile, delimiter=',')
        sql = 'select orderid,	order_date,due_date,businessname,status,Order_total from orders where order_date between %s and %s'
        
        irv=(var_1,var_2)
        fbcursor.execute(sql,irv)
        pandsdata = fbcursor.fetchall()
        for row_id in pandsdata:
            row = row_id
            lst.append(row)
        lst = list(map(list,lst))
        lst.insert(0,cols)
        for row in lst:
            csvwriter.writerow(row)
    
def exportcanvas4():
    

    cols = ["Invoice No","Customer","Next Invoice","Recurring Interval","Stop After","Invoice Total"] # Your column headings here
    path = filedialog.asksaveasfilename(initialdir=os.getcwd,title="Save File",filetypes=[('CSV File', '*.csv',)],defaultextension=".csv")
    
    lst = []
    with open(path, "w", newline='') as myfile:
        csvwriter = csv.writer(myfile, delimiter=',')
        sql = 'select invoice_number,	businessname,next_invoice,recurring_period,stop_recurring,invoicetot from invoice'
        
        fbcursor.execute(sql)
        pandsdata = fbcursor.fetchall()
        for row_id in pandsdata:
            row = row_id
            lst.append(row)
        lst = list(map(list,lst))
        lst.insert(0,cols)
        for row in lst:
            csvwriter.writerow(row)

def exportcanvas5():

    cols = ["No","Date","Due Date","Terms","Status","Invoice Total","Invoice Paid","Balance"] # Your column headings here
    path = filedialog.asksaveasfilename(initialdir=os.getcwd,title="Save File",filetypes=[('CSV File', '*.csv',)],defaultextension=".csv")
    
    lst = []
    with open(path, "w", newline='') as myfile:
        csvwriter = csv.writer(myfile, delimiter=',')
        sql = 'select invoice_number,	invodate,duedate,terms,status,invoicetot,totpaid,balance from invoice where invodate<duedate'
        
        fbcursor.execute(sql)
        pandsdata = fbcursor.fetchall()
        for row_id in pandsdata:
            row = row_id
            lst.append(row)
        lst = list(map(list,lst))
        lst.insert(0,cols)
        for row in lst:
            csvwriter.writerow(row)

def exportcanvas6():
    
    rth=clfilter.get()
    
    if rth=="All Customers ":
    
        cols = ["Customer Id","Category","Customer Businnes Name","Customer Person","Tel","Fax"] # Your column headings here
        path = filedialog.asksaveasfilename(initialdir=os.getcwd,title="Save File",filetypes=[('CSV File', '*.csv',)],defaultextension=".csv")
        
        lst = []
        with open(path, "w", newline='') as myfile:
            csvwriter = csv.writer(myfile, delimiter=',')
            sql = 'select customerid ,		category,businessname,contactperson,cptelno,cpfax from customer'
            
            
            fbcursor.execute(sql)
            pandsdata = fbcursor.fetchall()
            for row_id in pandsdata:
                row = row_id
                lst.append(row)
            lst = list(map(list,lst))
            lst.insert(0,cols)
            for row in lst:
                csvwriter.writerow(row)
    elif rth=="Default":
    
        cols = ["Customer Id","Category","Customer Businnes Name","Customer Person","Tel","Fax"] # Your column headings here
        path = filedialog.asksaveasfilename(initialdir=os.getcwd,title="Save File",filetypes=[('CSV File', '*.csv',)],defaultextension=".csv")
        
        lst = []
        with open(path, "w", newline='') as myfile:
            csvwriter = csv.writer(myfile, delimiter=',')
            sql = 'select customerid ,		category,businessname,contactperson,cptelno,cpfax from customer where category="Default"'
            
            
            fbcursor.execute(sql)
            pandsdata = fbcursor.fetchall()
            for row_id in pandsdata:
                row = row_id
                lst.append(row)
            lst = list(map(list,lst))
            lst.insert(0,cols)
            for row in lst:
                csvwriter.writerow(row)
#cld
def exportcanvas7():
    
    cols = [" "," "] # Your column headings here
    path = filedialog.asksaveasfilename(initialdir=os.getcwd,title="Save File",filetypes=[('CSV File', '*.csv',)],defaultextension=".csv")

    
    
    lst = []
    with open(path, "w", newline='') as myfile:
        csvwriter = csv.writer(myfile, delimiter=',')
        sql = 'select * from customer '
    
        fbcursor.execute(sql)
        pandsdata = fbcursor.fetchall()
        for row_id in pandsdata:
            row = row_id[4]
            lst.append(row) 
        lst = list(map(list,lst))
        lst.insert(0,cols)
        for row in lst:
            csvwriter.writerow(row)

def exportcanvas8():
    rth=pslfilter.get()
    print(rth)
    if rth=="All product and Services ":
        cols = ["Product ID","Category","Product/ Service Name","Description","Warehouse","Stock", "Cost","Price"] # Your column headings here
        path = filedialog.asksaveasfilename(initialdir=os.getcwd,title="Save File",filetypes=[('CSV File', '*.csv',)],defaultextension=".csv")
        
        lst = []
        with open(path, "w", newline='') as myfile:
            csvwriter = csv.writer(myfile, delimiter=',')
            sql = 'select Productserviceid  ,	category,name,description,warehouse,stock,cost,unitprice from productservice'
            
        
            fbcursor.execute(sql)
            pandsdata = fbcursor.fetchall()
            for row_id in pandsdata:
                row = row_id
                lst.append(row)
            lst = list(map(list,lst))
            lst.insert(0,cols)
            for row in lst:
                csvwriter.writerow(row)

    elif rth=="All products":
        cols = ["Product ID","Category","Product/ Service Name","Description","Warehouse","Stock", "Cost","Price"] # Your column headings here
        path = filedialog.asksaveasfilename(initialdir=os.getcwd,title="Save File",filetypes=[('CSV File', '*.csv',)],defaultextension=".csv")
        
        lst = []
        with open(path, "w", newline='') as myfile:
            csvwriter = csv.writer(myfile, delimiter=',')
            sql = 'select Productserviceid  ,	category,name,description,warehouse,stock,cost,unitprice from productservice where category="Products"'
            
        
            fbcursor.execute(sql)
            pandsdata = fbcursor.fetchall()
            for row_id in pandsdata:
                row = row_id
                lst.append(row)
            lst = list(map(list,lst))
            lst.insert(0,cols)
            for row in lst:
                csvwriter.writerow(row)
    elif rth=="All Service":
        cols = ["Product ID","Category","Product/ Service Name","Description","Warehouse","Stock", "Cost","Price"] # Your column headings here
        path = filedialog.asksaveasfilename(initialdir=os.getcwd,title="Save File",filetypes=[('CSV File', '*.csv',)],defaultextension=".csv")
        
        lst = []
        with open(path, "w", newline='') as myfile:
            csvwriter = csv.writer(myfile, delimiter=',')
            sql = 'select Productserviceid  ,	category,name,description,warehouse,stock,cost,unitprice from productservice where category="Service"'
            
        
            fbcursor.execute(sql)
            pandsdata = fbcursor.fetchall()
            for row_id in pandsdata:
                row = row_id
                lst.append(row)
            lst = list(map(list,lst))
            lst.insert(0,cols)
            for row in lst:
                csvwriter.writerow(row)

    elif rth=="Default":
        cols = ["Product ID","Category","Product/ Service Name","Description","Warehouse","Stock", "Cost","Price"] # Your column headings here
        path = filedialog.asksaveasfilename(initialdir=os.getcwd,title="Save File",filetypes=[('CSV File', '*.csv',)],defaultextension=".csv")
        
        lst = []
        with open(path, "w", newline='') as myfile:
            csvwriter = csv.writer(myfile, delimiter=',')
            sql = 'select Productserviceid  ,	category,name,description,warehouse,stock,cost,unitprice from productservice where category="Default"'
            
        
            fbcursor.execute(sql)
            pandsdata = fbcursor.fetchall()
            for row_id in pandsdata:
                row = row_id
                lst.append(row)
            lst = list(map(list,lst))
            lst.insert(0,cols)
            for row in lst:
                csvwriter.writerow(row)
    else:
        pass
    
#--------------------------------Price list--------------------------

def exportcanvas9():
    rth=prlfilter.get()

    if rth=="All product and Services ":
        cols = ["Product ID","Product/ Service Name","Description","Price"] # Your column headings here
        path = filedialog.asksaveasfilename(initialdir=os.getcwd,title="Save File",filetypes=[('CSV File', '*.csv',)],defaultextension=".csv")
        
        lst = []
        with open(path, "w", newline='') as myfile:
            csvwriter = csv.writer(myfile, delimiter=',')
            sql = 'select Productserviceid,name,description,unitprice from productservice'
            
        
            fbcursor.execute(sql)
            pandsdata = fbcursor.fetchall()
            for row_id in pandsdata:
                row = row_id
                lst.append(row)
            lst = list(map(list,lst))
            lst.insert(0,cols)
            for row in lst:
                csvwriter.writerow(row)

    elif rth=="All products":
        cols = ["Product ID","Product/ Service Name","Description","Price"] # Your column headings here
        path = filedialog.asksaveasfilename(initialdir=os.getcwd,title="Save File",filetypes=[('CSV File', '*.csv',)],defaultextension=".csv")
        
        lst = []
        with open(path, "w", newline='') as myfile:
            csvwriter = csv.writer(myfile, delimiter=',')
            sql = 'select Productserviceid,name,description,unitprice from productservice where category="Products"'
            
        
            fbcursor.execute(sql)
            pandsdata = fbcursor.fetchall()
            for row_id in pandsdata:
                row = row_id
                lst.append(row)
            lst = list(map(list,lst))
            lst.insert(0,cols)
            for row in lst:
                csvwriter.writerow(row)
    elif rth=="All Service":
        cols = ["Product ID","Product/ Service Name","Description","Price"] # Your column headings here
        path = filedialog.asksaveasfilename(initialdir=os.getcwd,title="Save File",filetypes=[('CSV File', '*.csv',)],defaultextension=".csv")
        
        lst = []
        with open(path, "w", newline='') as myfile:
            csvwriter = csv.writer(myfile, delimiter=',')
            sql = 'select Productserviceid,name,description,unitprice from productservice where category="Service"'
            
        
            fbcursor.execute(sql)
            pandsdata = fbcursor.fetchall()
            for row_id in pandsdata:
                row = row_id
                lst.append(row)
            lst = list(map(list,lst))
            lst.insert(0,cols)
            for row in lst:
                csvwriter.writerow(row)

    elif rth=="Default":
        cols = ["Product ID","Product/ Service Name","Description","Price"] # Your column headings here
        path = filedialog.asksaveasfilename(initialdir=os.getcwd,title="Save File",filetypes=[('CSV File', '*.csv',)],defaultextension=".csv")
        
        lst = []
        with open(path, "w", newline='') as myfile:
            csvwriter = csv.writer(myfile, delimiter=',')
            sql = 'select Productserviceid,name,description,unitprice from productservice where category="Default"'
            
        
            fbcursor.execute(sql)
            pandsdata = fbcursor.fetchall()
            for row_id in pandsdata:
                row = row_id
                lst.append(row)
            lst = list(map(list,lst))
            lst.insert(0,cols)
            for row in lst:
                csvwriter.writerow(row)
    else:
        pass

#-----------------product low stock
def exportcanvas10():

        cols = ["Product ID","Category","Product Name","Warehouse","Low Stock Limit","Stock"] # Your column headings here
        path = filedialog.asksaveasfilename(initialdir=os.getcwd,title="Save File",filetypes=[('CSV File', '*.csv',)],defaultextension=".csv")
        
        lst = []
        with open(path, "w", newline='') as myfile:
            csvwriter = csv.writer(myfile, delimiter=',')
            sql = 'select orderid,category,name,warehouse,stocklimit,stock from storingproduct WHERE stock < stocklimit'
            
        
            fbcursor.execute(sql)
            pandsdata = fbcursor.fetchall()
            
            for row_id in pandsdata:
                row = row_id
                lst.append(row)
            lst = list(map(list,lst))
            lst.insert(0,cols)
            for row in lst:
                csvwriter.writerow(row)


#=====tax Invoice========
def exportcanvas11():
    var_1=trifrm1.get()
    var_2=trito1.get()
    

    
    cols = ["Invoice No","Issue Date","Due Date","Total Before TAX","TAX1","TAX2","Invoice Total"] # Your column headings here
    path = filedialog.asksaveasfilename(initialdir=os.getcwd,title="Save File",filetypes=[('CSV File', '*.csv',)],defaultextension=".csv")
    
    lst = []
    with open(path, "w", newline='') as myfile:
        csvwriter = csv.writer(myfile, delimiter=',')
        sql = 'select invoice_number,	invodate,duedate,totalbeforetax,tax1,tax2,invoicetot from invoice where invodate between %s and %s'
        
        irv=(var_1,var_2)
        fbcursor.execute(sql,irv)
        pandsdata = fbcursor.fetchall()
        for row_id in pandsdata:
            row = row_id
            lst.append(row)
        lst = list(map(list,lst))
        lst.insert(0,cols)
        for row in lst:
            csvwriter.writerow(row)
#tax order
def exportcanvas12():
    var_1=trofrm1.get()
    var_2=troto1.get()
    
    cols = ["Order No","Issue Date","Due Date","Total Before TAX","TAX1","TAX2","Order Total"] # Your column headings here
    path = filedialog.asksaveasfilename(initialdir=os.getcwd,title="Save File",filetypes=[('CSV File', '*.csv',)],defaultextension=".csv")
    
    lst = []
    with open(path, "w", newline='') as myfile:
        
        csvwriter = csv.writer(myfile, delimiter=',')
        sql = 'select orderid,	order_date,due_date,totalbeforetax,tax1,	tax2,Order_total from orders where order_date between %s and %s'
        
        irv=(var_1,var_2)
        fbcursor.execute(sql,irv)
        pandsdata = fbcursor.fetchall()
        for row_id in pandsdata:
            row = row_id
            lst.append(row)
        lst = list(map(list,lst))
        lst.insert(0,cols)
        for row in lst:
            csvwriter.writerow(row)
# srgd
def exportcanvas13():
    var_1=rp_exir.get()
    var_2=rp_exir1.get()

    cols = ["Date","Quantity","Cost","Income","Profit"] # Your column headings here
    path = filedialog.asksaveasfilename(initialdir=os.getcwd,title="Save File",filetypes=[('CSV File', '*.csv',)],defaultextension=".csv")
    
    lst = []
    with open(path, "w", newline='') as myfile:
        csvwriter = csv.writer(myfile, delimiter=',')
        sql = 'select invoice_number,	invodate,duedate,terms,status,invoicetot,totpaid,balance from invoice where invodate between %s and %s'
        
        irv=(var_1,var_2)
        fbcursor.execute(sql,irv)
        pandsdata = fbcursor.fetchall()
        for row_id in pandsdata:
            row = row_id
            lst.append(row)
        lst = list(map(list,lst))
        lst.insert(0,cols)
        for row in lst:
            csvwriter.writerow(row)

# ird
def exportcanvas14():
    var_1=irdfrm1.get_date()
    var_2=irdfrm2.get_date()

    cols = ["Invoice No","Date","Customer","Invoice Total","Paid","Balance"] # Your column headings here
    path = filedialog.asksaveasfilename(initialdir=os.getcwd,title="Save File",filetypes=[('CSV File', '*.csv',)],defaultextension=".csv")
    
    lst = []
    with open(path, "w", newline='') as myfile:
        csvwriter = csv.writer(myfile, delimiter=',')
        sql = 'select invoice_number,	invodate,businessname,invoicetot,totpaid,balance from invoice where invodate between %s and %s'
        
        irv=(var_1,var_2)
        fbcursor.execute(sql,irv)
        pandsdata = fbcursor.fetchall()
        for row_id in pandsdata:
            row = row_id
            lst.append(row)
        lst = list(map(list,lst))
        lst.insert(0,cols)
        for row in lst:
            csvwriter.writerow(row)

# dir
def exportcanvas15():
    var_1=dir_frm.get_date()
    

    cols = ["Invoice No","Date","Customer","Invoice Total","Paid","Balance"] # Your column headings here
    path = filedialog.asksaveasfilename(initialdir=os.getcwd,title="Save File",filetypes=[('CSV File', '*.csv',)],defaultextension=".csv")
    
    lst = []
    with open(path, "w", newline='') as myfile:
        csvwriter = csv.writer(myfile, delimiter=',')
        sql = 'select invoice_number,	invodate,businessname,invoicetot,totpaid,balance from invoice where invodate= %s'
        
        irv=(var_1,)
        fbcursor.execute(sql,irv)
        pandsdata = fbcursor.fetchall()
        for row_id in pandsdata:
            row = row_id
            lst.append(row)
        lst = list(map(list,lst))
        lst.insert(0,cols)
        for row in lst:
            csvwriter.writerow(row)
#por
def exportcanvas16():
    var_1=porfrm1.get()
    var_2=porto1.get()
    
   
    cols = ["No","Date","Due Date","Vendor","Status","P.Order Total"] # Your column headings here
    path = filedialog.asksaveasfilename(initialdir=os.getcwd,title="Save File",filetypes=[('CSV File', '*.csv',)],defaultextension=".csv")
    
    lst = []
    with open(path, "w", newline='') as myfile:
        csvwriter = csv.writer(myfile, delimiter=',')
        sql = 'select porderid,	porderdate,duedate,vendor,status,ordertot from  porder where porderdate between %s and %s'
        
        irv=(var_1,var_2)
        fbcursor.execute(sql,irv)
        pandsdata = fbcursor.fetchall()
        for row_id in pandsdata:
            row = row_id
            lst.append(row)
        lst = list(map(list,lst))
        lst.insert(0,cols)
        for row in lst:
            csvwriter.writerow(row)


#exp
def exportcanvas17():
    var_1=exp_frm.get_date()
    var_2=exp_to.get_date()

    rth=expfilter.get()
    
    if rth=="All":
        cols = ["Date","Customer","Vendor","Invoice","Rebill.Amount","Amount"] # Your column headings here
        path = filedialog.asksaveasfilename(initialdir=os.getcwd,title="Save File",filetypes=[('CSV File', '*.csv',)],defaultextension=".csv")
        
        lst = []
        with open(path, "w", newline='') as myfile:
            csvwriter = csv.writer(myfile, delimiter=',')
            sql = 'select date,	customer,vendor,invoiced,	rebill_amount,expense_amount from expenses where date between %s and %s'
            
            irv=(var_1,var_2)
            fbcursor.execute(sql,irv)
            pandsdata = fbcursor.fetchall()
            for row_id in pandsdata:
                row = row_id
                lst.append(row)
            lst = list(map(list,lst))
            lst.insert(0,cols)
            for row in lst:
                csvwriter.writerow(row)
    if rth=="Internal":
        cols = ["Date","Customer","Vendor","Invoice","Rebill.Amount","Amount"] # Your column headings here
        path = filedialog.asksaveasfilename(initialdir=os.getcwd,title="Save File",filetypes=[('CSV File', '*.csv',)],defaultextension=".csv")
        
        lst = []
        with open(path, "w", newline='') as myfile:
            csvwriter = csv.writer(myfile, delimiter=',')
            sql = 'select date,	customer,vendor,invoiced,	rebill_amount,expense_amount from expenses where date between %s and %s and customer="Internal"'
            
            irv=(var_1,var_2)
            fbcursor.execute(sql,irv)
            pandsdata = fbcursor.fetchall()
            for row_id in pandsdata:
                row = row_id
                lst.append(row)
            lst = list(map(list,lst))
            lst.insert(0,cols)
            for row in lst:
                csvwriter.writerow(row)

#pyr
def exportcanvas18():


    var_1=pyrfrm1.get()
    var_2=pyrto1.get()

    cols = ["Invoice No","Invoice Issue Date","Customer","Payment ID","Payment Date","Paid By","Amount Paid"] # Your column headings here
    path = filedialog.asksaveasfilename(initialdir=os.getcwd,title="Save File",filetypes=[('CSV File', '*.csv',)],defaultextension=".csv")
    
    lst = []
    with open(path, "w", newline='') as myfile:
        csvwriter = csv.writer(myfile, delimiter=',')
        sql = 'select invoice_number,	invodate,businessname,paymentid,invodate,businessname,totpaid from invoice where invodate between %s and %s'
        
        irv=(var_1,var_2)
        fbcursor.execute(sql,irv)
        pandsdata = fbcursor.fetchall()
        for row_id in pandsdata:
            row = row_id
            lst.append(row)
        lst = list(map(list,lst))
        lst.insert(0,cols)
        for row in lst:
            csvwriter.writerow(row)


#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++PDF++++++++++++++++++++++++

def pdf_exp(txts): 
    
    white = (255, 255, 255)
    black = (0, 0, 0)
    blue = (0, 0, 255)
    red = (255, 0, 0)
    green = (0,128,0)
    import tkinter as tk
    import math
    import os
    # needs Python Image Library (PIL)
    from PIL import Image, ImageDraw
    width = 1400
    height = 2000
    cv = tk.Canvas(width=width, height=height, bg='white')
    cv.pack()
    image1 = Image.new("RGB", (width, height), white)
    draw = ImageDraw.Draw(image1)
    draw.text((10, 20), txts)
   
    cv.postscript(file="my_drawing.ps", colormode='color')
    filename = "my_drawing.jpg"
    image1.save(filename)

    # to test, view the saved file, works with Windows only
    # behaves like double-clicking on the saved file
    os.startfile(filename)


    # import pdb;pdb.set_trace()
    # from reportlab.pdfgen import canvas
    # exprt=canvas.Canvas("invoiuce.pdf")
    # exprt.drawString(200, 700, txts)
    # exprt.save()
    # print("Pdf generate")

 
def  cn_pr(canvas):
    print(str(canvas))

    filename=tempfile.mktemp(".txt")
    open(filename,'w').write(str(canvas))
    os.startfile(filename,"print")
# def show(event):
#     os.startfile(file, "print")
#     # ltx=txt.itemcget(id_inv, 'text')
#     # temp_file=tempfile.mktemp('.xlsx')
#     # open(temp_file, 'w').write(ltx)
#     # os.startfile(temp_file,'print')
#     # pass

def image():
    pass
  

##################################### (Report Preview) ############################################################# 



#Filter by category----------------------------------------------------------------------------
#-----------------------------------------------ScreenChart-------------------------------
def screen_flt(): 
    rth=scrfilter.get()

    
    sql_company = "SELECT * from company"
    fbcursor.execute(sql_company)
    company= fbcursor.fetchone()

    if rth=="Last 3 Month":
        if company is not None:
            
            in_dat = (datetime.now()-relativedelta(months=3)).strftime("%Y-%m-%d")
            # given_date = datetime.today().month()
            # in_dat = given_date.replace(months=3)
            
            rp_scr_frm.delete(0,'end')
            rp_scr_frm.insert(0, in_dat)

            cr=date.today()
            rp_sc_to.delete(0,'end')
            rp_sc_to.insert(0, cr)

            lscr=in_dat
            
            lscr1=cr
            
            var_1=in_dat
            var_2=cr
            
            sql_paid ="SELECT SUM(invoicetot)from invoice WHERE invodate BETWEEN %s and %s"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(sql_paid,inv_valuz)
            invoice= fbcursor.fetchone()

            x_axis = "SELECT invodate from invoice WHERE invoicetot=(SELECT MAX(invoicetot) from invoice WHERE invodate BETWEEN %s and %s)"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(x_axis, inv_valuz)
            axis_x= fbcursor.fetchone()



            sql_company = "SELECT SUM(totpaid)from invoice WHERE invodate BETWEEN %s and %s"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(sql_company,inv_valuz)
            paid= fbcursor.fetchone()



            sql_outstanding = "SELECT SUM(balance)from invoice WHERE invodate BETWEEN %s and %s"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(sql_outstanding,inv_valuz)
            outstanding= fbcursor.fetchone()


            frame = Frame(
                    reportframe,
                    width=1380,
                    height=1000,
                    bg='#b3b3b3',
                    )
            frame.pack(expand=True, fill=BOTH,  padx=0, pady=0)
                
            frame.pack()


            x=lscr1
           
            y=invoice

            x=axis_x
            figfirst = plt.figure(figsize=(17, 3.58), dpi=80)
            plt.bar(x,y, label="Invoice", color="orange")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()

            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)




            #**************add dates********

            dates=axis_x[0]+timedelta(days=2)

            y=outstanding
            x=dates
            plt.bar(x,y, label="Outstanding", color="blue")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)


            dates3=axis_x[0]-timedelta(days=2)
            y=paid
            x=dates3
            plt.bar(x,y, label="Paid", color="green") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)

            #used to display chart in our frame
            canvasbar = FigureCanvasTkAgg(figfirst, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=0, y=85) # show the barchart on the ouput window

            #second graph

            sec_paid = "SELECT invoicetot from (select invodate, invoicetot from invoice  GROUP BY businessname having invodate BETWEEN %s and %s ORDER by COUNT(businessname) DESC LIMIT 1)as sec"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(sec_paid,inv_valuz)
            paid_sec_x= fbcursor.fetchone()

            


            sec_paid_y = "SELECT businessname from (select invodate, businessname from invoice  GROUP BY businessname having invodate BETWEEN %s and %s ORDER by COUNT(businessname) DESC LIMIT 1)as sec"
            inv_valuz=(var_1,var_2)

            fbcursor.execute(sec_paid_y,inv_valuz)

            paid_sec_y= fbcursor.fetchone()

            


            figsecond = plt.figure(figsize=(9, 4), dpi=80)

            x=paid_sec_y
            y=paid_sec_x
            plt.barh(x,y, label="Top Billed Customer", color="orange") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.xaxis.grid()


            canvasbar = FigureCanvasTkAgg(figsecond, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=0, y=370)

            # #second graph

            thrd_paid = "SELECT invoicetot from(select invodate,invoicetot from invoice GROUP BY Productserviceid HAVING invodate BETWEEN %s and %s ORDER by COUNT(Productserviceid) DESC LIMIT 1)as lkiii"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(thrd_paid,inv_valuz)
            paid_thrd_x= fbcursor.fetchone()
            


            thrd_paid_y = "select name from productservice where Productserviceid=(SELECT Productserviceid from(select invodate,Productserviceid from invoice GROUP BY Productserviceid HAVING invodate BETWEEN %s and %s ORDER by COUNT(Productserviceid) DESC LIMIT 1)as lkiii)"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(thrd_paid_y,inv_valuz)

            paid_thrd_y= fbcursor.fetchone()

            figlast = plt.figure(figsize=(9, 4), dpi=80)

            x=paid_thrd_y
            y=paid_thrd_x   
            plt.barh(x,y, label="Top Product Salesss", color="blue") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.xaxis.grid()
            

            canvasbar = FigureCanvasTkAgg(figlast, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=650, y=370)

            lbl_invdtt2 =Label(reportframe, text="Screen Charts", bg="white" , font=("arial", 16))
            lbl_invdtt2.place(x=2, y=85)
            # def my_popup(event):
            #     my_menu.tk_popup(event.x_root, event.y_root)
                
            # my_menu= Menu(canvasbar, tearoff=False)
            # my_menu.add_command(label="Refresh Chart", command="run")
            # my_menu.add_separator()
            # my_menu.add_command(label="Copy Chart To Clipboard", command="pr")
            # my_menu.add_separator()
            # my_menu.add_command(label="Save Chart As Image", command='emailrp')
            # my_menu.add_separator()
            # my_menu.add_command(label="Print Chart", command="excel")
            # canvasbar.bind("<Button-3>", my_popup)

        else:
            sql_paid = "SELECT SUM(invoicetot)from invoice"
            fbcursor.execute(sql_paid)
            invoice= fbcursor.fetchone()

            x_axis = "SELECT invodate from invoice WHERE invoicetot=(SELECT MAX(invoicetot) from invoice)"
            fbcursor.execute(x_axis)
            axis_x= fbcursor.fetchone()



            sql_company = "SELECT SUM(totpaid)from invoice"
            fbcursor.execute(sql_company)
            paid= fbcursor.fetchone()



            sql_outstanding = "SELECT SUM(balance)from invoice"
            fbcursor.execute(sql_outstanding)
            outstanding= fbcursor.fetchone()


            frame = Frame(
                    reportframe,
                    width=1380,
                    height=1000,
                    bg='#b3b3b3',
                    )
            frame.pack(expand=True, fill=BOTH,  padx=0, pady=0)
                
            frame.pack()


            x=datetime.today()

            y=0

            x=axis_x
            figfirst = plt.figure(figsize=(17, 3.58), dpi=80)
            plt.bar(x,y, label="Invoice", color="orange")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()

            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)




            #**************add dates********

            dates=axis_x[0]+timedelta(days=2)

            y=0
            x=dates
            plt.bar(x,y, label="Outstanding", color="blue")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)


            dates3=axis_x[0]-timedelta(days=2)
            y=0
            x=dates3
            plt.bar(x,y, label="Paid", color="green") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)

            #used to display chart in our frame
            canvasbar = FigureCanvasTkAgg(figfirst, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=0, y=85) # show the barchart on the ouput window

            #second graph

            sec_paid = "SELECT MAX(invoicetot) from invoice"
            fbcursor.execute(sec_paid)
            paid_sec_x= fbcursor.fetchone()

            sec_paid_y = "SELECT businessname from invoice WHERE invoicetot= (SELECT MAX(invoicetot) from invoice)"

            fbcursor.execute(sec_paid_y)

            paid_sec_y= fbcursor.fetchone()


            figsecond = plt.figure(figsize=(9, 4), dpi=80)

            x=0
            y=paid_sec_x
            plt.barh(x,y, label="Top Billed Customer", color="orange") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.xaxis.grid()


            canvasbar = FigureCanvasTkAgg(figsecond, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=0, y=370)

            # #second graph

            thrd_paid = "SELECT MAX(unitprice) from productservice"
            fbcursor.execute(thrd_paid)
            paid_thrd_x= fbcursor.fetchone()


            thrd_paid_y = "SELECT name from productservice WHERE unitprice= (SELECT MAX(unitprice) from productservice)"

            fbcursor.execute(thrd_paid_y)

            paid_thrd_y= fbcursor.fetchone()

            figlast = plt.figure(figsize=(9, 4), dpi=80)

            x=0
            y=paid_thrd_x   
            plt.barh(x,y, label="Top Product Sale", color="blue") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.xaxis.grid()
            

            canvasbar = FigureCanvasTkAgg(figlast, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=650, y=370)

        lbl_invdtt2 =Label(reportframe, text="Screen Charts", bg="white" , font=("arial", 16))
        lbl_invdtt2.place(x=2, y=85)

        irwcuw1 = Label(reportframe,text="                                                                                               ", bg="white")
        irwcuw1.place(x=1135, y=97)
        lbl_invdtt2 =Label(reportframe, text="Right Click on Preview For More Options", bg="white" , font=("arial",8 ))
        lbl_invdtt2.place(x=1140, y=97)

            
        

    #--------------------------------------------------------------------------------------------------------------
    elif rth=="Year To Date":
        
        
        if company is not None:
            test_date=pendulum.today().date()
            start = test_date.start_of('year')
            rp_scr_frm.delete(0,'end')
            rp_scr_frm.insert(0, start)

            cr=date.today()
            rp_sc_to.delete(0,'end')
            rp_sc_to.insert(0, cr)
            
            lscr=start
            lscr1=cr

            var_1=start
            var_2=cr
            
            sql_paid ="SELECT SUM(invoicetot)from invoice WHERE invodate BETWEEN %s and %s"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(sql_paid,inv_valuz)
            invoice= fbcursor.fetchone()

            x_axis = "SELECT invodate from invoice WHERE invoicetot=(SELECT MAX(invoicetot) from invoice WHERE invodate BETWEEN %s and %s)"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(x_axis, inv_valuz)
            axis_x= fbcursor.fetchone()



            sql_company = "SELECT SUM(totpaid)from invoice WHERE invodate BETWEEN %s and %s"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(sql_company,inv_valuz)
            paid= fbcursor.fetchone()



            sql_outstanding = "SELECT SUM(balance)from invoice WHERE invodate BETWEEN %s and %s"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(sql_outstanding,inv_valuz)
            outstanding= fbcursor.fetchone()


            frame = Frame(
                    reportframe,
                    width=1380,
                    height=1000,
                    bg='#b3b3b3',
                    )
            frame.pack(expand=True, fill=BOTH,  padx=0, pady=0)
                
            frame.pack()


            x=lscr1
           
            y=invoice

            x=axis_x
            figfirst = plt.figure(figsize=(17, 3.58), dpi=80)
            plt.bar(x,y, label="Invoice", color="orange")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()

            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)




            #**************add dates********

            dates=axis_x[0]+timedelta(days=2)

            y=outstanding
            x=dates
            plt.bar(x,y, label="Outstanding", color="blue")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)


            dates3=axis_x[0]-timedelta(days=2)
            y=paid
            x=dates3
            plt.bar(x,y, label="Paid", color="green") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)

            #used to display chart in our frame
            canvasbar = FigureCanvasTkAgg(figfirst, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=0, y=85) # show the barchart on the ouput window

            #second graph

            sec_paid = "SELECT invoicetot from (select invodate, invoicetot from invoice  GROUP BY businessname having invodate BETWEEN %s and %s ORDER by COUNT(businessname) DESC LIMIT 1)as sec"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(sec_paid,inv_valuz)
            paid_sec_x= fbcursor.fetchone()

            


            sec_paid_y = "SELECT businessname from (select invodate, businessname from invoice  GROUP BY businessname having invodate BETWEEN %s and %s ORDER by COUNT(businessname) DESC LIMIT 1)as sec"
            inv_valuz=(var_1,var_2)

            fbcursor.execute(sec_paid_y,inv_valuz)

            paid_sec_y= fbcursor.fetchone()

            


            figsecond = plt.figure(figsize=(9, 4), dpi=80)

            x=paid_sec_y
            y=paid_sec_x
            plt.barh(x,y, label="Top Billed Customer", color="orange") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.xaxis.grid()


            canvasbar = FigureCanvasTkAgg(figsecond, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=0, y=370)

            # #second graph

            thrd_paid = "SELECT invoicetot from(select invodate,invoicetot from invoice GROUP BY Productserviceid HAVING invodate BETWEEN %s and %s ORDER by COUNT(Productserviceid) DESC LIMIT 1)as lkiii"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(thrd_paid,inv_valuz)
            paid_thrd_x= fbcursor.fetchone()
            


            thrd_paid_y = "select name from productservice where Productserviceid=(SELECT Productserviceid from(select invodate,Productserviceid from invoice GROUP BY Productserviceid HAVING invodate BETWEEN %s and %s ORDER by COUNT(Productserviceid) DESC LIMIT 1)as lkiii)"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(thrd_paid_y,inv_valuz)

            paid_thrd_y= fbcursor.fetchone()


            figlast = plt.figure(figsize=(9, 4), dpi=80)

            x=paid_thrd_y
            y=paid_thrd_x   
            plt.barh(x,y, label="Top Product Sale", color="blue") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.xaxis.grid()
            

            canvasbar = FigureCanvasTkAgg(figlast, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=650, y=370)

            lbl_invdtt2 =Label(reportframe, text="Screen Charts", bg="white" , font=("arial", 16))
            lbl_invdtt2.place(x=2, y=85)
            # def my_popup(event):
            #     my_menu.tk_popup(event.x_root, event.y_root)
                
            # my_menu= Menu(canvasbar, tearoff=False)
            # my_menu.add_command(label="Refresh Chart", command="run")
            # my_menu.add_separator()
            # my_menu.add_command(label="Copy Chart To Clipboard", command="pr")
            # my_menu.add_separator()
            # my_menu.add_command(label="Save Chart As Image", command='emailrp')
            # my_menu.add_separator()
            # my_menu.add_command(label="Print Chart", command="excel")
            # canvasbar.bind("<Button-3>", my_popup)

        else:
            sql_paid = "SELECT SUM(invoicetot)from invoice"
            fbcursor.execute(sql_paid)
            invoice= fbcursor.fetchone()

            x_axis = "SELECT invodate from invoice WHERE invoicetot=(SELECT MAX(invoicetot) from invoice)"
            fbcursor.execute(x_axis)
            axis_x= fbcursor.fetchone()



            sql_company = "SELECT SUM(totpaid)from invoice"
            fbcursor.execute(sql_company)
            paid= fbcursor.fetchone()



            sql_outstanding = "SELECT SUM(balance)from invoice"
            fbcursor.execute(sql_outstanding)
            outstanding= fbcursor.fetchone()


            frame = Frame(
                    reportframe,
                    width=1380,
                    height=1000,
                    bg='#b3b3b3',
                    )
            frame.pack(expand=True, fill=BOTH,  padx=0, pady=0)
                
            frame.pack()


            x=datetime.today()

            y=0

            x=axis_x
            figfirst = plt.figure(figsize=(17, 3.58), dpi=80)
            plt.bar(x,y, label="Invoice", color="orange")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()

            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)




            #**************add dates********

            dates=axis_x[0]+timedelta(days=2)

            y=0
            x=dates
            plt.bar(x,y, label="Outstanding", color="blue")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)


            dates3=axis_x[0]-timedelta(days=2)
            y=0
            x=dates3
            plt.bar(x,y, label="Paid", color="green") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)

            #used to display chart in our frame
            canvasbar = FigureCanvasTkAgg(figfirst, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=0, y=85) # show the barchart on the ouput window

            #second graph

            sec_paid = "SELECT MAX(invoicetot) from invoice"
            fbcursor.execute(sec_paid)
            paid_sec_x= fbcursor.fetchone()

            sec_paid_y = "SELECT businessname from invoice WHERE invoicetot= (SELECT MAX(invoicetot) from invoice)"

            fbcursor.execute(sec_paid_y)

            paid_sec_y= fbcursor.fetchone()


            figsecond = plt.figure(figsize=(9, 4), dpi=80)

            x=0
            y=paid_sec_x
            plt.barh(x,y, label="Top Billed Customer", color="orange") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.xaxis.grid()


            canvasbar = FigureCanvasTkAgg(figsecond, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=0, y=370)

            # #second graph

            thrd_paid = "SELECT MAX(unitprice) from productservice"
            fbcursor.execute(thrd_paid)
            paid_thrd_x= fbcursor.fetchone()


            thrd_paid_y = "SELECT name from productservice WHERE unitprice= (SELECT MAX(unitprice) from productservice)"

            fbcursor.execute(thrd_paid_y)

            paid_thrd_y= fbcursor.fetchone()

            figlast = plt.figure(figsize=(9, 4), dpi=80)

            x=0
            y=paid_thrd_x   
            plt.barh(x,y, label="Top Product Sale", color="blue") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.xaxis.grid()
            

            canvasbar = FigureCanvasTkAgg(figlast, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=650, y=370)

            lbl_invdtt2 =Label(reportframe, text="Screen Charts", bg="white" , font=("arial", 16))
            lbl_invdtt2.place(x=2, y=85)

        irwcuw1 = Label(reportframe,text="                                                                                               ", bg="white")
        irwcuw1.place(x=1135, y=97)
        lbl_invdtt2 =Label(reportframe, text="Right Click on Preview For More Options", bg="white" , font=("arial",8 ))
        lbl_invdtt2.place(x=1140, y=97)

           
        #===============================================================================================
    elif rth=="Current year":
        

        
        if company is not None:
            test_date=pendulum.today().date()
            start = test_date.start_of('year')
            rp_scr_frm.delete(0,'end')
            rp_scr_frm.insert(0, start)

            test_date_end=pendulum.today().date()
            end = test_date_end.end_of('year')
            rp_sc_to.delete(0,'end')
            rp_sc_to.insert(0, end)

            lscr=start
            lscr1=end

            var_1=start
            var_2=end
            
            sql_paid ="SELECT SUM(invoicetot)from invoice WHERE invodate BETWEEN %s and %s"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(sql_paid,inv_valuz)
            invoice= fbcursor.fetchone()

            x_axis = "SELECT invodate from invoice WHERE invoicetot=(SELECT MAX(invoicetot) from invoice WHERE invodate BETWEEN %s and %s)"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(x_axis, inv_valuz)
            axis_x= fbcursor.fetchone()



            sql_company = "SELECT SUM(totpaid)from invoice WHERE invodate BETWEEN %s and %s"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(sql_company,inv_valuz)
            paid= fbcursor.fetchone()



            sql_outstanding = "SELECT SUM(balance)from invoice WHERE invodate BETWEEN %s and %s"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(sql_outstanding,inv_valuz)
            outstanding= fbcursor.fetchone()


            frame = Frame(
                    reportframe,
                    width=1380,
                    height=1000,
                    bg='#b3b3b3',
                    )
            frame.pack(expand=True, fill=BOTH,  padx=0, pady=0)
                
            frame.pack()


            x=lscr1
           
            y=invoice

            x=axis_x
            figfirst = plt.figure(figsize=(17, 3.58), dpi=80)
            plt.bar(x,y, label="Invoice", color="orange")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()

            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)




            #**************add dates********

            dates=axis_x[0]+timedelta(days=2)

            y=outstanding
            x=dates
            plt.bar(x,y, label="Outstanding", color="blue")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)


            dates3=axis_x[0]-timedelta(days=2)
            y=paid
            x=dates3
            plt.bar(x,y, label="Paid", color="green") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)

            #used to display chart in our frame
            canvasbar = FigureCanvasTkAgg(figfirst, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=0, y=85) # show the barchart on the ouput window

            #second graph

            sec_paid = "SELECT invoicetot from (select invodate, invoicetot from invoice  GROUP BY businessname having invodate BETWEEN %s and %s ORDER by COUNT(businessname) DESC LIMIT 1)as sec"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(sec_paid,inv_valuz)
            paid_sec_x= fbcursor.fetchone()

            


            sec_paid_y = "SELECT businessname from (select invodate, businessname from invoice  GROUP BY businessname having invodate BETWEEN %s and %s ORDER by COUNT(businessname) DESC LIMIT 1)as sec"
            inv_valuz=(var_1,var_2)

            fbcursor.execute(sec_paid_y,inv_valuz)

            paid_sec_y= fbcursor.fetchone()

            


            figsecond = plt.figure(figsize=(9, 4), dpi=80)

            x=paid_sec_y
            y=paid_sec_x
            plt.barh(x,y, label="Top Billed Customer", color="orange") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.xaxis.grid()


            canvasbar = FigureCanvasTkAgg(figsecond, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=0, y=370)

            # #second graph

            thrd_paid = "SELECT invoicetot from(select invodate,invoicetot from invoice GROUP BY Productserviceid HAVING invodate BETWEEN %s and %s ORDER by COUNT(Productserviceid) DESC LIMIT 1)as lkiii"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(thrd_paid,inv_valuz)
            paid_thrd_x= fbcursor.fetchone()
            


            thrd_paid_y = "select name from productservice where Productserviceid=(SELECT Productserviceid from(select invodate,Productserviceid from invoice GROUP BY Productserviceid HAVING invodate BETWEEN %s and %s ORDER by COUNT(Productserviceid) DESC LIMIT 1)as lkiii)"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(thrd_paid_y,inv_valuz)

            paid_thrd_y= fbcursor.fetchone()

            figlast = plt.figure(figsize=(9, 4), dpi=80)

            x=paid_thrd_y
            y=paid_thrd_x   
            plt.barh(x,y, label="Top Product Sale", color="blue") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.xaxis.grid()
            

            canvasbar = FigureCanvasTkAgg(figlast, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=650, y=370)

            lbl_invdtt2 =Label(reportframe, text="Screen Charts", bg="white" , font=("arial", 16))
            lbl_invdtt2.place(x=2, y=85)
            # def my_popup(event):
            #     my_menu.tk_popup(event.x_root, event.y_root)
                
            # my_menu= Menu(canvasbar, tearoff=False)
            # my_menu.add_command(label="Refresh Chart", command="run")
            # my_menu.add_separator()
            # my_menu.add_command(label="Copy Chart To Clipboard", command="pr")
            # my_menu.add_separator()
            # my_menu.add_command(label="Save Chart As Image", command='emailrp')
            # my_menu.add_separator()
            # my_menu.add_command(label="Print Chart", command="excel")
            # canvasbar.bind("<Button-3>", my_popup)

        else:
            sql_paid = "SELECT SUM(invoicetot)from invoice"
            fbcursor.execute(sql_paid)
            invoice= fbcursor.fetchone()

            x_axis = "SELECT invodate from invoice WHERE invoicetot=(SELECT MAX(invoicetot) from invoice)"
            fbcursor.execute(x_axis)
            axis_x= fbcursor.fetchone()



            sql_company = "SELECT SUM(totpaid)from invoice"
            fbcursor.execute(sql_company)
            paid= fbcursor.fetchone()



            sql_outstanding = "SELECT SUM(balance)from invoice"
            fbcursor.execute(sql_outstanding)
            outstanding= fbcursor.fetchone()


            frame = Frame(
                    reportframe,
                    width=1380,
                    height=1000,
                    bg='#b3b3b3',
                    )
            frame.pack(expand=True, fill=BOTH,  padx=0, pady=0)
                
            frame.pack()


            x=datetime.today()

            y=0

            x=axis_x
            figfirst = plt.figure(figsize=(17, 3.58), dpi=80)
            plt.bar(x,y, label="Invoice", color="orange")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()

            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)




            #**************add dates********

            dates=axis_x[0]+timedelta(days=2)

            y=0
            x=dates
            plt.bar(x,y, label="Outstanding", color="blue")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)


            dates3=axis_x[0]-timedelta(days=2)
            y=0
            x=dates3
            plt.bar(x,y, label="Paid", color="green") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)

            #used to display chart in our frame
            canvasbar = FigureCanvasTkAgg(figfirst, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=0, y=85) # show the barchart on the ouput window

            #second graph

            sec_paid = "SELECT MAX(invoicetot) from invoice"
            fbcursor.execute(sec_paid)
            paid_sec_x= fbcursor.fetchone()

            sec_paid_y = "SELECT businessname from invoice WHERE invoicetot= (SELECT MAX(invoicetot) from invoice)"

            fbcursor.execute(sec_paid_y)

            paid_sec_y= fbcursor.fetchone()


            figsecond = plt.figure(figsize=(9, 4), dpi=80)

            x=0
            y=paid_sec_x
            plt.barh(x,y, label="Top Billed Customer", color="orange") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.xaxis.grid()


            canvasbar = FigureCanvasTkAgg(figsecond, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=0, y=370)

            # #second graph

            thrd_paid = "SELECT MAX(unitprice) from productservice"
            fbcursor.execute(thrd_paid)
            paid_thrd_x= fbcursor.fetchone()


            thrd_paid_y = "SELECT name from productservice WHERE unitprice= (SELECT MAX(unitprice) from productservice)"

            fbcursor.execute(thrd_paid_y)

            paid_thrd_y= fbcursor.fetchone()

            figlast = plt.figure(figsize=(9, 4), dpi=80)

            x=0
            y=paid_thrd_x   
            plt.barh(x,y, label="Top Product Sale", color="blue") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.xaxis.grid()
            

            canvasbar = FigureCanvasTkAgg(figlast, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=650, y=370)

            lbl_invdtt2 =Label(reportframe, text="Screen Charts", bg="white" , font=("arial", 16))
            lbl_invdtt2.place(x=2, y=85)

        irwcuw1 = Label(reportframe,text="                                                                                               ", bg="white")
        irwcuw1.place(x=1135, y=97)
        lbl_invdtt2 =Label(reportframe, text="Right Click on Preview For More Options", bg="white" , font=("arial",8 ))
        lbl_invdtt2.place(x=1140, y=97)

            
    #==============================================================================================================
    elif rth=="Last 6 Month":
            
        
        if company is not None:
            in_dat = (datetime.now()-relativedelta(months=6)).strftime("%Y-%m-%d")
            # given_date = datetime.today().month()
            # in_dat = given_date.replace(months=3)
            
            rp_scr_frm.delete(0,'end')
            rp_scr_frm.insert(0, in_dat)

            cr=date.today()
            rp_sc_to.delete(0,'end')
            rp_sc_to.insert(0, cr)

            lscr=in_dat
            
            lscr1=cr

            var_1=in_dat
            var_2=cr
            
            sql_paid ="SELECT SUM(invoicetot)from invoice WHERE invodate BETWEEN %s and %s"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(sql_paid,inv_valuz)
            invoice= fbcursor.fetchone()

            x_axis = "SELECT invodate from invoice WHERE invoicetot=(SELECT MAX(invoicetot) from invoice WHERE invodate BETWEEN %s and %s)"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(x_axis, inv_valuz)
            axis_x= fbcursor.fetchone()



            sql_company = "SELECT SUM(totpaid)from invoice WHERE invodate BETWEEN %s and %s"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(sql_company,inv_valuz)
            paid= fbcursor.fetchone()



            sql_outstanding = "SELECT SUM(balance)from invoice WHERE invodate BETWEEN %s and %s"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(sql_outstanding,inv_valuz)
            outstanding= fbcursor.fetchone()


            frame = Frame(
                    reportframe,
                    width=1380,
                    height=1000,
                    bg='#b3b3b3',
                    )
            frame.pack(expand=True, fill=BOTH,  padx=0, pady=0)
                
            frame.pack()


            x=lscr1
           
            y=invoice

            x=axis_x
            figfirst = plt.figure(figsize=(17, 3.58), dpi=80)
            plt.bar(x,y, label="Invoice", color="orange")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()

            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)




            #**************add dates********

            dates=axis_x[0]+timedelta(days=2)

            y=outstanding
            x=dates
            plt.bar(x,y, label="Outstanding", color="blue")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)


            dates3=axis_x[0]-timedelta(days=2)
            y=paid
            x=dates3
            plt.bar(x,y, label="Paid", color="green") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)

            #used to display chart in our frame
            canvasbar = FigureCanvasTkAgg(figfirst, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=0, y=85) # show the barchart on the ouput window

            #second graph

            sec_paid = "SELECT invoicetot from (select invodate, invoicetot from invoice  GROUP BY businessname having invodate BETWEEN %s and %s ORDER by COUNT(businessname) DESC LIMIT 1)as sec"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(sec_paid,inv_valuz)
            paid_sec_x= fbcursor.fetchone()

            


            sec_paid_y = "SELECT businessname from (select invodate, businessname from invoice  GROUP BY businessname having invodate BETWEEN %s and %s ORDER by COUNT(businessname) DESC LIMIT 1)as sec"
            inv_valuz=(var_1,var_2)

            fbcursor.execute(sec_paid_y,inv_valuz)

            paid_sec_y= fbcursor.fetchone()

            


            figsecond = plt.figure(figsize=(9, 4), dpi=80)

            x=paid_sec_y
            y=paid_sec_x
            plt.barh(x,y, label="Top Billed Customer", color="orange") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.xaxis.grid()


            canvasbar = FigureCanvasTkAgg(figsecond, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=0, y=370)

            # #second graph

            thrd_paid = "SELECT invoicetot from(select invodate,invoicetot from invoice GROUP BY Productserviceid HAVING invodate BETWEEN %s and %s ORDER by COUNT(Productserviceid) DESC LIMIT 1)as lkiii"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(thrd_paid,inv_valuz)
            paid_thrd_x= fbcursor.fetchone()
            


            thrd_paid_y = "select name from productservice where Productserviceid=(SELECT Productserviceid from(select invodate,Productserviceid from invoice GROUP BY Productserviceid HAVING invodate BETWEEN %s and %s ORDER by COUNT(Productserviceid) DESC LIMIT 1)as lkiii)"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(thrd_paid_y,inv_valuz)

            paid_thrd_y= fbcursor.fetchone()


            figlast = plt.figure(figsize=(9, 4), dpi=80)

            x=paid_thrd_y
            y=paid_thrd_x   
            plt.barh(x,y, label="Top Product Sale", color="blue") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.xaxis.grid()
            

            canvasbar = FigureCanvasTkAgg(figlast, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=650, y=370)

            lbl_invdtt2 =Label(reportframe, text="Screen Charts", bg="white" , font=("arial", 16))
            lbl_invdtt2.place(x=2, y=85)
            # def my_popup(event):
            #     my_menu.tk_popup(event.x_root, event.y_root)
                
            # my_menu= Menu(canvasbar, tearoff=False)
            # my_menu.add_command(label="Refresh Chart", command="run")
            # my_menu.add_separator()
            # my_menu.add_command(label="Copy Chart To Clipboard", command="pr")
            # my_menu.add_separator()
            # my_menu.add_command(label="Save Chart As Image", command='emailrp')
            # my_menu.add_separator()
            # my_menu.add_command(label="Print Chart", command="excel")
            # canvasbar.bind("<Button-3>", my_popup)

        else:
            sql_paid = "SELECT SUM(invoicetot)from invoice"
            fbcursor.execute(sql_paid)
            invoice= fbcursor.fetchone()

            x_axis = "SELECT invodate from invoice WHERE invoicetot=(SELECT MAX(invoicetot) from invoice)"
            fbcursor.execute(x_axis)
            axis_x= fbcursor.fetchone()



            sql_company = "SELECT SUM(totpaid)from invoice"
            fbcursor.execute(sql_company)
            paid= fbcursor.fetchone()



            sql_outstanding = "SELECT SUM(balance)from invoice"
            fbcursor.execute(sql_outstanding)
            outstanding= fbcursor.fetchone()


            frame = Frame(
                    reportframe,
                    width=1380,
                    height=1000,
                    bg='#b3b3b3',
                    )
            frame.pack(expand=True, fill=BOTH,  padx=0, pady=0)
                
            frame.pack()


            x=datetime.today()

            y=0

            x=axis_x
            figfirst = plt.figure(figsize=(17, 3.58), dpi=80)
            plt.bar(x,y, label="Invoice", color="orange")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()

            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)




            #**************add dates********

            dates=axis_x[0]+timedelta(days=2)

            y=0
            x=dates
            plt.bar(x,y, label="Outstanding", color="blue")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)


            dates3=axis_x[0]-timedelta(days=2)
            y=0
            x=dates3
            plt.bar(x,y, label="Paid", color="green") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)

            #used to display chart in our frame
            canvasbar = FigureCanvasTkAgg(figfirst, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=0, y=85) # show the barchart on the ouput window

            #second graph

            sec_paid = "SELECT MAX(invoicetot) from invoice"
            fbcursor.execute(sec_paid)
            paid_sec_x= fbcursor.fetchone()

            sec_paid_y = "SELECT businessname from invoice WHERE invoicetot= (SELECT MAX(invoicetot) from invoice)"

            fbcursor.execute(sec_paid_y)

            paid_sec_y= fbcursor.fetchone()


            figsecond = plt.figure(figsize=(9, 4), dpi=80)

            x=0
            y=paid_sec_x
            plt.barh(x,y, label="Top Billed Customer", color="orange") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.xaxis.grid()


            canvasbar = FigureCanvasTkAgg(figsecond, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=0, y=370)

            # #second graph

            thrd_paid = "SELECT MAX(unitprice) from productservice"
            fbcursor.execute(thrd_paid)
            paid_thrd_x= fbcursor.fetchone()


            thrd_paid_y = "SELECT name from productservice WHERE unitprice= (SELECT MAX(unitprice) from productservice)"

            fbcursor.execute(thrd_paid_y)

            paid_thrd_y= fbcursor.fetchone()

            figlast = plt.figure(figsize=(9, 4), dpi=80)

            x=0
            y=paid_thrd_x   
            plt.barh(x,y, label="Top Product Sale", color="blue") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.xaxis.grid()
            

            canvasbar = FigureCanvasTkAgg(figlast, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=650, y=370)

            lbl_invdtt2 =Label(reportframe, text="Screen Charts", bg="white" , font=("arial", 16))
            lbl_invdtt2.place(x=2, y=85)

        irwcuw1 = Label(reportframe,text="                                                                                               ", bg="white")
        irwcuw1.place(x=1135, y=97)
        lbl_invdtt2 =Label(reportframe, text="Right Click on Preview For More Options", bg="white" , font=("arial",8 ))
        lbl_invdtt2.place(x=1140, y=97)

            
        #=====================================================================================================
    elif rth=="Last 12 Month":
        

        
        if company is not None:
            in_dat = (datetime.now()-relativedelta(months=12)).strftime("%Y-%m-%d")
            # given_date = datetime.today().month()
            # in_dat = given_date.replace(months=3)
            
            rp_scr_frm.delete(0,'end')
            rp_scr_frm.insert(0, in_dat)

            cr=date.today()
            rp_sc_to.delete(0,'end')
            rp_sc_to.insert(0, cr)
            

            lscr=in_dat
            
            lscr1=cr

            var_1=in_dat
            var_2=cr
            
            sql_paid ="SELECT SUM(invoicetot)from invoice WHERE invodate BETWEEN %s and %s"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(sql_paid,inv_valuz)
            invoice= fbcursor.fetchone()

            x_axis = "SELECT invodate from invoice WHERE invoicetot=(SELECT MAX(invoicetot) from invoice WHERE invodate BETWEEN %s and %s)"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(x_axis, inv_valuz)
            axis_x= fbcursor.fetchone()



            sql_company = "SELECT SUM(totpaid)from invoice WHERE invodate BETWEEN %s and %s"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(sql_company,inv_valuz)
            paid= fbcursor.fetchone()



            sql_outstanding = "SELECT SUM(balance)from invoice WHERE invodate BETWEEN %s and %s"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(sql_outstanding,inv_valuz)
            outstanding= fbcursor.fetchone()


            frame = Frame(
                    reportframe,
                    width=1380,
                    height=1000,
                    bg='#b3b3b3',
                    )
            frame.pack(expand=True, fill=BOTH,  padx=0, pady=0)
                
            frame.pack()


            x=lscr1
           
            y=invoice

            x=axis_x
            figfirst = plt.figure(figsize=(17, 3.58), dpi=80)
            plt.bar(x,y, label="Invoice", color="orange")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()

            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)




            #**************add dates********

            dates=axis_x[0]+timedelta(days=2)

            y=outstanding
            x=dates
            plt.bar(x,y, label="Outstanding", color="blue")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)


            dates3=axis_x[0]-timedelta(days=2)
            y=paid
            x=dates3
            plt.bar(x,y, label="Paid", color="green") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)

            #used to display chart in our frame
            canvasbar = FigureCanvasTkAgg(figfirst, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=0, y=85) # show the barchart on the ouput window

            #second graph

            sec_paid = "SELECT invoicetot from (select invodate, invoicetot from invoice  GROUP BY businessname having invodate BETWEEN %s and %s ORDER by COUNT(businessname) DESC LIMIT 1)as sec"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(sec_paid,inv_valuz)
            paid_sec_x= fbcursor.fetchone()

            


            sec_paid_y = "SELECT businessname from (select invodate, businessname from invoice  GROUP BY businessname having invodate BETWEEN %s and %s ORDER by COUNT(businessname) DESC LIMIT 1)as sec"
            inv_valuz=(var_1,var_2)

            fbcursor.execute(sec_paid_y,inv_valuz)

            paid_sec_y= fbcursor.fetchone()

            


            figsecond = plt.figure(figsize=(9, 4), dpi=80)

            x=paid_sec_y
            y=paid_sec_x
            plt.barh(x,y, label="Top Billed Customer", color="orange") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.xaxis.grid()


            canvasbar = FigureCanvasTkAgg(figsecond, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=0, y=370)

            # #second graph

            thrd_paid = "SELECT invoicetot from(select invodate,invoicetot from invoice GROUP BY Productserviceid HAVING invodate BETWEEN %s and %s ORDER by COUNT(Productserviceid) DESC LIMIT 1)as lkiii"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(thrd_paid,inv_valuz)
            paid_thrd_x= fbcursor.fetchone()
            


            thrd_paid_y = "select name from productservice where Productserviceid=(SELECT Productserviceid from(select invodate,Productserviceid from invoice GROUP BY Productserviceid HAVING invodate BETWEEN %s and %s ORDER by COUNT(Productserviceid) DESC LIMIT 1)as lkiii)"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(thrd_paid_y,inv_valuz)

            paid_thrd_y= fbcursor.fetchone()


            figlast = plt.figure(figsize=(9, 4), dpi=80)

            x=paid_thrd_y
            y=paid_thrd_x   
            plt.barh(x,y, label="Top Product Sale", color="blue") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.xaxis.grid()
            

            canvasbar = FigureCanvasTkAgg(figlast, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=650, y=370)

            lbl_invdtt2 =Label(reportframe, text="Screen Charts", bg="white" , font=("arial", 16))
            lbl_invdtt2.place(x=2, y=85)
            # def my_popup(event):
            #     my_menu.tk_popup(event.x_root, event.y_root)
                
            # my_menu= Menu(canvasbar, tearoff=False)
            # my_menu.add_command(label="Refresh Chart", command="run")
            # my_menu.add_separator()
            # my_menu.add_command(label="Copy Chart To Clipboard", command="pr")
            # my_menu.add_separator()
            # my_menu.add_command(label="Save Chart As Image", command='emailrp')
            # my_menu.add_separator()
            # my_menu.add_command(label="Print Chart", command="excel")
            # canvasbar.bind("<Button-3>", my_popup)

        else:
            sql_paid = "SELECT SUM(invoicetot)from invoice"
            fbcursor.execute(sql_paid)
            invoice= fbcursor.fetchone()

            x_axis = "SELECT invodate from invoice WHERE invoicetot=(SELECT MAX(invoicetot) from invoice)"
            fbcursor.execute(x_axis)
            axis_x= fbcursor.fetchone()



            sql_company = "SELECT SUM(totpaid)from invoice"
            fbcursor.execute(sql_company)
            paid= fbcursor.fetchone()



            sql_outstanding = "SELECT SUM(balance)from invoice"
            fbcursor.execute(sql_outstanding)
            outstanding= fbcursor.fetchone()


            frame = Frame(
                    reportframe,
                    width=1380,
                    height=1000,
                    bg='#b3b3b3',
                    )
            frame.pack(expand=True, fill=BOTH,  padx=0, pady=0)
                
            frame.pack()


            x=datetime.today()

            y=0

            x=axis_x
            figfirst = plt.figure(figsize=(17, 3.58), dpi=80)
            plt.bar(x,y, label="Invoice", color="orange")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()

            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)




            #**************add dates********

            dates=axis_x[0]+timedelta(days=2)

            y=0
            x=dates
            plt.bar(x,y, label="Outstanding", color="blue")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)


            dates3=axis_x[0]-timedelta(days=2)
            y=0
            x=dates3
            plt.bar(x,y, label="Paid", color="green") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)

            #used to display chart in our frame
            canvasbar = FigureCanvasTkAgg(figfirst, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=0, y=85) # show the barchart on the ouput window

            #second graph

            sec_paid = "SELECT MAX(invoicetot) from invoice"
            fbcursor.execute(sec_paid)
            paid_sec_x= fbcursor.fetchone()

            sec_paid_y = "SELECT businessname from invoice WHERE invoicetot= (SELECT MAX(invoicetot) from invoice)"

            fbcursor.execute(sec_paid_y)

            paid_sec_y= fbcursor.fetchone()


            figsecond = plt.figure(figsize=(9, 4), dpi=80)

            x=0
            y=paid_sec_x
            plt.barh(x,y, label="Top Billed Customer", color="orange") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.xaxis.grid()


            canvasbar = FigureCanvasTkAgg(figsecond, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=0, y=370)

            # #second graph

            thrd_paid = "SELECT MAX(unitprice) from productservice"
            fbcursor.execute(thrd_paid)
            paid_thrd_x= fbcursor.fetchone()


            thrd_paid_y = "SELECT name from productservice WHERE unitprice= (SELECT MAX(unitprice) from productservice)"

            fbcursor.execute(thrd_paid_y)

            paid_thrd_y= fbcursor.fetchone()

            figlast = plt.figure(figsize=(9, 4), dpi=80)

            x=0
            y=paid_thrd_x   
            plt.barh(x,y, label="Top Product Sale", color="blue") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.xaxis.grid()
            

            canvasbar = FigureCanvasTkAgg(figlast, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=650, y=370)

            lbl_invdtt2 =Label(reportframe, text="Screen Charts", bg="white" , font=("arial", 16))
            lbl_invdtt2.place(x=2, y=85)

        irwcuw1 = Label(reportframe,text="                                                                                               ", bg="white")
        irwcuw1.place(x=1135, y=97)
        lbl_invdtt2 =Label(reportframe, text="Right Click on Preview For More Options", bg="white" , font=("arial",8 ))
        lbl_invdtt2.place(x=1140, y=97)

            
        #=================================================================================================
    elif rth=="Last 18 Month":
        
    
        if company is not None:
            in_dat = (datetime.now()-relativedelta(months=18)).strftime("%Y-%m-%d")
            # given_date = datetime.today().month()
            # in_dat = given_date.replace(months=3)
            
            rp_scr_frm.delete(0,'end')
            rp_scr_frm.insert(0, in_dat)

            cr=date.today()
            rp_sc_to.delete(0,'end')
            rp_sc_to.insert(0, cr)

            lscr=in_dat
            
            lscr1=cr

            var_1=in_dat
            var_2=cr
            
            sql_paid ="SELECT SUM(invoicetot)from invoice WHERE invodate BETWEEN %s and %s"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(sql_paid,inv_valuz)
            invoice= fbcursor.fetchone()

            x_axis = "SELECT invodate from invoice WHERE invoicetot=(SELECT MAX(invoicetot) from invoice WHERE invodate BETWEEN %s and %s)"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(x_axis, inv_valuz)
            axis_x= fbcursor.fetchone()



            sql_company = "SELECT SUM(totpaid)from invoice WHERE invodate BETWEEN %s and %s"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(sql_company,inv_valuz)
            paid= fbcursor.fetchone()



            sql_outstanding = "SELECT SUM(balance)from invoice WHERE invodate BETWEEN %s and %s"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(sql_outstanding,inv_valuz)
            outstanding= fbcursor.fetchone()


            frame = Frame(
                    reportframe,
                    width=1380,
                    height=1000,
                    bg='#b3b3b3',
                    )
            frame.pack(expand=True, fill=BOTH,  padx=0, pady=0)
                
            frame.pack()


            x=lscr1
           
            y=invoice

            x=axis_x
            figfirst = plt.figure(figsize=(17, 3.58), dpi=80)
            plt.bar(x,y, label="Invoice", color="orange")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()

            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)




            #**************add dates********

            dates=axis_x[0]+timedelta(days=2)

            y=outstanding
            x=dates
            plt.bar(x,y, label="Outstanding", color="blue")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)


            dates3=axis_x[0]-timedelta(days=2)
            y=paid
            x=dates3
            plt.bar(x,y, label="Paid", color="green") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)

            #used to display chart in our frame
            canvasbar = FigureCanvasTkAgg(figfirst, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=0, y=85) # show the barchart on the ouput window

            #second graph

            sec_paid = "SELECT invoicetot from (select invodate, invoicetot from invoice  GROUP BY businessname having invodate BETWEEN %s and %s ORDER by COUNT(businessname) DESC LIMIT 1)as sec"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(sec_paid,inv_valuz)
            paid_sec_x= fbcursor.fetchone()

            


            sec_paid_y = "SELECT businessname from (select invodate, businessname from invoice  GROUP BY businessname having invodate BETWEEN %s and %s ORDER by COUNT(businessname) DESC LIMIT 1)as sec"
            inv_valuz=(var_1,var_2)

            fbcursor.execute(sec_paid_y,inv_valuz)

            paid_sec_y= fbcursor.fetchone()

            


            figsecond = plt.figure(figsize=(9, 4), dpi=80)

            x=paid_sec_y
            y=paid_sec_x
            plt.barh(x,y, label="Top Billed Customer", color="orange") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.xaxis.grid()


            canvasbar = FigureCanvasTkAgg(figsecond, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=0, y=370)

            # #second graph

            thrd_paid = "SELECT invoicetot from(select invodate,invoicetot from invoice GROUP BY Productserviceid HAVING invodate BETWEEN %s and %s ORDER by COUNT(Productserviceid) DESC LIMIT 1)as lkiii"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(thrd_paid,inv_valuz)
            paid_thrd_x= fbcursor.fetchone()
            


            thrd_paid_y = "select name from productservice where Productserviceid=(SELECT Productserviceid from(select invodate,Productserviceid from invoice GROUP BY Productserviceid HAVING invodate BETWEEN %s and %s ORDER by COUNT(Productserviceid) DESC LIMIT 1)as lkiii)"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(thrd_paid_y,inv_valuz)

            paid_thrd_y= fbcursor.fetchone()


            figlast = plt.figure(figsize=(9, 4), dpi=80)

            x=paid_thrd_y
            y=paid_thrd_x   
            plt.barh(x,y, label="Top Product Sale", color="blue") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.xaxis.grid()
            

            canvasbar = FigureCanvasTkAgg(figlast, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=650, y=370)

            lbl_invdtt2 =Label(reportframe, text="Screen Charts", bg="white" , font=("arial", 16))
            lbl_invdtt2.place(x=2, y=85)
            # def my_popup(event):
            #     my_menu.tk_popup(event.x_root, event.y_root)
                
            # my_menu= Menu(canvasbar, tearoff=False)
            # my_menu.add_command(label="Refresh Chart", command="run")
            # my_menu.add_separator()
            # my_menu.add_command(label="Copy Chart To Clipboard", command="pr")
            # my_menu.add_separator()
            # my_menu.add_command(label="Save Chart As Image", command='emailrp')
            # my_menu.add_separator()
            # my_menu.add_command(label="Print Chart", command="excel")
            # canvasbar.bind("<Button-3>", my_popup)

        else:
            sql_paid = "SELECT SUM(invoicetot)from invoice"
            fbcursor.execute(sql_paid)
            invoice= fbcursor.fetchone()

            x_axis = "SELECT invodate from invoice WHERE invoicetot=(SELECT MAX(invoicetot) from invoice)"
            fbcursor.execute(x_axis)
            axis_x= fbcursor.fetchone()



            sql_company = "SELECT SUM(totpaid)from invoice"
            fbcursor.execute(sql_company)
            paid= fbcursor.fetchone()



            sql_outstanding = "SELECT SUM(balance)from invoice"
            fbcursor.execute(sql_outstanding)
            outstanding= fbcursor.fetchone()


            frame = Frame(
                    reportframe,
                    width=1380,
                    height=1000,
                    bg='#b3b3b3',
                    )
            frame.pack(expand=True, fill=BOTH,  padx=0, pady=0)
                
            frame.pack()


            x=datetime.today()

            y=0

            x=axis_x
            figfirst = plt.figure(figsize=(17, 3.58), dpi=80)
            plt.bar(x,y, label="Invoice", color="orange")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()

            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)




            #**************add dates********

            dates=axis_x[0]+timedelta(days=2)

            y=0
            x=dates
            plt.bar(x,y, label="Outstanding", color="blue")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)


            dates3=axis_x[0]-timedelta(days=2)
            y=0
            x=dates3
            plt.bar(x,y, label="Paid", color="green") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)

            #used to display chart in our frame
            canvasbar = FigureCanvasTkAgg(figfirst, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=0, y=85) # show the barchart on the ouput window

            #second graph

            sec_paid = "SELECT MAX(invoicetot) from invoice"
            fbcursor.execute(sec_paid)
            paid_sec_x= fbcursor.fetchone()

            sec_paid_y = "SELECT businessname from invoice WHERE invoicetot= (SELECT MAX(invoicetot) from invoice)"

            fbcursor.execute(sec_paid_y)

            paid_sec_y= fbcursor.fetchone()


            figsecond = plt.figure(figsize=(9, 4), dpi=80)

            x=0
            y=paid_sec_x
            plt.barh(x,y, label="Top Billed Customer", color="orange") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.xaxis.grid()


            canvasbar = FigureCanvasTkAgg(figsecond, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=0, y=370)

            # #second graph

            thrd_paid = "SELECT MAX(unitprice) from productservice"
            fbcursor.execute(thrd_paid)
            paid_thrd_x= fbcursor.fetchone()


            thrd_paid_y = "SELECT name from productservice WHERE unitprice= (SELECT MAX(unitprice) from productservice)"

            fbcursor.execute(thrd_paid_y)

            paid_thrd_y= fbcursor.fetchone()

            figlast = plt.figure(figsize=(9, 4), dpi=80)

            x=0
            y=paid_thrd_x   
            plt.barh(x,y, label="Top Product Sale", color="blue") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.xaxis.grid()
            

            canvasbar = FigureCanvasTkAgg(figlast, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=650, y=370)

            lbl_invdtt2 =Label(reportframe, text="Screen Charts", bg="white" , font=("arial", 16))
            lbl_invdtt2.place(x=2, y=85)

        irwcuw1 = Label(reportframe,text="                                                                                               ", bg="white")
        irwcuw1.place(x=1135, y=97)
        lbl_invdtt2 =Label(reportframe, text="Right Click on Preview For More Options", bg="white" , font=("arial",8 ))
        lbl_invdtt2.place(x=1140, y=97)

            
    
    #=====================================================================================================
    elif rth=="Last 24 Month":
       
        
        if company is not None:
            in_dat = (datetime.now()-relativedelta(months=6)).strftime("%Y-%m-%d")
            # given_date = datetime.today().month()
            # in_dat = given_date.replace(months=3)
            
            rp_scr_frm.delete(0,'end')
            rp_scr_frm.insert(0, in_dat)

            cr=date.today()
            rp_sc_to.delete(0,'end')
            rp_sc_to.insert(0, cr)

            lscr=in_dat
            
            lscr1=cr

            var_1=in_dat
            var_2=cr
            
            sql_paid ="SELECT SUM(invoicetot)from invoice WHERE invodate BETWEEN %s and %s"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(sql_paid,inv_valuz)
            invoice= fbcursor.fetchone()

            x_axis = "SELECT invodate from invoice WHERE invoicetot=(SELECT MAX(invoicetot) from invoice WHERE invodate BETWEEN %s and %s)"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(x_axis, inv_valuz)
            axis_x= fbcursor.fetchone()



            sql_company = "SELECT SUM(totpaid)from invoice WHERE invodate BETWEEN %s and %s"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(sql_company,inv_valuz)
            paid= fbcursor.fetchone()



            sql_outstanding = "SELECT SUM(balance)from invoice WHERE invodate BETWEEN %s and %s"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(sql_outstanding,inv_valuz)
            outstanding= fbcursor.fetchone()


            frame = Frame(
                    reportframe,
                    width=1380,
                    height=1000,
                    bg='#b3b3b3',
                    )
            frame.pack(expand=True, fill=BOTH,  padx=0, pady=0)
                
            frame.pack()


            x=lscr1
           
            y=invoice

            x=axis_x
            figfirst = plt.figure(figsize=(17, 3.58), dpi=80)
            plt.bar(x,y, label="Invoice", color="orange")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()

            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)




            #**************add dates********

            dates=axis_x[0]+timedelta(days=2)

            y=outstanding
            x=dates
            plt.bar(x,y, label="Outstanding", color="blue")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)


            dates3=axis_x[0]-timedelta(days=2)
            y=paid
            x=dates3
            plt.bar(x,y, label="Paid", color="green") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)

            #used to display chart in our frame
            canvasbar = FigureCanvasTkAgg(figfirst, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=0, y=85) # show the barchart on the ouput window

            #second graph

            sec_paid = "SELECT invoicetot from (select invodate, invoicetot from invoice  GROUP BY businessname having invodate BETWEEN %s and %s ORDER by COUNT(businessname) DESC LIMIT 1)as sec"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(sec_paid,inv_valuz)
            paid_sec_x= fbcursor.fetchone()

            


            sec_paid_y = "SELECT businessname from (select invodate, businessname from invoice  GROUP BY businessname having invodate BETWEEN %s and %s ORDER by COUNT(businessname) DESC LIMIT 1)as sec"
            inv_valuz=(var_1,var_2)

            fbcursor.execute(sec_paid_y,inv_valuz)

            paid_sec_y= fbcursor.fetchone()

            


            figsecond = plt.figure(figsize=(9, 4), dpi=80)

            x=paid_sec_y
            y=paid_sec_x
            plt.barh(x,y, label="Top Billed Customer", color="orange") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.xaxis.grid()


            canvasbar = FigureCanvasTkAgg(figsecond, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=0, y=370)

            # #second graph

            thrd_paid = "SELECT invoicetot from(select invodate,invoicetot from invoice GROUP BY Productserviceid HAVING invodate BETWEEN %s and %s ORDER by COUNT(Productserviceid) DESC LIMIT 1)as lkiii"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(thrd_paid,inv_valuz)
            paid_thrd_x= fbcursor.fetchone()
            


            thrd_paid_y = "select name from productservice where Productserviceid=(SELECT Productserviceid from(select invodate,Productserviceid from invoice GROUP BY Productserviceid HAVING invodate BETWEEN %s and %s ORDER by COUNT(Productserviceid) DESC LIMIT 1)as lkiii)"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(thrd_paid_y,inv_valuz)

            paid_thrd_y= fbcursor.fetchone()

            figlast = plt.figure(figsize=(9, 4), dpi=80)

            x=paid_thrd_y
            y=paid_thrd_x   
            plt.barh(x,y, label="Top Product Sale", color="blue") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.xaxis.grid()
            

            canvasbar = FigureCanvasTkAgg(figlast, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=650, y=370)

            lbl_invdtt2 =Label(reportframe, text="Screen Charts", bg="white" , font=("arial", 16))
            lbl_invdtt2.place(x=2, y=85)
            # def my_popup(event):
            #     my_menu.tk_popup(event.x_root, event.y_root)
                
            # my_menu= Menu(canvasbar, tearoff=False)
            # my_menu.add_command(label="Refresh Chart", command="run")
            # my_menu.add_separator()
            # my_menu.add_command(label="Copy Chart To Clipboard", command="pr")
            # my_menu.add_separator()
            # my_menu.add_command(label="Save Chart As Image", command='emailrp')
            # my_menu.add_separator()
            # my_menu.add_command(label="Print Chart", command="excel")
            # canvasbar.bind("<Button-3>", my_popup)

        else:
            sql_paid = "SELECT SUM(invoicetot)from invoice"
            fbcursor.execute(sql_paid)
            invoice= fbcursor.fetchone()

            x_axis = "SELECT invodate from invoice WHERE invoicetot=(SELECT MAX(invoicetot) from invoice)"
            fbcursor.execute(x_axis)
            axis_x= fbcursor.fetchone()



            sql_company = "SELECT SUM(totpaid)from invoice"
            fbcursor.execute(sql_company)
            paid= fbcursor.fetchone()



            sql_outstanding = "SELECT SUM(balance)from invoice"
            fbcursor.execute(sql_outstanding)
            outstanding= fbcursor.fetchone()


            frame = Frame(
                    reportframe,
                    width=1380,
                    height=1000,
                    bg='#b3b3b3',
                    )
            frame.pack(expand=True, fill=BOTH,  padx=0, pady=0)
                
            frame.pack()


            x=datetime.today()

            y=0

            x=axis_x
            figfirst = plt.figure(figsize=(17, 3.58), dpi=80)
            plt.bar(x,y, label="Invoice", color="orange")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()

            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)




            #**************add dates********

            dates=axis_x[0]+timedelta(days=2)

            y=0
            x=dates
            plt.bar(x,y, label="Outstanding", color="blue")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)


            dates3=axis_x[0]-timedelta(days=2)
            y=0
            x=dates3
            plt.bar(x,y, label="Paid", color="green") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)

            #used to display chart in our frame
            canvasbar = FigureCanvasTkAgg(figfirst, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=0, y=85) # show the barchart on the ouput window

            #second graph

            sec_paid = "SELECT MAX(invoicetot) from invoice"
            fbcursor.execute(sec_paid)
            paid_sec_x= fbcursor.fetchone()

            sec_paid_y = "SELECT businessname from invoice WHERE invoicetot= (SELECT MAX(invoicetot) from invoice)"

            fbcursor.execute(sec_paid_y)

            paid_sec_y= fbcursor.fetchone()


            figsecond = plt.figure(figsize=(9, 4), dpi=80)

            x=0
            y=paid_sec_x
            plt.barh(x,y, label="Top Billed Customer", color="orange") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.xaxis.grid()


            canvasbar = FigureCanvasTkAgg(figsecond, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=0, y=370)

            # #second graph

            thrd_paid = "SELECT MAX(unitprice) from productservice"
            fbcursor.execute(thrd_paid)
            paid_thrd_x= fbcursor.fetchone()


            thrd_paid_y = "SELECT name from productservice WHERE unitprice= (SELECT MAX(unitprice) from productservice)"

            fbcursor.execute(thrd_paid_y)

            paid_thrd_y= fbcursor.fetchone()

            figlast = plt.figure(figsize=(9, 4), dpi=80)

            x=0
            y=paid_thrd_x   
            plt.barh(x,y, label="Top Product Sale", color="blue") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.xaxis.grid()
            

            canvasbar = FigureCanvasTkAgg(figlast, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=650, y=370)

            lbl_invdtt2 =Label(reportframe, text="Screen Charts", bg="white" , font=("arial", 16))
            lbl_invdtt2.place(x=2, y=85)

        irwcuw1 = Label(reportframe,text="                                                                                               ", bg="white")
        irwcuw1.place(x=1135, y=97)
        lbl_invdtt2 =Label(reportframe, text="Right Click on Preview For More Options", bg="white" , font=("arial",8 ))
        lbl_invdtt2.place(x=1140, y=97)

            
    #========================================================================================================
#================================================================================================================
    
        #====================================================================================================
    elif rth=="Before Previous Year":
        
        if company is not None:
            in_dat = (datetime.now()-relativedelta(years=2)).strftime("%Y-%m-%d")
            # given_date = datetime.today().month()
            # in_dat = given_date.replace(months=3)
            
            rp_scr_frm.delete(0,'end')
            rp_scr_frm.insert(0, in_dat)

            cr=date.today()
            rp_sc_to.delete(0,'end')
            rp_sc_to.insert(0, cr)

            lscr=in_dat
            
            lscr1=cr

            var_1=in_dat
            var_2=cr

            sql_paid ="SELECT SUM(invoicetot)from invoice WHERE invodate BETWEEN %s and %s"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(sql_paid,inv_valuz)
            invoice= fbcursor.fetchone()

            x_axis = "SELECT invodate from invoice WHERE invoicetot=(SELECT MAX(invoicetot) from invoice WHERE invodate BETWEEN %s and %s)"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(x_axis, inv_valuz)
            axis_x= fbcursor.fetchone()



            sql_company = "SELECT SUM(totpaid)from invoice WHERE invodate BETWEEN %s and %s"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(sql_company,inv_valuz)
            paid= fbcursor.fetchone()



            sql_outstanding = "SELECT SUM(balance)from invoice WHERE invodate BETWEEN %s and %s"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(sql_outstanding,inv_valuz)
            outstanding= fbcursor.fetchone()


            frame = Frame(
                    reportframe,
                    width=1380,
                    height=1000,
                    bg='#b3b3b3',
                    )
            frame.pack(expand=True, fill=BOTH,  padx=0, pady=0)
                
            frame.pack()


            x=lscr1
           
            y=invoice

            x=axis_x
            figfirst = plt.figure(figsize=(17, 3.58), dpi=80)
            plt.bar(x,y, label="Invoice", color="orange")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()

            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)




            #**************add dates********

            dates=axis_x[0]+timedelta(days=2)

            y=outstanding
            x=dates
            plt.bar(x,y, label="Outstanding", color="blue")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)


            dates3=axis_x[0]-timedelta(days=2)
            y=paid
            x=dates3
            plt.bar(x,y, label="Paid", color="green") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)

            #used to display chart in our frame
            canvasbar = FigureCanvasTkAgg(figfirst, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=0, y=85) # show the barchart on the ouput window

            #second graph

            sec_paid = "SELECT invoicetot from (select invodate, invoicetot from invoice  GROUP BY businessname having invodate BETWEEN %s and %s ORDER by COUNT(businessname) DESC LIMIT 1)as sec"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(sec_paid,inv_valuz)
            paid_sec_x= fbcursor.fetchone()

            


            sec_paid_y = "SELECT businessname from (select invodate, businessname from invoice  GROUP BY businessname having invodate BETWEEN %s and %s ORDER by COUNT(businessname) DESC LIMIT 1)as sec"
            inv_valuz=(var_1,var_2)

            fbcursor.execute(sec_paid_y,inv_valuz)

            paid_sec_y= fbcursor.fetchone()

            


            figsecond = plt.figure(figsize=(9, 4), dpi=80)

            x=paid_sec_y
            y=paid_sec_x
            plt.barh(x,y, label="Top Billed Customer", color="orange") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.xaxis.grid()


            canvasbar = FigureCanvasTkAgg(figsecond, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=0, y=370)

            # #second graph

            thrd_paid = "SELECT invoicetot from(select invodate,invoicetot from invoice GROUP BY Productserviceid HAVING invodate BETWEEN %s and %s ORDER by COUNT(Productserviceid) DESC LIMIT 1)as lkiii"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(thrd_paid,inv_valuz)
            paid_thrd_x= fbcursor.fetchone()
            


            thrd_paid_y = "select name from productservice where Productserviceid=(SELECT Productserviceid from(select invodate,Productserviceid from invoice GROUP BY Productserviceid HAVING invodate BETWEEN %s and %s ORDER by COUNT(Productserviceid) DESC LIMIT 1)as lkiii)"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(thrd_paid_y,inv_valuz)

            paid_thrd_y= fbcursor.fetchone()


            figlast = plt.figure(figsize=(9, 4), dpi=80)

            x=paid_thrd_y
            y=paid_thrd_x   
            plt.barh(x,y, label="Top Product Sale", color="blue") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.xaxis.grid()
            

            canvasbar = FigureCanvasTkAgg(figlast, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=650, y=370)

            lbl_invdtt2 =Label(reportframe, text="Screen Charts", bg="white" , font=("arial", 16))
            lbl_invdtt2.place(x=2, y=85)
            # def my_popup(event):
            #     my_menu.tk_popup(event.x_root, event.y_root)
                
            # my_menu= Menu(canvasbar, tearoff=False)
            # my_menu.add_command(label="Refresh Chart", command="run")
            # my_menu.add_separator()
            # my_menu.add_command(label="Copy Chart To Clipboard", command="pr")
            # my_menu.add_separator()
            # my_menu.add_command(label="Save Chart As Image", command='emailrp')
            # my_menu.add_separator()
            # my_menu.add_command(label="Print Chart", command="excel")
            # canvasbar.bind("<Button-3>", my_popup)

        else:
            sql_paid = "SELECT SUM(invoicetot)from invoice"
            fbcursor.execute(sql_paid)
            invoice= fbcursor.fetchone()

            x_axis = "SELECT invodate from invoice WHERE invoicetot=(SELECT MAX(invoicetot) from invoice)"
            fbcursor.execute(x_axis)
            axis_x= fbcursor.fetchone()



            sql_company = "SELECT SUM(totpaid)from invoice"
            fbcursor.execute(sql_company)
            paid= fbcursor.fetchone()



            sql_outstanding = "SELECT SUM(balance)from invoice"
            fbcursor.execute(sql_outstanding)
            outstanding= fbcursor.fetchone()


            frame = Frame(
                    reportframe,
                    width=1380,
                    height=1000,
                    bg='#b3b3b3',
                    )
            frame.pack(expand=True, fill=BOTH,  padx=0, pady=0)
                
            frame.pack()


            x=datetime.today()

            y=0

            x=axis_x
            figfirst = plt.figure(figsize=(17, 3.58), dpi=80)
            plt.bar(x,y, label="Invoice", color="orange")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()

            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)




            #**************add dates********

            dates=axis_x[0]+timedelta(days=2)

            y=0
            x=dates
            plt.bar(x,y, label="Outstanding", color="blue")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)


            dates3=axis_x[0]-timedelta(days=2)
            y=0
            x=dates3
            plt.bar(x,y, label="Paid", color="green") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)

            #used to display chart in our frame
            canvasbar = FigureCanvasTkAgg(figfirst, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=0, y=85) # show the barchart on the ouput window

            #second graph

            sec_paid = "SELECT MAX(invoicetot) from invoice"
            fbcursor.execute(sec_paid)
            paid_sec_x= fbcursor.fetchone()

            sec_paid_y = "SELECT businessname from invoice WHERE invoicetot= (SELECT MAX(invoicetot) from invoice)"

            fbcursor.execute(sec_paid_y)

            paid_sec_y= fbcursor.fetchone()


            figsecond = plt.figure(figsize=(9, 4), dpi=80)

            x=0
            y=paid_sec_x
            plt.barh(x,y, label="Top Billed Customer", color="orange") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.xaxis.grid()


            canvasbar = FigureCanvasTkAgg(figsecond, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=0, y=370)

            # #second graph

            thrd_paid = "SELECT MAX(unitprice) from productservice"
            fbcursor.execute(thrd_paid)
            paid_thrd_x= fbcursor.fetchone()


            thrd_paid_y = "SELECT name from productservice WHERE unitprice= (SELECT MAX(unitprice) from productservice)"

            fbcursor.execute(thrd_paid_y)

            paid_thrd_y= fbcursor.fetchone()

            figlast = plt.figure(figsize=(9, 4), dpi=80)

            x=0
            y=paid_thrd_x   
            plt.barh(x,y, label="Top Product Sale", color="blue") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.xaxis.grid()
            

            canvasbar = FigureCanvasTkAgg(figlast, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=650, y=370)

            lbl_invdtt2 =Label(reportframe, text="Screen Charts", bg="white" , font=("arial", 16))
            lbl_invdtt2.place(x=2, y=85)

        irwcuw1 = Label(reportframe,text="                                                                                               ", bg="white")
        irwcuw1.place(x=1135, y=97)
        lbl_invdtt2 =Label(reportframe, text="Right Click on Preview For More Options", bg="white" , font=("arial",8 ))
        lbl_invdtt2.place(x=1140, y=97)

        
        #===========================================================================================================
    elif rth=="Previous year":
        
        if company is not None:
            last_year = (datetime.now()-relativedelta(years=1)).strftime("%Y-%m-%d")
            rp_scr_frm.delete(0,'end')
            rp_scr_frm.insert(0, last_year)

            cr=date.today()
            rp_sc_to.delete(0,'end')
            rp_sc_to.insert(0, cr)

            lscr=last_year
            lscr1=cr

            var_1=last_year
            var_2=cr
            
            sql_paid ="SELECT SUM(invoicetot)from invoice WHERE invodate BETWEEN %s and %s"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(sql_paid,inv_valuz)
            invoice= fbcursor.fetchone()

            x_axis = "SELECT invodate from invoice WHERE invoicetot=(SELECT MAX(invoicetot) from invoice WHERE invodate BETWEEN %s and %s)"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(x_axis, inv_valuz)
            axis_x= fbcursor.fetchone()



            sql_company = "SELECT SUM(totpaid)from invoice WHERE invodate BETWEEN %s and %s"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(sql_company,inv_valuz)
            paid= fbcursor.fetchone()



            sql_outstanding = "SELECT SUM(balance)from invoice WHERE invodate BETWEEN %s and %s"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(sql_outstanding,inv_valuz)
            outstanding= fbcursor.fetchone()


            frame = Frame(
                    reportframe,
                    width=1380,
                    height=1000,
                    bg='#b3b3b3',
                    )
            frame.pack(expand=True, fill=BOTH,  padx=0, pady=0)
                
            frame.pack()


            x=lscr1
           
            y=invoice

            x=axis_x
            figfirst = plt.figure(figsize=(17, 3.58), dpi=80)
            plt.bar(x,y, label="Invoice", color="orange")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()

            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)




            #**************add dates********

            dates=axis_x[0]+timedelta(days=2)

            y=outstanding
            x=dates
            plt.bar(x,y, label="Outstanding", color="blue")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)


            dates3=axis_x[0]-timedelta(days=2)
            y=paid
            x=dates3
            plt.bar(x,y, label="Paid", color="green") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)

            #used to display chart in our frame
            canvasbar = FigureCanvasTkAgg(figfirst, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=0, y=85) # show the barchart on the ouput window

            #second graph

            sec_paid = "SELECT invoicetot from (select invodate, invoicetot from invoice  GROUP BY businessname having invodate BETWEEN %s and %s ORDER by COUNT(businessname) DESC LIMIT 1)as sec"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(sec_paid,inv_valuz)
            paid_sec_x= fbcursor.fetchone()

            


            sec_paid_y = "SELECT businessname from (select invodate, businessname from invoice  GROUP BY businessname having invodate BETWEEN %s and %s ORDER by COUNT(businessname) DESC LIMIT 1)as sec"
            inv_valuz=(var_1,var_2)

            fbcursor.execute(sec_paid_y,inv_valuz)

            paid_sec_y= fbcursor.fetchone()

            


            figsecond = plt.figure(figsize=(9, 4), dpi=80)

            x=paid_sec_y
            y=paid_sec_x
            plt.barh(x,y, label="Top Billed Customer", color="orange") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.xaxis.grid()


            canvasbar = FigureCanvasTkAgg(figsecond, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=0, y=370)

            # #second graph

            thrd_paid = "SELECT invoicetot from(select invodate,invoicetot from invoice GROUP BY Productserviceid HAVING invodate BETWEEN %s and %s ORDER by COUNT(Productserviceid) DESC LIMIT 1)as lkiii"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(thrd_paid,inv_valuz)
            paid_thrd_x= fbcursor.fetchone()
            


            thrd_paid_y = "select name from productservice where Productserviceid=(SELECT Productserviceid from(select invodate,Productserviceid from invoice GROUP BY Productserviceid HAVING invodate BETWEEN %s and %s ORDER by COUNT(Productserviceid) DESC LIMIT 1)as lkiii)"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(thrd_paid_y,inv_valuz)

            paid_thrd_y= fbcursor.fetchone()


            figlast = plt.figure(figsize=(9, 4), dpi=80)

            x=paid_thrd_y
            y=paid_thrd_x   
            plt.barh(x,y, label="Top Product Sale", color="blue") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.xaxis.grid()
            

            canvasbar = FigureCanvasTkAgg(figlast, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=650, y=370)

            lbl_invdtt2 =Label(reportframe, text="Screen Charts", bg="white" , font=("arial", 16))
            lbl_invdtt2.place(x=2, y=85)
            # def my_popup(event):
            #     my_menu.tk_popup(event.x_root, event.y_root)
                
            # my_menu= Menu(canvasbar, tearoff=False)
            # my_menu.add_command(label="Refresh Chart", command="run")
            # my_menu.add_separator()
            # my_menu.add_command(label="Copy Chart To Clipboard", command="pr")
            # my_menu.add_separator()
            # my_menu.add_command(label="Save Chart As Image", command='emailrp')
            # my_menu.add_separator()
            # my_menu.add_command(label="Print Chart", command="excel")
            # canvasbar.bind("<Button-3>", my_popup)

        else:
            sql_paid = "SELECT SUM(invoicetot)from invoice"
            fbcursor.execute(sql_paid)
            invoice= fbcursor.fetchone()

            x_axis = "SELECT invodate from invoice WHERE invoicetot=(SELECT MAX(invoicetot) from invoice)"
            fbcursor.execute(x_axis)
            axis_x= fbcursor.fetchone()



            sql_company = "SELECT SUM(totpaid)from invoice"
            fbcursor.execute(sql_company)
            paid= fbcursor.fetchone()



            sql_outstanding = "SELECT SUM(balance)from invoice"
            fbcursor.execute(sql_outstanding)
            outstanding= fbcursor.fetchone()


            frame = Frame(
                    reportframe,
                    width=1380,
                    height=1000,
                    bg='#b3b3b3',
                    )
            frame.pack(expand=True, fill=BOTH,  padx=0, pady=0)
                
            frame.pack()


            x=datetime.today()

            y=0

            x=axis_x
            figfirst = plt.figure(figsize=(17, 3.58), dpi=80)
            plt.bar(x,y, label="Invoice", color="orange")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()

            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)




            #**************add dates********

            dates=axis_x[0]+timedelta(days=2)

            y=0
            x=dates
            plt.bar(x,y, label="Outstanding", color="blue")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)


            dates3=axis_x[0]-timedelta(days=2)
            y=0
            x=dates3
            plt.bar(x,y, label="Paid", color="green") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)

            #used to display chart in our frame
            canvasbar = FigureCanvasTkAgg(figfirst, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=0, y=85) # show the barchart on the ouput window

            #second graph

            sec_paid = "SELECT MAX(invoicetot) from invoice"
            fbcursor.execute(sec_paid)
            paid_sec_x= fbcursor.fetchone()

            sec_paid_y = "SELECT businessname from invoice WHERE invoicetot= (SELECT MAX(invoicetot) from invoice)"

            fbcursor.execute(sec_paid_y)

            paid_sec_y= fbcursor.fetchone()


            figsecond = plt.figure(figsize=(9, 4), dpi=80)

            x=0
            y=paid_sec_x
            plt.barh(x,y, label="Top Billed Customer", color="orange") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.xaxis.grid()


            canvasbar = FigureCanvasTkAgg(figsecond, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=0, y=370)

            # #second graph

            thrd_paid = "SELECT MAX(unitprice) from productservice"
            fbcursor.execute(thrd_paid)
            paid_thrd_x= fbcursor.fetchone()


            thrd_paid_y = "SELECT name from productservice WHERE unitprice= (SELECT MAX(unitprice) from productservice)"

            fbcursor.execute(thrd_paid_y)

            paid_thrd_y= fbcursor.fetchone()

            figlast = plt.figure(figsize=(9, 4), dpi=80)

            x=0
            y=paid_thrd_x   
            plt.barh(x,y, label="Top Product Sale", color="blue") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.xaxis.grid()
            

            canvasbar = FigureCanvasTkAgg(figlast, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=650, y=370)

            lbl_invdtt2 =Label(reportframe, text="Screen Charts", bg="white" , font=("arial", 16))
            lbl_invdtt2.place(x=2, y=85)

        irwcuw1 = Label(reportframe,text="                                                                                               ", bg="white")
        irwcuw1.place(x=1135, y=97)
        lbl_invdtt2 =Label(reportframe, text="Right Click on Preview For More Options", bg="white" , font=("arial",8 ))
        lbl_invdtt2.place(x=1140, y=97)

            
    # ------------------------------
    elif rth=="Custom Range":
        

        
        if company is not None:
            

            cr1=date.today()
            rp_scr_frm.delete(0,'end')
            rp_scr_frm.insert(0, cr1)

            cr=date.today()
            rp_sc_to.delete(0,'end')
            rp_sc_to.insert(0, cr)


            ltt=rp_scr_frm.get_date()
            ltt1=rp_sc_to.get_date()
            

            var_1=ltt
            var_2=ltt1
            
            sql_paid ="SELECT SUM(invoicetot)from invoice WHERE invodate BETWEEN %s and %s"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(sql_paid,inv_valuz)
            invoice= fbcursor.fetchone()

            x_axis = "SELECT invodate from invoice WHERE invoicetot=(SELECT MAX(invoicetot) from invoice WHERE invodate BETWEEN %s and %s)"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(x_axis, inv_valuz)
            axis_x= fbcursor.fetchone()



            sql_company = "SELECT SUM(totpaid)from invoice WHERE invodate BETWEEN %s and %s"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(sql_company,inv_valuz)
            paid= fbcursor.fetchone()



            sql_outstanding = "SELECT SUM(balance)from invoice WHERE invodate BETWEEN %s and %s"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(sql_outstanding,inv_valuz)
            outstanding= fbcursor.fetchone()


            frame = Frame(
                    reportframe,
                    width=1380,
                    height=1000,
                    bg='#b3b3b3',
                    )
            frame.pack(expand=True, fill=BOTH,  padx=0, pady=0)
                
            frame.pack()


            x=cr
           
            y=invoice

            x=axis_x
            figfirst = plt.figure(figsize=(17, 3.58), dpi=80)
            plt.bar(x,y, label="Invoice", color="orange")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()

            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)




            #**************add dates********

            dates=axis_x[0]+timedelta(days=2)

            y=outstanding
            x=dates
            plt.bar(x,y, label="Outstanding", color="blue")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)


            dates3=axis_x[0]-timedelta(days=2)
            y=paid
            x=dates3
            plt.bar(x,y, label="Paid", color="green") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)

            #used to display chart in our frame
            canvasbar = FigureCanvasTkAgg(figfirst, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=0, y=85) # show the barchart on the ouput window

            #second graph

            sec_paid = "SELECT invoicetot from (select invodate, invoicetot from invoice  GROUP BY businessname having invodate BETWEEN %s and %s ORDER by COUNT(businessname) DESC LIMIT 1)as sec"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(sec_paid,inv_valuz)
            paid_sec_x= fbcursor.fetchone()

            


            sec_paid_y = "SELECT businessname from (select invodate, businessname from invoice  GROUP BY businessname having invodate BETWEEN %s and %s ORDER by COUNT(businessname) DESC LIMIT 1)as sec"
            inv_valuz=(var_1,var_2)

            fbcursor.execute(sec_paid_y,inv_valuz)

            paid_sec_y= fbcursor.fetchone()

            


            figsecond = plt.figure(figsize=(9, 4), dpi=80)

            x=paid_sec_y
            y=paid_sec_x
            plt.barh(x,y, label="Top Billed Customer", color="orange") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.xaxis.grid()


            canvasbar = FigureCanvasTkAgg(figsecond, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=0, y=370)

            # #second graph

            thrd_paid = "SELECT invoicetot from(select invodate,invoicetot from invoice GROUP BY Productserviceid HAVING invodate BETWEEN %s and %s ORDER by COUNT(Productserviceid) DESC LIMIT 1)as lkiii"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(thrd_paid,inv_valuz)
            paid_thrd_x= fbcursor.fetchone()
            


            thrd_paid_y = "select name from productservice where Productserviceid=(SELECT Productserviceid from(select invodate,Productserviceid from invoice GROUP BY Productserviceid HAVING invodate BETWEEN %s and %s ORDER by COUNT(Productserviceid) DESC LIMIT 1)as lkiii)"
            inv_valuz=(var_1,var_2)
            fbcursor.execute(thrd_paid_y,inv_valuz)

            paid_thrd_y= fbcursor.fetchone()


            figlast = plt.figure(figsize=(9, 4), dpi=80)

            x=paid_thrd_y
            y=paid_thrd_x   
            plt.barh(x,y, label="Top Product Sale", color="blue") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.xaxis.grid()
            

            canvasbar = FigureCanvasTkAgg(figlast, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=650, y=370)

            lbl_invdtt2 =Label(reportframe, text="Screen Charts", bg="white" , font=("arial", 16))
            lbl_invdtt2.place(x=2, y=85)
            # def my_popup(event):
            #     my_menu.tk_popup(event.x_root, event.y_root)
                
            # my_menu= Menu(canvasbar, tearoff=False)
            # my_menu.add_command(label="Refresh Chart", command="run")
            # my_menu.add_separator()
            # my_menu.add_command(label="Copy Chart To Clipboard", command="pr")
            # my_menu.add_separator()
            # my_menu.add_command(label="Save Chart As Image", command='emailrp')
            # my_menu.add_separator()
            # my_menu.add_command(label="Print Chart", command="excel")
            # canvasbar.bind("<Button-3>", my_popup)

        else:
            sql_paid = "SELECT SUM(invoicetot)from invoice"
            fbcursor.execute(sql_paid)
            invoice= fbcursor.fetchone()

            x_axis = "SELECT invodate from invoice WHERE invoicetot=(SELECT MAX(invoicetot) from invoice)"
            fbcursor.execute(x_axis)
            axis_x= fbcursor.fetchone()



            sql_company = "SELECT SUM(totpaid)from invoice"
            fbcursor.execute(sql_company)
            paid= fbcursor.fetchone()



            sql_outstanding = "SELECT SUM(balance)from invoice"
            fbcursor.execute(sql_outstanding)
            outstanding= fbcursor.fetchone()


            frame = Frame(
                    reportframe,
                    width=1380,
                    height=1000,
                    bg='#b3b3b3',
                    )
            frame.pack(expand=True, fill=BOTH,  padx=0, pady=0)
                
            frame.pack()


            x=datetime.today()

            y=0

            x=axis_x
            figfirst = plt.figure(figsize=(17, 3.58), dpi=80)
            plt.bar(x,y, label="Invoice", color="orange")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()

            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)




            #**************add dates********

            dates=axis_x[0]+timedelta(days=2)

            y=0
            x=dates
            plt.bar(x,y, label="Outstanding", color="blue")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)


            dates3=axis_x[0]-timedelta(days=2)
            y=0
            x=dates3
            plt.bar(x,y, label="Paid", color="green") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)

            #used to display chart in our frame
            canvasbar = FigureCanvasTkAgg(figfirst, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=0, y=85) # show the barchart on the ouput window

            #second graph

            sec_paid = "SELECT MAX(invoicetot) from invoice"
            fbcursor.execute(sec_paid)
            paid_sec_x= fbcursor.fetchone()

            sec_paid_y = "SELECT businessname from invoice WHERE invoicetot= (SELECT MAX(invoicetot) from invoice)"

            fbcursor.execute(sec_paid_y)

            paid_sec_y= fbcursor.fetchone()


            figsecond = plt.figure(figsize=(9, 4), dpi=80)

            x=0
            y=paid_sec_x
            plt.barh(x,y, label="Top Billed Customer", color="orange") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.xaxis.grid()


            canvasbar = FigureCanvasTkAgg(figsecond, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=0, y=370)

            # #second graph

            thrd_paid = "SELECT MAX(unitprice) from productservice"
            fbcursor.execute(thrd_paid)
            paid_thrd_x= fbcursor.fetchone()


            thrd_paid_y = "SELECT name from productservice WHERE unitprice= (SELECT MAX(unitprice) from productservice)"

            fbcursor.execute(thrd_paid_y)

            paid_thrd_y= fbcursor.fetchone()

            figlast = plt.figure(figsize=(9, 4), dpi=80)

            x=0
            y=paid_thrd_x   
            plt.barh(x,y, label="Top Product Sale", color="blue") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.xaxis.grid()
            

            canvasbar = FigureCanvasTkAgg(figlast, master=reportframe)
            canvasbar.draw()
            canvasbar.get_tk_widget().place(x=650, y=370)

            lbl_invdtt2 =Label(reportframe, text="Screen Charts", bg="white" , font=("arial", 16))
            lbl_invdtt2.place(x=2, y=85)

        irwcuw1 = Label(reportframe,text="                                                                                               ", bg="white")
        irwcuw1.place(x=1135, y=97)
        lbl_invdtt2 =Label(reportframe, text="Right Click on Preview For More Options", bg="white" , font=("arial",8 ))
        lbl_invdtt2.place(x=1140, y=97)

           

        #============================================================================================
    else:
        pass
    

#---------------------------------------------------INVOICE FILTER-----------------------------------------------


def category():
  # firtst filter-----------------------------------Month to date
    rth=invfilter.get()
    
    sql_company = "SELECT * from company"
    fbcursor.execute(sql_company)
    company= fbcursor.fetchone()
    
    #-------------------------
    
    global c
    if rth=="Month to date":
        
        given_date = datetime.today().date()
        in_dat = given_date.replace(day=1)
        rp_exir.delete(0,'end')
        rp_exir.insert(0, in_dat)

        cr=date.today()
        rp_exir1.delete(0,'end')
        rp_exir1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')

        # Create an instance of Style widget
        style=ttk.Style()
        style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
        style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
        style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders
        
        if company is not None:
       
            sk=canvas.create_text(310,100,text=company[1],fill='black',font=("Helvetica", 12), justify='left')
            

            c=canvas.create_text(320,165,text=company[2],fill='black',font=("Helvetica", 10), justify='left')
            
            canvas.create_text(365,228,text="Sales tax reg No:"+company[4],fill='black',font=("Helvetica", 8), justify='left')
            
            # Add a Treeview widge
                
            rp_inv_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            rp_inv_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_inv_tree.heading("# 1", text="No")
            rp_inv_tree.column("# 2", anchor=E, stretch=NO, width=80)
            rp_inv_tree.heading("# 2", text="Date")
            rp_inv_tree.column("# 3", anchor=E, stretch=NO, width=80)
            rp_inv_tree.heading("# 3", text="Due Date")
            rp_inv_tree.column("# 4", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 4", text="Terms")
            rp_inv_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 5", text="Status")
            rp_inv_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 6", text="Invoice Total")
            rp_inv_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 7", text="Invoice Paid")
            rp_inv_tree.column("# 8", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 8", text="Balance")
            # Insert the data in Treeview widget
            
            global window
            rp_inv_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total','Total Paid','Balance'))
            
            for record in rp_inv_tree.get_children():
                rp_inv_tree.delete(record)
            count=0

            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE invodate BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()
            
            
            for i in tre:
                rp_inv_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[35], i[4], i[8], i[9],i[10]))
                count += 1
            
            
            # total_tri='SELECT SUM(invoicetot) from invoice WHERE invoicetot = (SELECT invoicetot FROM invoice WHERE invodate BETWEEN %s and %s)'
            
            # inv_valuz1=(var1,var2)
            # fbcursor.execute(total_tri,inv_valuz1)
            # print ('haii')
            # tot_tri= fbcursor.fetchall()
            

            # total_tax1_tri='SELECT SUM(totpaid) from invoice WHERE totpaid = (SELECT totpaid FROM invoice WHERE invodate BETWEEN %s and %s)'
            # inv_valuz2=(var1,var2)
            
            # fbcursor.execute(total_tax1_tri,inv_valuz2)
            # tot_tax1_tri= fbcursor.fetchall()
            
            # total_tax2_tri='SELECT SUM(balance) from invoice WHERE balance = (SELECT balance FROM invoice WHERE invodate BETWEEN %s and %s)'
            # inv_valuz3=(var1,var2)
            # fbcursor.execute(total_tax2_tri,inv_valuz3)
            # tot_inv_bal= fbcursor.fetchall()
            
            # rp_inv_tree.insert('', 'end',text="1",values=('','','-End Of List- ','','','Invoice Total','Total Paid','Balance'))
            # rp_inv_tree.insert('', 'end',text="1",values=('','','','','',tot_tri,tot_tax1_tri,tot_inv_bal))


            window = canvas.create_window(270, 260, anchor="nw", window=rp_inv_tree)
            
            

        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')
            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')

            rp_inv_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            rp_inv_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_inv_tree.heading("# 1", text="No")
            rp_inv_tree.column("# 2", anchor=E, stretch=NO, width=70)
            rp_inv_tree.heading("# 2", text="Date")
            rp_inv_tree.column("# 3", anchor=E, stretch=NO, width=70)
            rp_inv_tree.heading("# 3", text="Due Date")
            rp_inv_tree.column("# 4", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 4", text="Terms")
            rp_inv_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 5", text="Status")
            rp_inv_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 6", text="Invoice Total")
            rp_inv_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 7", text="Invoice Paid")
            rp_inv_tree.column("# 8", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 8", text="Balance")
            # Insert the data in Treeview widget
            rp_inv_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total','Total Paid','Balance'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)

        
        canvas.create_text(900,100,text="Invoice Report",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+invfrm.get()+"      Date To:"+invto.get()+"\n Invoice Category: All",fill='black',font=("Helvetica", 8), justify='right')

        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
    

    #--------------------------------------------------------------------------------------------------------------
    elif rth=="Year To Date":
        test_date=pendulum.today().date()
        start = test_date.start_of('year')
        rp_exir.delete(0,'end')
        rp_exir.insert(0, start)

        cr=date.today()
        rp_exir1.delete(0,'end')
        rp_exir1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        # Create an instance of Style widget
        style=ttk.Style()
        style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
        style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
        style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders
        
        if company is not None:
            canvas.create_text(310,100,text=company[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company[4],fill='black',font=("Helvetica", 8), justify='left')

            # Add a Treeview widge
                
            rp_inv_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            rp_inv_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_inv_tree.heading("# 1", text="No")
            rp_inv_tree.column("# 2", anchor=E, stretch=NO, width=80)
            rp_inv_tree.heading("# 2", text="Date")
            rp_inv_tree.column("# 3", anchor=E, stretch=NO, width=80)
            rp_inv_tree.heading("# 3", text="Due Date")
            rp_inv_tree.column("# 4", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 4", text="Terms")
            rp_inv_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 5", text="Status")
            rp_inv_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 6", text="Invoice Total")
            rp_inv_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 7", text="Invoice Paid")
            rp_inv_tree.column("# 8", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 8", text="Balance")
            # Insert the data in Treeview widget
            
            rp_inv_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total','Total Paid','Balance'))
            
            for record in rp_inv_tree.get_children():
                rp_inv_tree.delete(record)
            count=0

            var1=start
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE invodate BETWEEN %s and %s'
            inv_valuz=(var1,var2)

            fbcursor.execute(sql_inv_dt,inv_valuz)
           
            
            for i in fbcursor:
                rp_inv_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[35], i[4], i[8], i[9],i[10]))
                count += 1
            # total_tri='SELECT SUM(invoicetot) from invoice WHERE invoicetot = (SELECT invoicetot FROM invoice WHERE invodate BETWEEN %s and %s)'
            # inv_valuz1=(var1,var2)
            # fbcursor.execute(total_tri,inv_valuz1)
            # tot_tri= fbcursor.fetchone()
            

            # total_tax1_tri='SELECT SUM(totpaid) from invoice WHERE totpaid = (SELECT totpaid FROM invoice WHERE invodate BETWEEN %s and %s)'
            # inv_valuz2=(var1,var2)
            # fbcursor.execute(total_tax1_tri,inv_valuz2)
            # tot_tax1_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(balance) from invoice WHERE balance = (SELECT balance FROM invoice WHERE invodate BETWEEN %s and %s)'
            # inv_valuz3=(var1,var2)
            # fbcursor.execute(total_tax2_tri,inv_valuz3)
            # tot_tax2_tri= fbcursor.fetchone()
            
            # rp_inv_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total','Total Paid','Balance'))
            # rp_inv_tree.insert('', 'end',text="1",values=('','','','','',tot_tri,tot_tax1_tri,tot_tax2_tri))

            window = canvas.create_window(270, 260, anchor="nw", window=rp_inv_tree)

        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')
            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')

            rp_inv_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            rp_inv_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_inv_tree.heading("# 1", text="No")
            rp_inv_tree.column("# 2", anchor=E, stretch=NO, width=70)
            rp_inv_tree.heading("# 2", text="Date")
            rp_inv_tree.column("# 3", anchor=E, stretch=NO, width=70)
            rp_inv_tree.heading("# 3", text="Due Date")
            rp_inv_tree.column("# 4", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 4", text="Terms")
            rp_inv_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 5", text="Status")
            rp_inv_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 6", text="Invoice Total")
            rp_inv_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 7", text="Invoice Paid")
            rp_inv_tree.column("# 8", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 8", text="Balance")
            # Insert the data in Treeview widget
            rp_inv_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total','Total Paid','Balance'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)

        canvas.create_text(900,100,text="Invoice Report",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+invfrm.get()+"      Date To:"+invto.get()+"\n Invoice Category: All",fill='black',font=("Helvetica", 8), justify='right')

        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
        #===============================================================================================
    elif rth=="Current year":
        test_date=pendulum.today().date()
        start = test_date.start_of('year')
        rp_exir.delete(0,'end')
        rp_exir.insert(0, start)

        test_date_end=pendulum.today().date()
        end = test_date_end.end_of('year')
        rp_exir1.delete(0,'end')
        rp_exir1.insert(0, end)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        # Create an instance of Style widget
        style=ttk.Style()
        style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
        style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
        style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders
        
        if company is not None:
            canvas.create_text(310,100,text=company[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company[4],fill='black',font=("Helvetica", 8), justify='left')

            # Add a Treeview widge
                
            rp_inv_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            rp_inv_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_inv_tree.heading("# 1", text="No")
            rp_inv_tree.column("# 2", anchor=E, stretch=NO, width=80)
            rp_inv_tree.heading("# 2", text="Date")
            rp_inv_tree.column("# 3", anchor=E, stretch=NO, width=80)
            rp_inv_tree.heading("# 3", text="Due Date")
            rp_inv_tree.column("# 4", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 4", text="Terms")
            rp_inv_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 5", text="Status")
            rp_inv_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 6", text="Invoice Total")
            rp_inv_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 7", text="Invoice Paid")
            rp_inv_tree.column("# 8", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 8", text="Balance")
            # Insert the data in Treeview widget
            
            rp_inv_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total','Total Paid','Balance'))
            
            for record in rp_inv_tree.get_children():
                rp_inv_tree.delete(record)
            count=0

            var1=start
            var2=end
            sql_inv_dt='SELECT * FROM invoice WHERE invodate BETWEEN %s and %s'
            inv_valuz=(var1,var2)

            fbcursor.execute(sql_inv_dt,inv_valuz)
            tot_tris= fbcursor.fetchall()
           
            
            for i in tot_tris:
                rp_inv_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[35], i[4], i[8], i[9],i[10]))
                count += 1
            total_tri='SELECT SUM(invoicetot) from invoice WHERE invoicetot = (SELECT invoicetot FROM invoice WHERE invodate BETWEEN %s and %s)'
            inv_valuz1=(var1,var2)
            fbcursor.execute(total_tri,inv_valuz1)
            tot_tri1= fbcursor.fetchone()
            

            total_tax1_tri='SELECT SUM(totpaid) from invoice WHERE totpaid = (SELECT totpaid FROM invoice WHERE invodate BETWEEN %s and %s)'
            inv_valuz2=(var1,var2)
            fbcursor.execute(total_tax1_tri,inv_valuz2)
            tot_tax1_tri= fbcursor.fetchone()

            total_tax2_tri='SELECT SUM(balance) from invoice WHERE balance = (SELECT balance FROM invoice WHERE invodate BETWEEN %s and %s)'
            inv_valuz3=(var1,var2)
            fbcursor.execute(total_tax2_tri,inv_valuz3)
            tot_balance= fbcursor.fetchone()
            
            rp_inv_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total','Total Paid','Balance'))
            rp_inv_tree.insert('', 'end',text="1",values=('','','','','',tot_tri1,tot_tax1_tri,tot_balance))

            window = canvas.create_window(270, 260, anchor="nw", window=rp_inv_tree)

        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')
            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')

            rp_inv_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            rp_inv_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_inv_tree.heading("# 1", text="No")
            rp_inv_tree.column("# 2", anchor=E, stretch=NO, width=70)
            rp_inv_tree.heading("# 2", text="Date")
            rp_inv_tree.column("# 3", anchor=E, stretch=NO, width=70)
            rp_inv_tree.heading("# 3", text="Due Date")
            rp_inv_tree.column("# 4", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 4", text="Terms")
            rp_inv_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 5", text="Status")
            rp_inv_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 6", text="Invoice Total")
            rp_inv_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 7", text="Invoice Paid")
            rp_inv_tree.column("# 8", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 8", text="Balance")
            # Insert the data in Treeview widget
            

            window = canvas.create_window(290, 260, anchor="nw", window=tree)

        canvas.create_text(900,100,text="Invoice Report",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+invfrm.get()+"      Date To:"+invto.get()+"\n Invoice Category: All",fill='black',font=("Helvetica", 8), justify='right')

        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
    #==============================================================================================================
    elif rth=="Current month":
        given_date = datetime.today().date()
        in_dat = given_date.replace(day=1)
        rp_exir.delete(0,'end')
        rp_exir.insert(0, in_dat)

        test_date=date.today()
        nxt_mnth=(test_date+relativedelta(day=31))
        rp_exir1.delete(0,'end')
        rp_exir1.insert(0, nxt_mnth)
        
        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        # Create an instance of Style widget
        style=ttk.Style()
        style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
        style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
        style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders
        
        if company is not None:
            canvas.create_text(310,100,text=company[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company[4],fill='black',font=("Helvetica", 8), justify='left')

            # Add a Treeview widge
                
            rp_inv_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            rp_inv_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_inv_tree.heading("# 1", text="No")
            rp_inv_tree.column("# 2", anchor=E, stretch=NO, width=80)
            rp_inv_tree.heading("# 2", text="Date")
            rp_inv_tree.column("# 3", anchor=E, stretch=NO, width=80)
            rp_inv_tree.heading("# 3", text="Due Date")
            rp_inv_tree.column("# 4", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 4", text="Terms")
            rp_inv_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 5", text="Status")
            rp_inv_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 6", text="Invoice Total")
            rp_inv_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 7", text="Invoice Paid")
            rp_inv_tree.column("# 8", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 8", text="Balance")
            # Insert the data in Treeview widget
            
            rp_inv_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total','Total Paid','Balance'))
            
            for record in rp_inv_tree.get_children():
                rp_inv_tree.delete(record)
            count=0

            var1=in_dat
            var2=nxt_mnth
            sql_inv_dt='SELECT * FROM invoice WHERE invodate BETWEEN %s and %s'
            inv_valuz=(var1,var2)

            fbcursor.execute(sql_inv_dt,inv_valuz)
           
            
            for i in fbcursor:
                rp_inv_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[35], i[4], i[8], i[9],i[10]))
                count += 1
            # total_tri='SELECT SUM(invoicetot) from invoice WHERE invoicetot = (SELECT invoicetot FROM invoice WHERE invodate BETWEEN %s and %s)'
            # inv_valuz1=(var1,var2)
            # fbcursor.execute(total_tri,inv_valuz1)
            # tot_tri= fbcursor.fetchone()
            

            # total_tax1_tri='SELECT SUM(totpaid) from invoice WHERE totpaid = (SELECT totpaid FROM invoice WHERE invodate BETWEEN %s and %s)'
            # inv_valuz2=(var1,var2)
            # fbcursor.execute(total_tax1_tri,inv_valuz2)
            # tot_tax1_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(balance) from invoice WHERE balance = (SELECT balance FROM invoice WHERE invodate BETWEEN %s and %s)'
            # inv_valuz3=(var1,var2)
            # fbcursor.execute(total_tax2_tri,inv_valuz3)
            # tot_tax2_tri= fbcursor.fetchone()
            
            # rp_inv_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total','Total Paid','Balance'))
            # rp_inv_tree.insert('', 'end',text="1",values=('','','','','',tot_tri,tot_tax1_tri,tot_tax2_tri))

            window = canvas.create_window(270, 260, anchor="nw", window=rp_inv_tree)

        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')
            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')

            rp_inv_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            rp_inv_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_inv_tree.heading("# 1", text="No")
            rp_inv_tree.column("# 2", anchor=E, stretch=NO, width=70)
            rp_inv_tree.heading("# 2", text="Date")
            rp_inv_tree.column("# 3", anchor=E, stretch=NO, width=70)
            rp_inv_tree.heading("# 3", text="Due Date")
            rp_inv_tree.column("# 4", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 4", text="Terms")
            rp_inv_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 5", text="Status")
            rp_inv_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 6", text="Invoice Total")
            rp_inv_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 7", text="Invoice Paid")
            rp_inv_tree.column("# 8", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 8", text="Balance")
            # Insert the data in Treeview widget
            

            window = canvas.create_window(290, 260, anchor="nw", window=tree)

        canvas.create_text(900,100,text="Invoice Report",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+invfrm.get()+"      Date To:"+invto.get()+"\n Invoice Category: All",fill='black',font=("Helvetica", 8), justify='right')


        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
        #=====================================================================================================
    elif rth=="Current days":
        given_date = date.today()
        rp_exir.delete(0,'end')
        rp_exir.insert(0,given_date)

        cr=date.today()
        rp_exir1.delete(0,'end')
        rp_exir1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        # Create an instance of Style widget
        style=ttk.Style()
        style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
        style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
        style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders
        
        if company is not None:
            canvas.create_text(310,100,text=company[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company[4],fill='black',font=("Helvetica", 8), justify='left')

            # Add a Treeview widge
                
            rp_inv_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            rp_inv_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_inv_tree.heading("# 1", text="No")
            rp_inv_tree.column("# 2", anchor=E, stretch=NO, width=80)
            rp_inv_tree.heading("# 2", text="Date")
            rp_inv_tree.column("# 3", anchor=E, stretch=NO, width=80)
            rp_inv_tree.heading("# 3", text="Due Date")
            rp_inv_tree.column("# 4", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 4", text="Terms")
            rp_inv_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 5", text="Status")
            rp_inv_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 6", text="Invoice Total")
            rp_inv_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 7", text="Invoice Paid")
            rp_inv_tree.column("# 8", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 8", text="Balance")
            # Insert the data in Treeview widget
            
            rp_inv_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total','Total Paid','Balance'))
            
            for record in rp_inv_tree.get_children():
                rp_inv_tree.delete(record)
            count=0

            var1=given_date
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE invodate BETWEEN %s and %s'
            inv_valuz=(var1,var2)

            fbcursor.execute(sql_inv_dt,inv_valuz)
           
            
            for i in fbcursor:
                rp_inv_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[35], i[4], i[8], i[9],i[10]))
                count += 1
            total_tri='SELECT SUM(invoicetot) from invoice WHERE invoicetot = (SELECT invoicetot FROM invoice WHERE invodate BETWEEN %s and %s)'
            inv_valuz1=(var1,var2)
            fbcursor.execute(total_tri,inv_valuz1)
            tot_tri= fbcursor.fetchone()
            

            total_tax1_tri='SELECT SUM(totpaid) from invoice WHERE totpaid = (SELECT totpaid FROM invoice WHERE invodate BETWEEN %s and %s)'
            inv_valuz2=(var1,var2)
            fbcursor.execute(total_tax1_tri,inv_valuz2)
            tot_tax1_tri= fbcursor.fetchone()

            total_tax2_tri='SELECT SUM(balance) from invoice WHERE balance = (SELECT balance FROM invoice WHERE invodate BETWEEN %s and %s)'
            inv_valuz3=(var1,var2)
            fbcursor.execute(total_tax2_tri,inv_valuz3)
            tot_tax2_tri= fbcursor.fetchone()
            
            rp_inv_tree.insert('', 'end',text="1",values=('','','','','','Invoicess Total','Total Paid','Balance'))
            rp_inv_tree.insert('', 'end',text="1",values=('','','','','',tot_tri,tot_tax1_tri,tot_tax2_tri))

            window = canvas.create_window(270, 260, anchor="nw", window=rp_inv_tree)

        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')
            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')

            rp_inv_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            rp_inv_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_inv_tree.heading("# 1", text="No")
            rp_inv_tree.column("# 2", anchor=E, stretch=NO, width=70)
            rp_inv_tree.heading("# 2", text="Date")
            rp_inv_tree.column("# 3", anchor=E, stretch=NO, width=70)
            rp_inv_tree.heading("# 3", text="Due Date")
            rp_inv_tree.column("# 4", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 4", text="Terms")
            rp_inv_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 5", text="Status")
            rp_inv_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 6", text="Invoice Total")
            rp_inv_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 7", text="Invoice Paid")
            rp_inv_tree.column("# 8", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 8", text="Balance")
            # Insert the data in Treeview widget
            

            window = canvas.create_window(290, 260, anchor="nw", window=tree)

        canvas.create_text(900,100,text="Invoice Report",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+invfrm.get()+"      Date To:"+invto.get()+"\n Invoice Category: All",fill='black',font=("Helvetica", 8), justify='right')

        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
        #=================================================================================================
    elif rth=="Last 30 days":
        date_filter=date.today()
        in_dat=date_filter-timedelta(days=30)
        rp_exir.delete(0,'end')
        rp_exir.insert(0, in_dat)

        cr=date.today()
        rp_exir1.delete(0,'end')
        rp_exir1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        # Create an instance of Style widget
        style=ttk.Style()
        style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
        style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
        style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders
        
        if company is not None:
            canvas.create_text(310,100,text=company[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company[4],fill='black',font=("Helvetica", 8), justify='left')

            # Add a Treeview widge
                
            rp_inv_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            rp_inv_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_inv_tree.heading("# 1", text="No")
            rp_inv_tree.column("# 2", anchor=E, stretch=NO, width=80)
            rp_inv_tree.heading("# 2", text="Date")
            rp_inv_tree.column("# 3", anchor=E, stretch=NO, width=80)
            rp_inv_tree.heading("# 3", text="Due Date")
            rp_inv_tree.column("# 4", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 4", text="Terms")
            rp_inv_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 5", text="Status")
            rp_inv_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 6", text="Invoice Total")
            rp_inv_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 7", text="Invoice Paid")
            rp_inv_tree.column("# 8", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 8", text="Balance")
            # Insert the data in Treeview widget
            
            rp_inv_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total','Total Paid','Balance'))
            
            for record in rp_inv_tree.get_children():
                rp_inv_tree.delete(record)
            count=0
            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE invodate BETWEEN %s and %s'
            inv_valuz=(var1,var2)

            fbcursor.execute(sql_inv_dt,inv_valuz)
           
            
            for i in fbcursor:
                rp_inv_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[35], i[4], i[8], i[9],i[10]))
                count += 1
            # total_tri='SELECT SUM(invoicetot) from invoice WHERE invoicetot = (SELECT invoicetot FROM invoice WHERE invodate BETWEEN %s and %s)'
            # inv_valuz1=(var1,var2)
            # fbcursor.execute(total_tri,inv_valuz1)
            # tot_tri= fbcursor.fetchone()
            

            # total_tax1_tri='SELECT SUM(totpaid) from invoice WHERE totpaid = (SELECT totpaid FROM invoice WHERE invodate BETWEEN %s and %s)'
            # inv_valuz2=(var1,var2)
            # fbcursor.execute(total_tax1_tri,inv_valuz2)
            # tot_tax1_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(balance) from invoice WHERE balance = (SELECT balance FROM invoice WHERE invodate BETWEEN %s and %s)'
            # inv_valuz3=(var1,var2)
            # fbcursor.execute(total_tax2_tri,inv_valuz3)
            # tot_tax2_tri= fbcursor.fetchone()
            
            # rp_inv_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total','Total Paid','Balance'))
            # rp_inv_tree.insert('', 'end',text="1",values=('','','','','',tot_tri,tot_tax1_tri,tot_tax2_tri))

            window = canvas.create_window(270, 260, anchor="nw", window=rp_inv_tree)

        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')
            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')

            rp_inv_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            rp_inv_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_inv_tree.heading("# 1", text="No")
            rp_inv_tree.column("# 2", anchor=E, stretch=NO, width=70)
            rp_inv_tree.heading("# 2", text="Date")
            rp_inv_tree.column("# 3", anchor=E, stretch=NO, width=70)
            rp_inv_tree.heading("# 3", text="Due Date")
            rp_inv_tree.column("# 4", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 4", text="Terms")
            rp_inv_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 5", text="Status")
            rp_inv_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 6", text="Invoice Total")
            rp_inv_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 7", text="Invoice Paid")
            rp_inv_tree.column("# 8", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 8", text="Balance")
            # Insert the data in Treeview widget
            

            window = canvas.create_window(290, 260, anchor="nw", window=tree)

        canvas.create_text(900,100,text="Invoice Report",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+invfrm.get()+"      Date To:"+invto.get()+"\n Invoice Category: All",fill='black',font=("Helvetica", 8), justify='right')


        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
    
    #=====================================================================================================
    elif rth=="Last 60 days":
        date_filter=date.today()
        in_dat=date_filter-timedelta(days=60)
        rp_exir.delete(0,'end')
        rp_exir.insert(0, in_dat)

        cr=date.today()
        rp_exir1.delete(0,'end')
        rp_exir1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        # Create an instance of Style widget
        style=ttk.Style()
        style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
        style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
        style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders
        
        if company is not None:
            canvas.create_text(310,100,text=company[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company[4],fill='black',font=("Helvetica", 8), justify='left')

            # Add a Treeview widge
                
            rp_inv_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            rp_inv_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_inv_tree.heading("# 1", text="No")
            rp_inv_tree.column("# 2", anchor=E, stretch=NO, width=80)
            rp_inv_tree.heading("# 2", text="Date")
            rp_inv_tree.column("# 3", anchor=E, stretch=NO, width=80)
            rp_inv_tree.heading("# 3", text="Due Date")
            rp_inv_tree.column("# 4", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 4", text="Terms")
            rp_inv_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 5", text="Status")
            rp_inv_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 6", text="Invoice Total")
            rp_inv_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 7", text="Invoice Paid")
            rp_inv_tree.column("# 8", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 8", text="Balance")
            # Insert the data in Treeview widget
            
            rp_inv_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total','Total Paid','Balance'))
            
            for record in rp_inv_tree.get_children():
                rp_inv_tree.delete(record)
            count=0
            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE invodate BETWEEN %s and %s'
            inv_valuz=(var1,var2)

            fbcursor.execute(sql_inv_dt,inv_valuz)
           
            
            for i in fbcursor:
                rp_inv_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[35], i[4], i[8], i[9],i[10]))
                count += 1
            # total_tri='SELECT SUM(invoicetot) from invoice WHERE invoicetot = (SELECT invoicetot FROM invoice WHERE invodate BETWEEN %s and %s)'
            # inv_valuz1=(var1,var2)
            # fbcursor.execute(total_tri,inv_valuz1)
            # tot_tri= fbcursor.fetchone()
            

            # total_tax1_tri='SELECT SUM(totpaid) from invoice WHERE totpaid = (SELECT totpaid FROM invoice WHERE invodate BETWEEN %s and %s)'
            # inv_valuz2=(var1,var2)
            # fbcursor.execute(total_tax1_tri,inv_valuz2)
            # tot_tax1_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(balance) from invoice WHERE balance = (SELECT balance FROM invoice WHERE invodate BETWEEN %s and %s)'
            # inv_valuz3=(var1,var2)
            # fbcursor.execute(total_tax2_tri,inv_valuz3)
            # tot_tax2_tri= fbcursor.fetchone()
            
            # rp_inv_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total','Total Paid','Balance'))
            # rp_inv_tree.insert('', 'end',text="1",values=('','','','','',tot_tri,tot_tax1_tri,tot_tax2_tri))

            window = canvas.create_window(270, 260, anchor="nw", window=rp_inv_tree)

        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')
            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')

            rp_inv_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            rp_inv_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_inv_tree.heading("# 1", text="No")
            rp_inv_tree.column("# 2", anchor=E, stretch=NO, width=70)
            rp_inv_tree.heading("# 2", text="Date")
            rp_inv_tree.column("# 3", anchor=E, stretch=NO, width=70)
            rp_inv_tree.heading("# 3", text="Due Date")
            rp_inv_tree.column("# 4", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 4", text="Terms")
            rp_inv_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 5", text="Status")
            rp_inv_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 6", text="Invoice Total")
            rp_inv_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 7", text="Invoice Paid")
            rp_inv_tree.column("# 8", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 8", text="Balance")
            # Insert the data in Treeview widget
            

            window = canvas.create_window(290, 260, anchor="nw", window=tree)

        canvas.create_text(900,100,text="Invoice Report",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+invfrm.get()+"      Date To:"+invto.get()+"\n Invoice Category: All",fill='black',font=("Helvetica", 8), justify='right')

        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
    #========================================================================================================
#================================================================================================================
    elif rth=="Last 90 days":
        date_filter=date.today()
        in_dat=date_filter-timedelta(days=90)
        rp_exir.delete(0,'end')
        rp_exir.insert(0, in_dat)

        cr=date.today()
        rp_exir1.delete(0,'end')
        rp_exir1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        # Create an instance of Style widget
        style=ttk.Style()
        style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
        style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
        style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders
        
        if company is not None:
            canvas.create_text(310,100,text=company[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company[4],fill='black',font=("Helvetica", 8), justify='left')

            # Add a Treeview widge
                
            rp_inv_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            rp_inv_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_inv_tree.heading("# 1", text="No")
            rp_inv_tree.column("# 2", anchor=E, stretch=NO, width=80)
            rp_inv_tree.heading("# 2", text="Date")
            rp_inv_tree.column("# 3", anchor=E, stretch=NO, width=80)
            rp_inv_tree.heading("# 3", text="Due Date")
            rp_inv_tree.column("# 4", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 4", text="Terms")
            rp_inv_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 5", text="Status")
            rp_inv_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 6", text="Invoice Total")
            rp_inv_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 7", text="Invoice Paid")
            rp_inv_tree.column("# 8", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 8", text="Balance")
            # Insert the data in Treeview widget
            
            rp_inv_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total','Total Paid','Balance'))
            
            for record in rp_inv_tree.get_children():
                rp_inv_tree.delete(record)
            count=0
            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE invodate BETWEEN %s and %s'
            inv_valuz=(var1,var2)

            fbcursor.execute(sql_inv_dt,inv_valuz)
           
            
            for i in fbcursor:
                rp_inv_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[35], i[4], i[8], i[9],i[10]))
                count += 1
            # total_tri='SELECT SUM(invoicetot) from invoice WHERE invoicetot = (SELECT invoicetot FROM invoice WHERE invodate BETWEEN %s and %s)'
            # inv_valuz1=(var1,var2)
            # fbcursor.execute(total_tri,inv_valuz1)
            # tot_tri= fbcursor.fetchone()
            

            # total_tax1_tri='SELECT SUM(totpaid) from invoice WHERE totpaid = (SELECT totpaid FROM invoice WHERE invodate BETWEEN %s and %s)'
            # inv_valuz2=(var1,var2)
            # fbcursor.execute(total_tax1_tri,inv_valuz2)
            # tot_tax1_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(balance) from invoice WHERE balance = (SELECT balance FROM invoice WHERE invodate BETWEEN %s and %s)'
            # inv_valuz3=(var1,var2)
            # fbcursor.execute(total_tax2_tri,inv_valuz3)
            # tot_tax2_tri= fbcursor.fetchone()
            
            # rp_inv_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total','Total Paid','Balance'))
            # rp_inv_tree.insert('', 'end',text="1",values=('','','','','',tot_tri,tot_tax1_tri,tot_tax2_tri))

            window = canvas.create_window(270, 260, anchor="nw", window=rp_inv_tree)

        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')
            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=50)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=100)
            tree.heading("# 4", text="Terms")
            tree.column("# 5", anchor=E, stretch=NO, width=100)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=100)
            tree.heading("# 6", text="Invoice Total")
            tree.column("# 7", anchor=E, stretch=NO, width=100)
            tree.heading("# 7", text="Invoice Paid")
            tree.column("# 8", anchor=E, stretch=NO, width=100)
            tree.heading("# 8", text="Balance")
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','Invoice Total','Total Paid','Balance'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)
        canvas.create_text(900,100,text="Invoice Report",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+invfrm.get()+"      Date To:"+invto.get()+"\n Invoice Category: All",fill='black',font=("Helvetica", 8), justify='right')

        canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
            
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
        #====================================================================================================
    elif rth=="Previous month":
        last_day_of_prev_month=date.today().replace(day=1)- timedelta(days=1)
        in_dat=date.today().replace(day=1)-timedelta(last_day_of_prev_month.day)
        rp_exir.delete(0,'end')
        rp_exir.insert(0, in_dat)

        cr=date.today()
        rp_exir1.delete(0,'end')
        rp_exir1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        # Create an instance of Style widget
        style=ttk.Style()
        style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
        style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
        style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders
        
        if company is not None:
            canvas.create_text(310,100,text=company[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company[4],fill='black',font=("Helvetica", 8), justify='left')

            # Add a Treeview widge
                
            rp_inv_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            rp_inv_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_inv_tree.heading("# 1", text="No")
            rp_inv_tree.column("# 2", anchor=E, stretch=NO, width=80)
            rp_inv_tree.heading("# 2", text="Date")
            rp_inv_tree.column("# 3", anchor=E, stretch=NO, width=80)
            rp_inv_tree.heading("# 3", text="Due Date")
            rp_inv_tree.column("# 4", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 4", text="Terms")
            rp_inv_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 5", text="Status")
            rp_inv_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 6", text="Invoice Total")
            rp_inv_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 7", text="Invoice Paid")
            rp_inv_tree.column("# 8", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 8", text="Balance")
            # Insert the data in Treeview widget
            
            rp_inv_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total','Total Paid','Balance'))
            
            for record in rp_inv_tree.get_children():
                rp_inv_tree.delete(record)
            count=0
            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE invodate BETWEEN %s and %s'
            inv_valuz=(var1,var2)

            fbcursor.execute(sql_inv_dt,inv_valuz)
           
            
            for i in fbcursor:
                rp_inv_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[35], i[4], i[8], i[9],i[10]))
                count += 1
            # total_tri='SELECT SUM(invoicetot) from invoice WHERE invoicetot = (SELECT invoicetot FROM invoice WHERE invodate BETWEEN %s and %s)'
            # inv_valuz1=(var1,var2)
            # fbcursor.execute(total_tri,inv_valuz1)
            # tot_tri= fbcursor.fetchone()
            

            # total_tax1_tri='SELECT SUM(totpaid) from invoice WHERE totpaid = (SELECT totpaid FROM invoice WHERE invodate BETWEEN %s and %s)'
            # inv_valuz2=(var1,var2)
            # fbcursor.execute(total_tax1_tri,inv_valuz2)
            # tot_tax1_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(balance) from invoice WHERE balance = (SELECT balance FROM invoice WHERE invodate BETWEEN %s and %s)'
            # inv_valuz3=(var1,var2)
            # fbcursor.execute(total_tax2_tri,inv_valuz3)
            # tot_tax2_tri= fbcursor.fetchone()
            
            # rp_inv_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total','Total Paid','Balance'))
            # rp_inv_tree.insert('', 'end',text="1",values=('','','','','',tot_tri,tot_tax1_tri,tot_tax2_tri))

            window = canvas.create_window(270, 260, anchor="nw", window=rp_inv_tree)

        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')
            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')

            rp_inv_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            rp_inv_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_inv_tree.heading("# 1", text="No")
            rp_inv_tree.column("# 2", anchor=E, stretch=NO, width=70)
            rp_inv_tree.heading("# 2", text="Date")
            rp_inv_tree.column("# 3", anchor=E, stretch=NO, width=70)
            rp_inv_tree.heading("# 3", text="Due Date")
            rp_inv_tree.column("# 4", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 4", text="Terms")
            rp_inv_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 5", text="Status")
            rp_inv_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 6", text="Invoice Total")
            rp_inv_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 7", text="Invoice Paid")
            rp_inv_tree.column("# 8", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 8", text="Balance")
            # Insert the data in Treeview widget
            

            window = canvas.create_window(290, 260, anchor="nw", window=tree)

        canvas.create_text(900,100,text="Invoice Report",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+invfrm.get()+"      Date To:"+invto.get()+"\n Invoice Category: All",fill='black',font=("Helvetica", 8), justify='right')


        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
        #===========================================================================================================
    elif rth=="Previous year":
        

        last_year = (datetime.now()-relativedelta(years=1)).strftime("%Y-%m-%d")
        rp_exir.delete(0,'end')
        rp_exir.insert(0, last_year)

        cr=date.today()
        rp_exir1.delete(0,'end')
        rp_exir1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        # Create an instance of Style widget
        style=ttk.Style()
        style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
        style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
        style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders
        
        if company is not None:
            canvas.create_text(310,100,text=company[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company[4],fill='black',font=("Helvetica", 8), justify='left')

            # Add a Treeview widge
                
            rp_inv_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            rp_inv_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_inv_tree.heading("# 1", text="No")
            rp_inv_tree.column("# 2", anchor=E, stretch=NO, width=80)
            rp_inv_tree.heading("# 2", text="Date")
            rp_inv_tree.column("# 3", anchor=E, stretch=NO, width=80)
            rp_inv_tree.heading("# 3", text="Due Date")
            rp_inv_tree.column("# 4", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 4", text="Terms")
            rp_inv_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 5", text="Status")
            rp_inv_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 6", text="Invoice Total")
            rp_inv_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 7", text="Invoice Paid")
            rp_inv_tree.column("# 8", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 8", text="Balance")
            # Insert the data in Treeview widget
            
            rp_inv_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total','Total Paid','Balance'))
            
            for record in rp_inv_tree.get_children():
                rp_inv_tree.delete(record)
            count=0

            var1=last_year
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE invodate BETWEEN %s and %s'
            inv_valuz=(var1,var2)

            fbcursor.execute(sql_inv_dt,inv_valuz)
           
            
            for i in fbcursor:
                rp_inv_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[35], i[4], i[8], i[9],i[10]))
                count += 1
            # total_tri='SELECT SUM(invoicetot) from invoice WHERE invoicetot = (SELECT invoicetot FROM invoice WHERE invodate BETWEEN %s and %s)'
            # inv_valuz1=(var1,var2)
            # fbcursor.execute(total_tri,inv_valuz1)
            # tot_tri= fbcursor.fetchone()
            

            # total_tax1_tri='SELECT SUM(totpaid) from invoice WHERE totpaid = (SELECT totpaid FROM invoice WHERE invodate BETWEEN %s and %s)'
            # inv_valuz2=(var1,var2)
            # fbcursor.execute(total_tax1_tri,inv_valuz2)
            # tot_tax1_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(balance) from invoice WHERE balance = (SELECT balance FROM invoice WHERE invodate BETWEEN %s and %s)'
            # inv_valuz3=(var1,var2)
            # fbcursor.execute(total_tax2_tri,inv_valuz3)
            # tot_tax2_tri= fbcursor.fetchone()
            
            # rp_inv_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total','Total Paid','Balance'))
            # rp_inv_tree.insert('', 'end',text="1",values=('','','','','',tot_tri,tot_tax1_tri,tot_tax2_tri))

            window = canvas.create_window(270, 260, anchor="nw", window=rp_inv_tree)

        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')
            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')

            rp_inv_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            rp_inv_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_inv_tree.heading("# 1", text="No")
            rp_inv_tree.column("# 2", anchor=E, stretch=NO, width=70)
            rp_inv_tree.heading("# 2", text="Date")
            rp_inv_tree.column("# 3", anchor=E, stretch=NO, width=70)
            rp_inv_tree.heading("# 3", text="Due Date")
            rp_inv_tree.column("# 4", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 4", text="Terms")
            rp_inv_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 5", text="Status")
            rp_inv_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 6", text="Invoice Total")
            rp_inv_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 7", text="Invoice Paid")
            rp_inv_tree.column("# 8", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 8", text="Balance")
            # Insert the data in Treeview widget
            

            window = canvas.create_window(290, 260, anchor="nw", window=tree)

        canvas.create_text(900,100,text="Invoice Report",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+invfrm.get()+"      Date To:"+invto.get()+"\n Invoice Category: All",fill='black',font=("Helvetica", 8), justify='right')


        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
    # ------------------------------
    elif rth=="Custom Range":
        ltt=rp_exir.get_date()
        ltt1=rp_exir1.get_date()
        cr1=date.today()
        rp_exir.delete(0,'end')
        rp_exir.insert(0, cr1)

        cr=date.today()
        rp_exir1.delete(0,'end')
        rp_exir1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        # Create an instance of Style widget
        style=ttk.Style()
        style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
        style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
        style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders
        
        if company is not None:
            canvas.create_text(310,100,text=company[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company[4],fill='black',font=("Helvetica", 8), justify='left')

            # Add a Treeview widge
                
            rp_inv_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            rp_inv_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_inv_tree.heading("# 1", text="No")
            rp_inv_tree.column("# 2", anchor=E, stretch=NO, width=80)
            rp_inv_tree.heading("# 2", text="Date")
            rp_inv_tree.column("# 3", anchor=E, stretch=NO, width=80)
            rp_inv_tree.heading("# 3", text="Due Date")
            rp_inv_tree.column("# 4", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 4", text="Terms")
            rp_inv_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 5", text="Status")
            rp_inv_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 6", text="Invoice Total")
            rp_inv_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 7", text="Invoice Paid")
            rp_inv_tree.column("# 8", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 8", text="Balance")
            # Insert the data in Treeview widget
            
            rp_inv_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total','Total Paid','Balance'))
            
            for record in rp_inv_tree.get_children():
                rp_inv_tree.delete(record)
            count=0
           
            var1=ltt
            var2=ltt1
            sql_inv_dt='SELECT * FROM invoice WHERE invodate BETWEEN %s and %s'
            inv_valuz=(var1,var2)

            fbcursor.execute(sql_inv_dt,inv_valuz)
           
            
            for i in fbcursor:
                rp_inv_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[35], i[4], i[8], i[9],i[10]))
                count += 1
            # total_tri='SELECT SUM(invoicetot) from invoice WHERE invoicetot = (SELECT invoicetot FROM invoice WHERE invodate BETWEEN %s and %s)'
            # inv_valuz1=(var1,var2)
            # fbcursor.execute(total_tri,inv_valuz1)
            # tot_tri= fbcursor.fetchone()
            

            # total_tax1_tri='SELECT SUM(totpaid) from invoice WHERE totpaid = (SELECT totpaid FROM invoice WHERE invodate BETWEEN %s and %s)'
            # inv_valuz2=(var1,var2)
            # fbcursor.execute(total_tax1_tri,inv_valuz2)
            # tot_tax1_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(balance) from invoice WHERE balance = (SELECT balance FROM invoice WHERE invodate BETWEEN %s and %s)'
            # inv_valuz3=(var1,var2)
            # fbcursor.execute(total_tax2_tri,inv_valuz3)
            # tot_tax2_tri= fbcursor.fetchone()
            
            # rp_inv_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total','Total Paid','Balance'))
            # rp_inv_tree.insert('', 'end',text="1",values=('','','','','',tot_tri,tot_tax1_tri,tot_tax2_tri))

            window = canvas.create_window(270, 260, anchor="nw", window=rp_inv_tree)

        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')
            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')

            rp_inv_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            rp_inv_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_inv_tree.heading("# 1", text="No")
            rp_inv_tree.column("# 2", anchor=E, stretch=NO, width=70)
            rp_inv_tree.heading("# 2", text="Date")
            rp_inv_tree.column("# 3", anchor=E, stretch=NO, width=70)
            rp_inv_tree.heading("# 3", text="Due Date")
            rp_inv_tree.column("# 4", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 4", text="Terms")
            rp_inv_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 5", text="Status")
            rp_inv_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 6", text="Invoice Total")
            rp_inv_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 7", text="Invoice Paid")
            rp_inv_tree.column("# 8", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 8", text="Balance")
            # Insert the data in Treeview widget
            

            window = canvas.create_window(290, 260, anchor="nw", window=tree)

        canvas.create_text(900,100,text="Invoice Report",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+invfrm.get()+"      Date To:"+invto.get()+"\n Invoice Category: All",fill='black',font=("Helvetica", 8), justify='right')


        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)

        #============================================================================================
    else:
        pass

#---------------------------------------------------INVOICE REPORT (WITH CUSTOMER)---------------------------------
def category_irwc(): 
  # firtst filter-----------------------------------Month to date
    rth=irwcfilter.get()
    # #for company details
    tro_company = "SELECT * from company"
    fbcursor.execute(tro_company)
    company_tro= fbcursor.fetchone()
    global canvas
    if rth=="Month to date":

        given_date = datetime.today().date()
        in_dat = given_date.replace(day=1)
        irwcfrm1.delete(0,'end')
        irwcfrm1.insert(0, in_dat)

        cr=date.today()
        irwcto1.delete(0,'end')
        irwcto1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tro is not None:
            canvas.create_text(310,100,text=company_tro[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_tro[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_tro[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_irwc_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_irwc_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_irwc_tree.heading("# 1", text="No")
            rp_irwc_tree.column("# 2", anchor=E, stretch=NO, width=90)
            rp_irwc_tree.heading("# 2", text="Date")
            rp_irwc_tree.column("# 3", anchor=E, stretch=NO, width=90)
            rp_irwc_tree.heading("# 3", text="Due Date")
            rp_irwc_tree.column("# 4", anchor=E, stretch=NO, width=300)
            rp_irwc_tree.heading("# 4", text="Customer")
            rp_irwc_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_irwc_tree.heading("# 5", text="Status")
            rp_irwc_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_irwc_tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            rp_irwc_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))

            # Insert the data in Treeview widget
            for record in rp_irwc_tree.get_children():
                rp_irwc_tree.delete(record)
            count=0
            

            
            rp_irwc_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))

            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE invodate BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:
                rp_irwc_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[18], i[4], i[8]))
                count += 1

            # total_tri='SELECT SUM(invoicetot) from invoice'
            # fbcursor.execute(total_tri)
            # tot_ird= fbcursor.fetchone()
        
            
            # rp_irwc_tree.insert('', 'end',text="1",values=('','','End of List','','','Invoice Total'))

            # rp_irwc_tree.insert('', 'end',text="1",values=('','','','','Summary:',tot_ird))
            
            window = canvas.create_window(270, 260, anchor="nw", window=rp_irwc_tree)


            
        else:

            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')
            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=50)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=300)
            tree.heading("# 4", text="Customer")
            tree.column("# 5", anchor=E, stretch=NO, width=100)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=100)
            tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)

        canvas.create_text(900,100,text="Invoice Report",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+irwcfrm.get()+"      Date To:"+irwcto.get()+"\n Invoice Category: All",fill='black',font=("Helvetica", 8), justify='right')

        canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)

    #--------------------------------------------------------------------------------------------------------------
    elif rth=="Year To Date":
        test_date=pendulum.today().date()
        start = test_date.start_of('year')
        irwcfrm1.delete(0,'end')
        irwcfrm1.insert(0, start)

        cr=date.today()
        irwcto1.delete(0,'end')
        irwcto1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tro is not None:
            canvas.create_text(310,100,text=company_tro[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_tro[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_tro[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_irwc_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_irwc_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_irwc_tree.heading("# 1", text="No")
            rp_irwc_tree.column("# 2", anchor=E, stretch=NO, width=90)
            rp_irwc_tree.heading("# 2", text="Date")
            rp_irwc_tree.column("# 3", anchor=E, stretch=NO, width=90)
            rp_irwc_tree.heading("# 3", text="Due Date")
            rp_irwc_tree.column("# 4", anchor=E, stretch=NO, width=300)
            rp_irwc_tree.heading("# 4", text="Customer")
            rp_irwc_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_irwc_tree.heading("# 5", text="Status")
            rp_irwc_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_irwc_tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            rp_irwc_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))

            # Insert the data in Treeview widget
            for record in rp_irwc_tree.get_children():
                rp_irwc_tree.delete(record)
            count=0

            var1=start
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE invodate BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:
                rp_irwc_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[18], i[4], i[8]))
                count += 1

            # total_tri='SELECT SUM(invoicetot) from invoice'
            # fbcursor.execute(total_tri)
            # tot_ird= fbcursor.fetchone()
        
            
            # rp_irwc_tree.insert('', 'end',text="1",values=('','','End of List','','','Invoice Total'))

            # rp_irwc_tree.insert('', 'end',text="1",values=('','','','','Summary:',tot_ird))
            
            window = canvas.create_window(270, 260, anchor="nw", window=rp_irwc_tree)


            
        else:

            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')
            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=50)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=300)
            tree.heading("# 4", text="Customer")
            tree.column("# 5", anchor=E, stretch=NO, width=100)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=100)
            tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)

        canvas.create_text(900,100,text="Invoice Report",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+irwcfrm.get()+"      Date To:"+irwcto.get()+"\n Invoice Category: All",fill='black',font=("Helvetica", 8), justify='right')

        canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
        #===============================================================================================
    elif rth=="Current year":
        test_date=pendulum.today().date()
        start = test_date.start_of('year')
        irwcfrm1.delete(0,'end')
        irwcfrm1.insert(0, start)

        test_date_end=pendulum.today().date()
        end = test_date_end.end_of('year')
        irwcto1.delete(0,'end')
        irwcto1.insert(0, end)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tro is not None:
            canvas.create_text(310,100,text=company_tro[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_tro[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_tro[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_irwc_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_irwc_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_irwc_tree.heading("# 1", text="No")
            rp_irwc_tree.column("# 2", anchor=E, stretch=NO, width=90)
            rp_irwc_tree.heading("# 2", text="Date")
            rp_irwc_tree.column("# 3", anchor=E, stretch=NO, width=90)
            rp_irwc_tree.heading("# 3", text="Due Date")
            rp_irwc_tree.column("# 4", anchor=E, stretch=NO, width=300)
            rp_irwc_tree.heading("# 4", text="Customer")
            rp_irwc_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_irwc_tree.heading("# 5", text="Status")
            rp_irwc_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_irwc_tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            rp_irwc_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))

            # Insert the data in Treeview widget
            for record in rp_irwc_tree.get_children():
                rp_irwc_tree.delete(record)
            count=0
            var1=start
            var2=end
            sql_inv_dt='SELECT * FROM invoice WHERE invodate BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:
                rp_irwc_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[18], i[4], i[8]))
                count += 1

            # total_tri='SELECT SUM(invoicetot) from invoice'
            # fbcursor.execute(total_tri)
            # tot_ird= fbcursor.fetchone()
        
            
            # rp_irwc_tree.insert('', 'end',text="1",values=('','','End of List','','','Invoice Total'))

            # rp_irwc_tree.insert('', 'end',text="1",values=('','','','','Summary:',tot_ird))
            
            window = canvas.create_window(270, 260, anchor="nw", window=rp_irwc_tree)


            
        else:

            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')
            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=50)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=300)
            tree.heading("# 4", text="Customer")
            tree.column("# 5", anchor=E, stretch=NO, width=100)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=100)
            tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)

        canvas.create_text(900,100,text="Invoice Report",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+irwcfrm.get()+"      Date To:"+irwcto.get()+"\n Invoice Category: All",fill='black',font=("Helvetica", 8), justify='right')

        canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')

        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=55, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
    #==============================================================================================================
    elif rth=="Current month":
        given_date = datetime.today().date()
        in_dat = given_date.replace(day=1)
        irwcfrm1.delete(0,'end')
        irwcfrm1.insert(0, in_dat)

        test_date=date.today()
        nxt_mnth=(test_date+relativedelta(day=31))
        irwcto1.delete(0,'end')
        irwcto1.insert(0, nxt_mnth)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tro is not None:
            canvas.create_text(310,100,text=company_tro[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_tro[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_tro[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_irwc_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_irwc_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_irwc_tree.heading("# 1", text="No")
            rp_irwc_tree.column("# 2", anchor=E, stretch=NO, width=90)
            rp_irwc_tree.heading("# 2", text="Date")
            rp_irwc_tree.column("# 3", anchor=E, stretch=NO, width=90)
            rp_irwc_tree.heading("# 3", text="Due Date")
            rp_irwc_tree.column("# 4", anchor=E, stretch=NO, width=300)
            rp_irwc_tree.heading("# 4", text="Customer")
            rp_irwc_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_irwc_tree.heading("# 5", text="Status")
            rp_irwc_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_irwc_tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            rp_irwc_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))

            # Insert the data in Treeview widget
            for record in rp_irwc_tree.get_children():
                rp_irwc_tree.delete(record)
            count=0
            var1=in_dat
            var2=nxt_mnth
            sql_inv_dt='SELECT * FROM invoice WHERE invodate BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:
                rp_irwc_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[18], i[4], i[8]))
                count += 1

            # total_tri='SELECT SUM(invoicetot) from invoice'
            # fbcursor.execute(total_tri)
            # tot_ird= fbcursor.fetchone()
        
            
            # rp_irwc_tree.insert('', 'end',text="1",values=('','','End of List','','','Invoice Total'))

            # rp_irwc_tree.insert('', 'end',text="1",values=('','','','','Summary:',tot_ird))
            
            window = canvas.create_window(270, 260, anchor="nw", window=rp_irwc_tree)


            
        else:

            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')
            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=50)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=300)
            tree.heading("# 4", text="Customer")
            tree.column("# 5", anchor=E, stretch=NO, width=100)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=100)
            tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)

        canvas.create_text(900,100,text="Invoice Report",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+irwcfrm.get()+"      Date To:"+irwcto.get()+"\n Invoice Category: All",fill='black',font=("Helvetica", 8), justify='right')

        canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')

        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
        #=====================================================================================================
    elif rth=="Current days":
        given_date = date.today()
        irwcfrm1.delete(0,'end')
        irwcfrm1.insert(0,given_date)

        cr=date.today()
        irwcto1.delete(0,'end')
        irwcto1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tro is not None:
            canvas.create_text(310,100,text=company_tro[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_tro[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_tro[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_irwc_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_irwc_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_irwc_tree.heading("# 1", text="No")
            rp_irwc_tree.column("# 2", anchor=E, stretch=NO, width=90)
            rp_irwc_tree.heading("# 2", text="Date")
            rp_irwc_tree.column("# 3", anchor=E, stretch=NO, width=90)
            rp_irwc_tree.heading("# 3", text="Due Date")
            rp_irwc_tree.column("# 4", anchor=E, stretch=NO, width=300)
            rp_irwc_tree.heading("# 4", text="Customer")
            rp_irwc_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_irwc_tree.heading("# 5", text="Status")
            rp_irwc_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_irwc_tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            rp_irwc_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))

            # Insert the data in Treeview widget
            for record in rp_irwc_tree.get_children():
                rp_irwc_tree.delete(record)
            count=0
            var1=given_date
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE invodate BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:
                rp_irwc_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[18], i[4], i[8]))
                count += 1

            # total_tri='SELECT SUM(invoicetot) from invoice'
            # fbcursor.execute(total_tri)
            # tot_ird= fbcursor.fetchone()
        
            
            # rp_irwc_tree.insert('', 'end',text="1",values=('','','End of List','','','Invoice Total'))

            # rp_irwc_tree.insert('', 'end',text="1",values=('','','','','Summary:',tot_ird))
            
            window = canvas.create_window(270, 260, anchor="nw", window=rp_irwc_tree)


            
        else:

            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')
            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=50)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=300)
            tree.heading("# 4", text="Customer")
            tree.column("# 5", anchor=E, stretch=NO, width=100)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=100)
            tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)

        canvas.create_text(900,100,text="Invoice Report",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+irwcfrm.get()+"      Date To:"+irwcto.get()+"\n Invoice Category: All",fill='black',font=("Helvetica", 8), justify='right')

        canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
        #=================================================================================================
    elif rth=="Last 30 days":
        date_filter=date.today()
        in_dat=date_filter-timedelta(days=30)
        irwcfrm1.delete(0,'end')
        irwcfrm1.insert(0, in_dat)

        cr=date.today()
        irwcto1.delete(0,'end')
        irwcto1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        if company_tro is not None:
            canvas.create_text(310,100,text=company_tro[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_tro[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_tro[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_irwc_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_irwc_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_irwc_tree.heading("# 1", text="No")
            rp_irwc_tree.column("# 2", anchor=E, stretch=NO, width=90)
            rp_irwc_tree.heading("# 2", text="Date")
            rp_irwc_tree.column("# 3", anchor=E, stretch=NO, width=90)
            rp_irwc_tree.heading("# 3", text="Due Date")
            rp_irwc_tree.column("# 4", anchor=E, stretch=NO, width=300)
            rp_irwc_tree.heading("# 4", text="Customer")
            rp_irwc_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_irwc_tree.heading("# 5", text="Status")
            rp_irwc_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_irwc_tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            rp_irwc_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))

            # Insert the data in Treeview widget
            for record in rp_irwc_tree.get_children():
                rp_irwc_tree.delete(record)
            count=0

            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE invodate BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:
                rp_irwc_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[18], i[4], i[8]))
                count += 1

            # total_tri='SELECT SUM(invoicetot) from invoice'
            # fbcursor.execute(total_tri)
            # tot_ird= fbcursor.fetchone()
        
            
            # rp_irwc_tree.insert('', 'end',text="1",values=('','','End of List','','','Invoice Total'))

            # rp_irwc_tree.insert('', 'end',text="1",values=('','','','','Summary:',tot_ird))
            
            window = canvas.create_window(270, 260, anchor="nw", window=rp_irwc_tree)


            
        else:

            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')
            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=50)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=300)
            tree.heading("# 4", text="Customer")
            tree.column("# 5", anchor=E, stretch=NO, width=100)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=100)
            tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)

        canvas.create_text(900,100,text="Invoice Report",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+irwcfrm.get()+"      Date To:"+irwcto.get()+"\n Invoice Category: All",fill='black',font=("Helvetica", 8), justify='right')

        canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')

        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
    
    #=====================================================================================================
    elif rth=="Last 60 days":
        date_filter=date.today()
        in_dat=date_filter-timedelta(days=60)
        irwcfrm1.delete(0,'end')
        irwcfrm1.insert(0, in_dat)

        cr=date.today()
        irwcto1.delete(0,'end')
        irwcto1.insert(0, cr)
        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tro is not None:
            canvas.create_text(310,100,text=company_tro[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_tro[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_tro[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_irwc_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_irwc_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_irwc_tree.heading("# 1", text="No")
            rp_irwc_tree.column("# 2", anchor=E, stretch=NO, width=90)
            rp_irwc_tree.heading("# 2", text="Date")
            rp_irwc_tree.column("# 3", anchor=E, stretch=NO, width=90)
            rp_irwc_tree.heading("# 3", text="Due Date")
            rp_irwc_tree.column("# 4", anchor=E, stretch=NO, width=300)
            rp_irwc_tree.heading("# 4", text="Customer")
            rp_irwc_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_irwc_tree.heading("# 5", text="Status")
            rp_irwc_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_irwc_tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            rp_irwc_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))

            # Insert the data in Treeview widget
            for record in rp_irwc_tree.get_children():
                rp_irwc_tree.delete(record)
            count=0
            
            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE invodate BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:
                rp_irwc_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[18], i[4], i[8]))
                count += 1

            # total_tri='SELECT SUM(invoicetot) from invoice'
            # fbcursor.execute(total_tri)
            # tot_ird= fbcursor.fetchone()
        
            
            # rp_irwc_tree.insert('', 'end',text="1",values=('','','End of List','','','Invoice Total'))

            # rp_irwc_tree.insert('', 'end',text="1",values=('','','','','Summary:',tot_ird))
            
            window = canvas.create_window(270, 260, anchor="nw", window=rp_irwc_tree)


            
        else:

            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')
            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=50)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=300)
            tree.heading("# 4", text="Customer")
            tree.column("# 5", anchor=E, stretch=NO, width=100)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=100)
            tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)

        canvas.create_text(900,100,text="Invoice Report",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+irwcfrm.get()+"      Date To:"+irwcto.get()+"\n Invoice Category: All",fill='black',font=("Helvetica", 8), justify='right')

        canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
 
#================================================================================================================
    elif rth=="Last 90 days":
        date_filter=date.today()
        in_dat=date_filter-timedelta(days=90)
        irwcfrm1.delete(0,'end')
        irwcfrm1.insert(0, in_dat)

        cr=date.today()
        irwcto1.delete(0,'end')
        irwcto1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tro is not None:
            canvas.create_text(310,100,text=company_tro[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_tro[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_tro[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_irwc_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_irwc_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_irwc_tree.heading("# 1", text="No")
            rp_irwc_tree.column("# 2", anchor=E, stretch=NO, width=90)
            rp_irwc_tree.heading("# 2", text="Date")
            rp_irwc_tree.column("# 3", anchor=E, stretch=NO, width=90)
            rp_irwc_tree.heading("# 3", text="Due Date")
            rp_irwc_tree.column("# 4", anchor=E, stretch=NO, width=300)
            rp_irwc_tree.heading("# 4", text="Customer")
            rp_irwc_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_irwc_tree.heading("# 5", text="Status")
            rp_irwc_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_irwc_tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            rp_irwc_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))

            # Insert the data in Treeview widget
            for record in rp_irwc_tree.get_children():
                rp_irwc_tree.delete(record)
            count=0
            
            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE invodate BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:
                rp_irwc_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[18], i[4], i[8]))
                count += 1

            # total_tri='SELECT SUM(invoicetot) from invoice'
            # fbcursor.execute(total_tri)
            # tot_ird= fbcursor.fetchone()
        
            
            # rp_irwc_tree.insert('', 'end',text="1",values=('','','End of List','','','Invoice Total'))

            # rp_irwc_tree.insert('', 'end',text="1",values=('','','','','Summary:',tot_ird))
            
            window = canvas.create_window(270, 260, anchor="nw", window=rp_irwc_tree)


            
        else:

            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')
            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=50)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=300)
            tree.heading("# 4", text="Customer")
            tree.column("# 5", anchor=E, stretch=NO, width=100)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=100)
            tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)

        canvas.create_text(900,100,text="Invoice Report",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+irwcfrm.get()+"      Date To:"+irwcto.get()+"\n Invoice Category: All",fill='black',font=("Helvetica", 8), justify='right')

        canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
        #====================================================================================================
    elif rth=="Previous month":
        last_day_of_prev_month=date.today().replace(day=1)- timedelta(days=1)
        in_dat=date.today().replace(day=1)-timedelta(last_day_of_prev_month.day)
        irwcfrm1.delete(0,'end')
        irwcfrm1.insert(0, in_dat)

        cr=date.today()
        irwcto1.delete(0,'end')
        irwcto1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tro is not None:
            canvas.create_text(310,100,text=company_tro[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_tro[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_tro[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_irwc_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_irwc_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_irwc_tree.heading("# 1", text="No")
            rp_irwc_tree.column("# 2", anchor=E, stretch=NO, width=90)
            rp_irwc_tree.heading("# 2", text="Date")
            rp_irwc_tree.column("# 3", anchor=E, stretch=NO, width=90)
            rp_irwc_tree.heading("# 3", text="Due Date")
            rp_irwc_tree.column("# 4", anchor=E, stretch=NO, width=300)
            rp_irwc_tree.heading("# 4", text="Customer")
            rp_irwc_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_irwc_tree.heading("# 5", text="Status")
            rp_irwc_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_irwc_tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            rp_irwc_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))

            # Insert the data in Treeview widget
            for record in rp_irwc_tree.get_children():
                rp_irwc_tree.delete(record)
            count=0
            
            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE invodate BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:
                rp_irwc_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[18], i[4], i[8]))
                count += 1

            # total_tri='SELECT SUM(invoicetot) from invoice'
            # fbcursor.execute(total_tri)
            # tot_ird= fbcursor.fetchone()
        
            
            # rp_irwc_tree.insert('', 'end',text="1",values=('','','End of List','','','Invoice Total'))

            # rp_irwc_tree.insert('', 'end',text="1",values=('','','','','Summary:',tot_ird))
            
            window = canvas.create_window(270, 260, anchor="nw", window=rp_irwc_tree)


            
        else:

            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')
            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=50)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=300)
            tree.heading("# 4", text="Customer")
            tree.column("# 5", anchor=E, stretch=NO, width=100)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=100)
            tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)

        canvas.create_text(900,100,text="Invoice Report",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+irwcfrm.get()+"      Date To:"+irwcto.get()+"\n Invoice Category: All",fill='black',font=("Helvetica", 8), justify='right')

        canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')

        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
        #===========================================================================================================
    elif rth=="Previous year":
        last_year = (datetime.now()-relativedelta(years=1)).strftime("%Y-%m-%d")
        irwcfrm1.delete(0,'end')
        irwcfrm1.insert(0, last_year)

        cr=date.today()
        irwcto1.delete(0,'end')
        irwcto1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tro is not None:
            canvas.create_text(310,100,text=company_tro[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_tro[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_tro[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_irwc_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_irwc_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_irwc_tree.heading("# 1", text="No")
            rp_irwc_tree.column("# 2", anchor=E, stretch=NO, width=90)
            rp_irwc_tree.heading("# 2", text="Date")
            rp_irwc_tree.column("# 3", anchor=E, stretch=NO, width=90)
            rp_irwc_tree.heading("# 3", text="Due Date")
            rp_irwc_tree.column("# 4", anchor=E, stretch=NO, width=300)
            rp_irwc_tree.heading("# 4", text="Customer")
            rp_irwc_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_irwc_tree.heading("# 5", text="Status")
            rp_irwc_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_irwc_tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            rp_irwc_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))

            # Insert the data in Treeview widget
            for record in rp_irwc_tree.get_children():
                rp_irwc_tree.delete(record)
            count=0
            
            var1=last_year
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE invodate BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:
                rp_irwc_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[18], i[4], i[8]))
                count += 1

            # total_tri='SELECT SUM(invoicetot) from invoice'
            # fbcursor.execute(total_tri)
            # tot_ird= fbcursor.fetchone()
        
            
            # rp_irwc_tree.insert('', 'end',text="1",values=('','','End of List','','','Invoice Total'))

            # rp_irwc_tree.insert('', 'end',text="1",values=('','','','','Summary:',tot_ird))
            
            window = canvas.create_window(270, 260, anchor="nw", window=rp_irwc_tree)


            
        else:

            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')
            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=50)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=300)
            tree.heading("# 4", text="Customer")
            tree.column("# 5", anchor=E, stretch=NO, width=100)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=100)
            tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)

        canvas.create_text(900,100,text="Invoice Report",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+irwcfrm.get()+"      Date To:"+irwcto.get()+"\n Invoice Category: All",fill='black',font=("Helvetica", 8), justify='right')

        canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')

        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
    elif rth=="Custom Range":
        lte=irwcfrm1.get_date()
        lte1=irwcto1.get_date()
        cr1=date.today()
        irwcfrm1.delete(0,'end')
        irwcfrm1.insert(0, cr1)

        cr=date.today()
        irwcto1.delete(0,'end')
        irwcto1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tro is not None:
            canvas.create_text(310,100,text=company_tro[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_tro[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_tro[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_irwc_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_irwc_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_irwc_tree.heading("# 1", text="No")
            rp_irwc_tree.column("# 2", anchor=E, stretch=NO, width=90)
            rp_irwc_tree.heading("# 2", text="Date")
            rp_irwc_tree.column("# 3", anchor=E, stretch=NO, width=90)
            rp_irwc_tree.heading("# 3", text="Due Date")
            rp_irwc_tree.column("# 4", anchor=E, stretch=NO, width=300)
            rp_irwc_tree.heading("# 4", text="Customer")
            rp_irwc_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_irwc_tree.heading("# 5", text="Status")
            rp_irwc_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_irwc_tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            rp_irwc_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))

            # Insert the data in Treeview widget
            for record in rp_irwc_tree.get_children():
                rp_irwc_tree.delete(record)
            count=0

            var1=lte
            var2=lte1
            sql_inv_dt='SELECT * FROM invoice WHERE invodate BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:
                rp_irwc_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[18], i[4], i[8]))
                count += 1

            # total_tri='SELECT SUM(invoicetot) from invoice'
            # fbcursor.execute(total_tri)
            # tot_ird= fbcursor.fetchone()
        
            
            # rp_irwc_tree.insert('', 'end',text="1",values=('','','End of List','','','Invoice Total'))

            # rp_irwc_tree.insert('', 'end',text="1",values=('','','','','Summary:',tot_ird))
            
            window = canvas.create_window(270, 260, anchor="nw", window=rp_irwc_tree)


            
        else:

            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')
            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=50)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=300)
            tree.heading("# 4", text="Customer")
            tree.column("# 5", anchor=E, stretch=NO, width=100)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=100)
            tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)

        canvas.create_text(900,100,text="Invoice Report",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+irwcfrm.get()+"      Date To:"+irwcto.get()+"\n Invoice Category: All",fill='black',font=("Helvetica", 8), justify='right')

        canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')

        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)

        #============================================================================================
    else:
        pass

#-------------------------------------------------Order report-----------------------------------------
def category_or():
  # firtst filter-----------------------------------Month to date
    rth=orfilter.get()
    # #for company details
    or_company = "SELECT * from company"
    fbcursor.execute(or_company)
    company_or= fbcursor.fetchone()
    
    
    if rth=="Month to date":
        given_date = datetime.today().date()
        in_dat = given_date.replace(day=1)
        orfrm1.delete(0,'end')
        orfrm1.insert(0, in_dat)

        cr=date.today()
        orto1.delete(0,'end')
        orto1.insert(0, cr)

        frame = Frame( 
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_or is not None:
            canvas.create_text(310,100,text=company_or[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_or[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_or[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_or_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_or_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_or_tree.heading("# 1", text="No")
            rp_or_tree.column("# 2", anchor=E, stretch=NO, width=80)
            rp_or_tree.heading("# 2", text="Date")
            rp_or_tree.column("# 3", anchor=E, stretch=NO, width=80)
            rp_or_tree.heading("# 3", text="Due Date")
            rp_or_tree.column("# 4", anchor=E, stretch=NO, width=300)
            rp_or_tree.heading("# 4", text="Customer")
            rp_or_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_or_tree.heading("# 5", text="Status")
            rp_or_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_or_tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            rp_or_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))
            
            for record in rp_or_tree.get_children():
                rp_or_tree.delete(record)
            count=0

            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM orders WHERE order_date BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:
                
                rp_or_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[1], i[2], i[3], i[4], i[26]))
                count += 1
            # total_tri='SELECT SUM(sum_subtotal) from orders'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            
            
            # rp_or_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))
            # rp_or_tree.insert('', 'end',text="1",values=('','','','','',tot_tri))

            window = canvas.create_window(270, 260, anchor="nw", window=rp_or_tree)


        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')


            canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
                
                # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=50)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=300)
            tree.heading("# 4", text="Customer")
            tree.column("# 5", anchor=E, stretch=NO, width=100)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=100)
            tree.heading("# 6", text="Invoice Total")

                # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)
        
        canvas.create_text(900,100,text="Order Report",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+orfrm.get()+"      Date To:"+orto.get()+"\n order Category: All",fill='black',font=("Helvetica", 8), justify='right')
        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)

    #--------------------------------------------------------------------------------------------------------------
    elif rth=="Year To Date":
        test_date=pendulum.today().date()
        start = test_date.start_of('year')
        orfrm1.delete(0,'end')
        orfrm1.insert(0, start)

        cr=date.today()
        orto1.delete(0,'end')
        orto1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_or is not None:
            canvas.create_text(310,100,text=company_or[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_or[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_or[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_or_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_or_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_or_tree.heading("# 1", text="No")
            rp_or_tree.column("# 2", anchor=E, stretch=NO, width=80)
            rp_or_tree.heading("# 2", text="Date")
            rp_or_tree.column("# 3", anchor=E, stretch=NO, width=80)
            rp_or_tree.heading("# 3", text="Due Date")
            rp_or_tree.column("# 4", anchor=E, stretch=NO, width=300)
            rp_or_tree.heading("# 4", text="Customer")
            rp_or_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_or_tree.heading("# 5", text="Status")
            rp_or_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_or_tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            rp_or_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))
            
            for record in rp_or_tree.get_children():
                rp_or_tree.delete(record)
            count=0

            var1=start
            var2=cr
            sql_inv_dt='SELECT * FROM orders WHERE order_date BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:
                
                rp_or_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[1], i[2], i[3], i[4], i[26]))
                count += 1
            # total_tri='SELECT SUM(sum_subtotal) from orders'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            
            
            # rp_or_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))
            # rp_or_tree.insert('', 'end',text="1",values=('','','','','',tot_tri))

            window = canvas.create_window(270, 260, anchor="nw", window=rp_or_tree)


        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')


            canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
                
                # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=50)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=300)
            tree.heading("# 4", text="Customer")
            tree.column("# 5", anchor=E, stretch=NO, width=100)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=100)
            tree.heading("# 6", text="Invoice Total")

                # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)
        
        canvas.create_text(900,100,text="Order Report",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+orfrm.get()+"      Date To:"+orto.get()+"\n order Category: All",fill='black',font=("Helvetica", 8), justify='right')

        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
        #===============================================================================================
    elif rth=="Current year":
        test_date=pendulum.today().date()
        start = test_date.start_of('year')
        orfrm1.delete(0,'end')
        orfrm1.insert(0, start)

        test_date_end=pendulum.today().date()
        end = test_date_end.end_of('year')
        orto1.delete(0,'end')
        orto1.insert(0, end)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_or is not None:
            canvas.create_text(310,100,text=company_or[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_or[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_or[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_or_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_or_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_or_tree.heading("# 1", text="No")
            rp_or_tree.column("# 2", anchor=E, stretch=NO, width=80)
            rp_or_tree.heading("# 2", text="Date")
            rp_or_tree.column("# 3", anchor=E, stretch=NO, width=80)
            rp_or_tree.heading("# 3", text="Due Date")
            rp_or_tree.column("# 4", anchor=E, stretch=NO, width=300)
            rp_or_tree.heading("# 4", text="Customer")
            rp_or_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_or_tree.heading("# 5", text="Status")
            rp_or_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_or_tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            rp_or_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))
            
            for record in rp_or_tree.get_children():
                rp_or_tree.delete(record)
            count=0
            var1=in_dat
            var2=end
            sql_inv_dt='SELECT * FROM orders WHERE order_date BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:
                
                rp_or_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[1], i[2], i[3], i[4], i[26]))
                count += 1
            # total_tri='SELECT SUM(sum_subtotal) from orders'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            
            
            # rp_or_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))
            # rp_or_tree.insert('', 'end',text="1",values=('','','','','',tot_tri))
            window = canvas.create_window(270, 260, anchor="nw", window=rp_or_tree)


        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')


            canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
                
                # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=50)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=300)
            tree.heading("# 4", text="Customer")
            tree.column("# 5", anchor=E, stretch=NO, width=100)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=100)
            tree.heading("# 6", text="Invoice Total")

                # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)
        
        canvas.create_text(900,100,text="Order Report",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+orfrm.get()+"      Date To:"+orto.get()+"\n order Category: All",fill='black',font=("Helvetica", 8), justify='right')
        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
    #==============================================================================================================
    elif rth=="Current month":
        given_date = datetime.today().date()
        in_dat = given_date.replace(day=1)
        orfrm1.delete(0,'end')
        orfrm1.insert(0, in_dat)

        test_date=date.today()
        nxt_mnth=(test_date+relativedelta(day=31))
        orto1.delete(0,'end')
        orto1.insert(0, nxt_mnth)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_or is not None:
            canvas.create_text(310,100,text=company_or[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_or[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_or[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
            
            rp_or_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_or_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_or_tree.heading("# 1", text="No")
            rp_or_tree.column("# 2", anchor=E, stretch=NO, width=80)
            rp_or_tree.heading("# 2", text="Date")
            rp_or_tree.column("# 3", anchor=E, stretch=NO, width=80)
            rp_or_tree.heading("# 3", text="Due Date")
            rp_or_tree.column("# 4", anchor=E, stretch=NO, width=300)
            rp_or_tree.heading("# 4", text="Customer")
            rp_or_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_or_tree.heading("# 5", text="Status")
            rp_or_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_or_tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            rp_or_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))
            
            for record in rp_or_tree.get_children():
                rp_or_tree.delete(record)
            count=0

            var1=in_dat
            var2=nxt_mnth
            sql_inv_dt='SELECT * FROM orders WHERE order_date BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:
                
                rp_or_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[1], i[2], i[3], i[4], i[26]))
                count += 1
            # total_tri='SELECT SUM(sum_subtotal) from orders'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            
            
            # rp_or_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))
            # rp_or_tree.insert('', 'end',text="1",values=('','','','','',tot_tri))

            window = canvas.create_window(270, 260, anchor="nw", window=rp_or_tree)


        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')


            canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
                
                # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=50)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=300)
            tree.heading("# 4", text="Customer")
            tree.column("# 5", anchor=E, stretch=NO, width=100)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=100)
            tree.heading("# 6", text="Invoice Total")

                # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)
        
        canvas.create_text(900,100,text="Order Report",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+orfrm.get()+"      Date To:"+orto.get()+"\n order Category: All",fill='black',font=("Helvetica", 8), justify='right')
        

        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
        #=====================================================================================================
    elif rth=="Current days":
        given_date = date.today()
        orfrm.delete(0,'end')
        orfrm1.insert(0,given_date)

        cr=date.today()
        orto1.delete(0,'end')
        orto1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_or is not None:
            canvas.create_text(310,100,text=company_or[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_or[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_or[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_or_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_or_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_or_tree.heading("# 1", text="No")
            rp_or_tree.column("# 2", anchor=E, stretch=NO, width=80)
            rp_or_tree.heading("# 2", text="Date")
            rp_or_tree.column("# 3", anchor=E, stretch=NO, width=80)
            rp_or_tree.heading("# 3", text="Due Date")
            rp_or_tree.column("# 4", anchor=E, stretch=NO, width=300)
            rp_or_tree.heading("# 4", text="Customer")
            rp_or_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_or_tree.heading("# 5", text="Status")
            rp_or_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_or_tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            rp_or_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))
            
            for record in rp_or_tree.get_children():
                rp_or_tree.delete(record)
            count=0
            var1=given_date
            var2=nxt_mnth
            sql_inv_dt='SELECT * FROM orders WHERE order_date BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:
                
                rp_or_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[1], i[2], i[3], i[4], i[26]))
                count += 1
            # total_tri='SELECT SUM(sum_subtotal) from orders'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            
            
            # rp_or_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))
            # rp_or_tree.insert('', 'end',text="1",values=('','','','','',tot_tri))

            window = canvas.create_window(270, 260, anchor="nw", window=rp_or_tree)


        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')


            canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
                
                # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=50)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=300)
            tree.heading("# 4", text="Customer")
            tree.column("# 5", anchor=E, stretch=NO, width=100)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=100)
            tree.heading("# 6", text="Invoice Total")

                # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)
        
        canvas.create_text(900,100,text="Order Report",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+orfrm.get()+"      Date To:"+orto.get()+"\n order Category: All",fill='black',font=("Helvetica", 8), justify='right')
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
        #=================================================================================================
    elif rth=="Last 30 days":
        date_filter=date.today()
        in_dat=date_filter-timedelta(days=30)
        orfrm1.delete(0,'end')
        orfrm1.insert(0, in_dat)

        cr=date.today()
        orto1.delete(0,'end')
        orto1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_or is not None:
            canvas.create_text(310,100,text=company_or[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_or[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_or[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_or_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_or_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_or_tree.heading("# 1", text="No")
            rp_or_tree.column("# 2", anchor=E, stretch=NO, width=80)
            rp_or_tree.heading("# 2", text="Date")
            rp_or_tree.column("# 3", anchor=E, stretch=NO, width=80)
            rp_or_tree.heading("# 3", text="Due Date")
            rp_or_tree.column("# 4", anchor=E, stretch=NO, width=300)
            rp_or_tree.heading("# 4", text="Customer")
            rp_or_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_or_tree.heading("# 5", text="Status")
            rp_or_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_or_tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            rp_or_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))
            
            for record in rp_or_tree.get_children():
                rp_or_tree.delete(record)
            count=0
            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM orders WHERE order_date BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:
                
                rp_or_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[1], i[2], i[3], i[4], i[26]))
                count += 1
            # total_tri='SELECT SUM(sum_subtotal) from orders'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            
            
            # rp_or_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))
            # rp_or_tree.insert('', 'end',text="1",values=('','','','','',tot_tri))

            window = canvas.create_window(270, 260, anchor="nw", window=rp_or_tree)


        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')


            canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
                
                # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=50)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=300)
            tree.heading("# 4", text="Customer")
            tree.column("# 5", anchor=E, stretch=NO, width=100)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=100)
            tree.heading("# 6", text="Invoice Total")

                # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)
        
        canvas.create_text(900,100,text="Order Report",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+orfrm.get()+"      Date To:"+orto.get()+"\n order Category: All",fill='black',font=("Helvetica", 8), justify='right')

        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
    
    #=====================================================================================================
    elif rth=="Last 60 days":
        date_filter=date.today()
        in_dat=date_filter-timedelta(days=60)
        orfrm1.delete(0,'end')
        orfrm1.insert(0, in_dat)

        cr=date.today()
        orto1.delete(0,'end')
        orto1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_or is not None:
            canvas.create_text(310,100,text=company_or[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_or[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_or[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_or_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_or_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_or_tree.heading("# 1", text="No")
            rp_or_tree.column("# 2", anchor=E, stretch=NO, width=80)
            rp_or_tree.heading("# 2", text="Date")
            rp_or_tree.column("# 3", anchor=E, stretch=NO, width=80)
            rp_or_tree.heading("# 3", text="Due Date")
            rp_or_tree.column("# 4", anchor=E, stretch=NO, width=300)
            rp_or_tree.heading("# 4", text="Customer")
            rp_or_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_or_tree.heading("# 5", text="Status")
            rp_or_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_or_tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            rp_or_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))
            
            for record in rp_or_tree.get_children():
                rp_or_tree.delete(record)
            count=0
            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM orders WHERE order_date BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:
                
                rp_or_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[1], i[2], i[3], i[4], i[26]))
                count += 1
            # total_tri='SELECT SUM(sum_subtotal) from orders'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            
            
            # rp_or_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))
            # rp_or_tree.insert('', 'end',text="1",values=('','','','','',tot_tri))

            window = canvas.create_window(270, 260, anchor="nw", window=rp_or_tree)


        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')


            canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
                
                # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=50)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=300)
            tree.heading("# 4", text="Customer")
            tree.column("# 5", anchor=E, stretch=NO, width=100)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=100)
            tree.heading("# 6", text="Invoice Total")

                # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)
        
        canvas.create_text(900,100,text="Order Report",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+orfrm.get()+"      Date To:"+orto.get()+"\n order Category: All",fill='black',font=("Helvetica", 8), justify='right')
        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)


#================================================================================================================
    elif rth=="Last 90 days":
        date_filter=date.today()
        in_dat=date_filter-timedelta(days=90)
        orfrm1.delete(0,'end')
        orfrm1.insert(0, in_dat)

        cr=date.today()
        orto1.delete(0,'end')
        orto1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_or is not None:
            canvas.create_text(310,100,text=company_or[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_or[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_or[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_or_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_or_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_or_tree.heading("# 1", text="No")
            rp_or_tree.column("# 2", anchor=E, stretch=NO, width=80)
            rp_or_tree.heading("# 2", text="Date")
            rp_or_tree.column("# 3", anchor=E, stretch=NO, width=80)
            rp_or_tree.heading("# 3", text="Due Date")
            rp_or_tree.column("# 4", anchor=E, stretch=NO, width=300)
            rp_or_tree.heading("# 4", text="Customer")
            rp_or_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_or_tree.heading("# 5", text="Status")
            rp_or_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_or_tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            rp_or_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))
            
            for record in rp_or_tree.get_children():
                rp_or_tree.delete(record)
            count=0
            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM orders WHERE order_date BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:
                
                rp_or_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[1], i[2], i[3], i[4], i[26]))
                count += 1
            # total_tri='SELECT SUM(sum_subtotal) from orders'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            
            
            # rp_or_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))
            # rp_or_tree.insert('', 'end',text="1",values=('','','','','',tot_tri))

            window = canvas.create_window(270, 260, anchor="nw", window=rp_or_tree)


        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')


            canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
                
                # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=50)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=300)
            tree.heading("# 4", text="Customer")
            tree.column("# 5", anchor=E, stretch=NO, width=100)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=100)
            tree.heading("# 6", text="Invoice Total")

                # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)
        
        canvas.create_text(900,100,text="Order Report",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+orfrm.get()+"      Date To:"+orto.get()+"\n order Category: All",fill='black',font=("Helvetica", 8), justify='right')
        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
        #====================================================================================================
    elif rth=="Previous month":
        last_day_of_prev_month=date.today().replace(day=1)- timedelta(days=1)
        in_dat=date.today().replace(day=1)-timedelta(last_day_of_prev_month.day)
        orfrm1.delete(0,'end')
        orfrm1.insert(0, in_dat)

        cr=date.today()
        orto1.delete(0,'end')
        orto1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_or is not None:
            canvas.create_text(310,100,text=company_or[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_or[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_or[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_or_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_or_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_or_tree.heading("# 1", text="No")
            rp_or_tree.column("# 2", anchor=E, stretch=NO, width=80)
            rp_or_tree.heading("# 2", text="Date")
            rp_or_tree.column("# 3", anchor=E, stretch=NO, width=80)
            rp_or_tree.heading("# 3", text="Due Date")
            rp_or_tree.column("# 4", anchor=E, stretch=NO, width=300)
            rp_or_tree.heading("# 4", text="Customer")
            rp_or_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_or_tree.heading("# 5", text="Status")
            rp_or_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_or_tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            rp_or_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))
            
            for record in rp_or_tree.get_children():
                rp_or_tree.delete(record)
            count=0
            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM orders WHERE order_date BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:
                
                rp_or_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[1], i[2], i[3], i[4], i[26]))
                count += 1
            # total_tri='SELECT SUM(sum_subtotal) from orders'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            
            
            # rp_or_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))
            # rp_or_tree.insert('', 'end',text="1",values=('','','','','',tot_tri))

            window = canvas.create_window(270, 260, anchor="nw", window=rp_or_tree)


        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')


            canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
                
                # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=50)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=300)
            tree.heading("# 4", text="Customer")
            tree.column("# 5", anchor=E, stretch=NO, width=100)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=100)
            tree.heading("# 6", text="Invoice Total")

                # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)
        
        canvas.create_text(900,100,text="Order Report",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+orfrm.get()+"      Date To:"+orto.get()+"\n order Category: All",fill='black',font=("Helvetica", 8), justify='right')
        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
        #===========================================================================================================
    elif rth=="Previous year":
        last_year = (datetime.now()-relativedelta(years=1)).strftime("%Y-%m-%d")
        orfrm1.delete(0,'end')
        orfrm1.insert(0, last_year)

        cr=date.today()
        orto1.delete(0,'end')
        orto1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_or is not None:
            canvas.create_text(310,100,text=company_or[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_or[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_or[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_or_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_or_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_or_tree.heading("# 1", text="No")
            rp_or_tree.column("# 2", anchor=E, stretch=NO, width=80)
            rp_or_tree.heading("# 2", text="Date")
            rp_or_tree.column("# 3", anchor=E, stretch=NO, width=80)
            rp_or_tree.heading("# 3", text="Due Date")
            rp_or_tree.column("# 4", anchor=E, stretch=NO, width=300)
            rp_or_tree.heading("# 4", text="Customer")
            rp_or_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_or_tree.heading("# 5", text="Status")
            rp_or_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_or_tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            rp_or_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))
            
            for record in rp_or_tree.get_children():
                rp_or_tree.delete(record)
            count=0

            var1=last_year
            var2=cr
            sql_inv_dt='SELECT * FROM orders WHERE order_date BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:
                
                rp_or_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[1], i[2], i[3], i[4], i[26]))
                count += 1
            # total_tri='SELECT SUM(sum_subtotal) from orders'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            
            
            # rp_or_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))
            # rp_or_tree.insert('', 'end',text="1",values=('','','','','',tot_tri))

            window = canvas.create_window(270, 260, anchor="nw", window=rp_or_tree)


        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')


            canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
                
                # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=50)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=300)
            tree.heading("# 4", text="Customer")
            tree.column("# 5", anchor=E, stretch=NO, width=100)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=100)
            tree.heading("# 6", text="Invoice Total")

                # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)
        
        canvas.create_text(900,100,text="Order Report",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+orfrm.get()+"      Date To:"+orto.get()+"\n order Category: All",fill='black',font=("Helvetica", 8), justify='right')
        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
    elif rth=="Custom Range":
        loy=orfrm1.get_date()
        loy1=orto1.get_date()
        cr1=date.today()
        orfrm1.delete(0,'end')
        orfrm1.insert(0, cr1)

        cr=date.today()
        orto1.delete(0,'end')
        orto1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_or is not None:
            canvas.create_text(310,100,text=company_or[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_or[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_or[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_or_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_or_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_or_tree.heading("# 1", text="No")
            rp_or_tree.column("# 2", anchor=E, stretch=NO, width=80)
            rp_or_tree.heading("# 2", text="Date")
            rp_or_tree.column("# 3", anchor=E, stretch=NO, width=80)
            rp_or_tree.heading("# 3", text="Due Date")
            rp_or_tree.column("# 4", anchor=E, stretch=NO, width=300)
            rp_or_tree.heading("# 4", text="Customer")
            rp_or_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_or_tree.heading("# 5", text="Status")
            rp_or_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_or_tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            rp_or_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))
            
            for record in rp_or_tree.get_children():
                rp_or_tree.delete(record)
            count=0
            var1=loy
            var2=loy1
            sql_inv_dt='SELECT * FROM orders WHERE order_date BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:
                
                rp_or_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[1], i[2], i[3], i[4], i[26]))
                count += 1
            # total_tri='SELECT SUM(sum_subtotal) from orders'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            
            
            # rp_or_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))
            # rp_or_tree.insert('', 'end',text="1",values=('','','','','',tot_tri))

            window = canvas.create_window(270, 260, anchor="nw", window=rp_or_tree)


        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')


            canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
                
                # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=50)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=300)
            tree.heading("# 4", text="Customer")
            tree.column("# 5", anchor=E, stretch=NO, width=100)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=100)
            tree.heading("# 6", text="Invoice Total")

                # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)
         
        canvas.create_text(900,100,text="Order Report",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+orfrm.get()+"      Date To:"+orto.get()+"\n order Category: All",fill='black',font=("Helvetica", 8), justify='right')

        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)

        #============================================================================================
    else:
        pass
#-------------------------------------------------Tax Report Invoice-----------------------------------------
def category_tri():
  # firtst filter-----------------------------------Month to date
    rth=trifilter.get()
    tri_company = "SELECT * from company"
    fbcursor.execute(tri_company)
    company_tri= fbcursor.fetchone()
    global canvas

    if rth=="Month to date":
        given_date = datetime.today().date()
        in_dat = given_date.replace(day=1)
        trifrm1.delete(0,'end')
        trifrm1.insert(0, in_dat)

        cr=date.today()
        trito1.delete(0,'end')
        trito1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500, 
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tri is not None:
            canvas.create_text(310,100,text=company_tri[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_tri[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_tri[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rep_tro_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rep_tro_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 1", text="Invoice No")
            rep_tro_tree.column("# 2", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 2", text="Issue Date")
            rep_tro_tree.column("# 3", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 3", text="Due Date")
            rep_tro_tree.column("# 4", anchor=E, stretch=NO, width=130)
            rep_tro_tree.heading("# 4", text="Total Before TAX")
            rep_tro_tree.column("# 5", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 5", text="TAX1")
            rep_tro_tree.column("# 6", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 6", text="TAX2")
            rep_tro_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 7", text="Invoice Total")

            # Insert the data in Treeview widget
            rep_tro_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            
            for record in rep_tro_tree.get_children():
                rep_tro_tree.delete(record)
            count=0

            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE invodate BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:
                rep_tro_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[37], i[16], i[36],i[8]))
                count += 1

            # total_tri='SELECT SUM(invoicetot) from invoice'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            

            # total_tax1_tri='SELECT SUM(tax1) from invoice'
            # fbcursor.execute(total_tax1_tri)
            # tot_tax1_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(tax2) from invoice'
            # fbcursor.execute(total_tax2_tri)
            # tot_tax2_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(totalbeforetax) from invoice'
            # fbcursor.execute(total_tax2_tri)
            # tot_bfr= fbcursor.fetchone()

            
            
            # rep_tro_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            # rep_tro_tree.insert('', 'end',text="1",values=('','','',tot_bfr,tot_tax1_tri,tot_tax2_tri,tot_tri))

            window = canvas.create_window(270, 260, anchor="nw", window=rep_tro_tree)
        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')


            canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rep_tri_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rep_tri_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rep_tri_tree.heading("# 1", text="Invoice No")
            rep_tri_tree.column("# 2", anchor=E, stretch=NO, width=100)
            rep_tri_tree.heading("# 2", text="Issue Date")
            rep_tri_tree.column("# 3", anchor=E, stretch=NO, width=70)
            rep_tri_tree.heading("# 3", text="Due Date")
            rep_tri_tree.column("# 4", anchor=E, stretch=NO, width=130)
            rep_tri_tree.heading("# 4", text="Total Before TAX")
            rep_tri_tree.column("# 5", anchor=E, stretch=NO, width=90)
            rep_tri_tree.heading("# 5", text="TAX1")
            rep_tri_tree.column("# 6", anchor=E, stretch=NO, width=90)
            rep_tri_tree.heading("# 6", text="TAX2")
            rep_tri_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rep_tri_tree.heading("# 7", text="Invoice Total")

            # Insert the data in Treeview widget
            rep_tri_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=rep_tri_tree)

        canvas.create_text(875,100,text="Tax Report(Invoice)",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+trifrm.get()+"      Date To:"+trito.get()+"\n Invoice Category: All",fill='black',font=("Helvetica", 8), justify='right')

        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
        

    #--------------------------------------------------------------------------------------------------------------
    elif rth=="Year To Date":
        test_date=pendulum.today().date()
        start = test_date.start_of('year')
        trifrm1.delete(0,'end')
        trifrm1.insert(0, start)

        cr=date.today()
        trito1.delete(0,'end')
        trito1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tri is not None:
            canvas.create_text(310,100,text=company_tri[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_tri[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_tri[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rep_tro_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rep_tro_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 1", text="Invoice No")
            rep_tro_tree.column("# 2", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 2", text="Issue Date")
            rep_tro_tree.column("# 3", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 3", text="Due Date")
            rep_tro_tree.column("# 4", anchor=E, stretch=NO, width=130)
            rep_tro_tree.heading("# 4", text="Total Before TAX")
            rep_tro_tree.column("# 5", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 5", text="TAX1")
            rep_tro_tree.column("# 6", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 6", text="TAX2")
            rep_tro_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 7", text="Invoice Total")

            # Insert the data in Treeview widget
            rep_tro_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            
            for record in rep_tro_tree.get_children():
                rep_tro_tree.delete(record)
            count=0

            var1=start
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE invodate BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:
                rep_tro_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[37], i[16], i[36],i[8]))
                count += 1

            # total_tri='SELECT SUM(invoicetot) from invoice'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            

            # total_tax1_tri='SELECT SUM(tax1) from invoice'
            # fbcursor.execute(total_tax1_tri)
            # tot_tax1_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(tax2) from invoice'
            # fbcursor.execute(total_tax2_tri)
            # tot_tax2_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(totalbeforetax) from invoice'
            # fbcursor.execute(total_tax2_tri)
            # tot_bfr= fbcursor.fetchone()

            
            
            # rep_tro_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            # rep_tro_tree.insert('', 'end',text="1",values=('','','',tot_bfr,tot_tax1_tri,tot_tax2_tri,tot_tri))

            window = canvas.create_window(270, 260, anchor="nw", window=rep_tro_tree)
        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')


            canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rep_tri_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rep_tri_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rep_tri_tree.heading("# 1", text="Invoice No")
            rep_tri_tree.column("# 2", anchor=E, stretch=NO, width=100)
            rep_tri_tree.heading("# 2", text="Issue Date")
            rep_tri_tree.column("# 3", anchor=E, stretch=NO, width=70)
            rep_tri_tree.heading("# 3", text="Due Date")
            rep_tri_tree.column("# 4", anchor=E, stretch=NO, width=130)
            rep_tri_tree.heading("# 4", text="Total Before TAX")
            rep_tri_tree.column("# 5", anchor=E, stretch=NO, width=90)
            rep_tri_tree.heading("# 5", text="TAX1")
            rep_tri_tree.column("# 6", anchor=E, stretch=NO, width=90)
            rep_tri_tree.heading("# 6", text="TAX2")
            rep_tri_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rep_tri_tree.heading("# 7", text="Invoice Total")

            # Insert the data in Treeview widget
            rep_tri_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=rep_tri_tree)

        canvas.create_text(875,100,text="Tax Report(Invoice)",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+trifrm.get()+"      Date To:"+trito.get()+"\n Invoice Category: All",fill='black',font=("Helvetica", 8), justify='right')


        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
        #===============================================================================================
    elif rth=="Current year":
        test_date=pendulum.today().date()
        start = test_date.start_of('year')
        trifrm1.delete(0,'end')
        trifrm1.insert(0, start)

        test_date_end=pendulum.today().date()
        end = test_date_end.end_of('year')
        trito1.delete(0,'end')
        trito1.insert(0, end)
        
        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tri is not None:
            canvas.create_text(310,100,text=company_tri[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_tri[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_tri[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rep_tro_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rep_tro_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 1", text="Invoice No")
            rep_tro_tree.column("# 2", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 2", text="Issue Date")
            rep_tro_tree.column("# 3", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 3", text="Due Date")
            rep_tro_tree.column("# 4", anchor=E, stretch=NO, width=130)
            rep_tro_tree.heading("# 4", text="Total Before TAX")
            rep_tro_tree.column("# 5", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 5", text="TAX1")
            rep_tro_tree.column("# 6", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 6", text="TAX2")
            rep_tro_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 7", text="Invoice Total")

            # Insert the data in Treeview widget
            rep_tro_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            
            for record in rep_tro_tree.get_children():
                rep_tro_tree.delete(record)
            count=0

            var1=start
            var2=end
            sql_inv_dt='SELECT * FROM invoice WHERE invodate BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:
                rep_tro_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[37], i[16], i[36],i[8]))
                count += 1

            # total_tri='SELECT SUM(invoicetot) from invoice'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            

            # total_tax1_tri='SELECT SUM(tax1) from invoice'
            # fbcursor.execute(total_tax1_tri)
            # tot_tax1_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(tax2) from invoice'
            # fbcursor.execute(total_tax2_tri)
            # tot_tax2_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(totalbeforetax) from invoice'
            # fbcursor.execute(total_tax2_tri)
            # tot_bfr= fbcursor.fetchone()

            
            
            # rep_tro_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            # rep_tro_tree.insert('', 'end',text="1",values=('','','',tot_bfr,tot_tax1_tri,tot_tax2_tri,tot_tri))

            window = canvas.create_window(270, 260, anchor="nw", window=rep_tro_tree)
        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')


            canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rep_tri_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rep_tri_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rep_tri_tree.heading("# 1", text="Invoice No")
            rep_tri_tree.column("# 2", anchor=E, stretch=NO, width=100)
            rep_tri_tree.heading("# 2", text="Issue Date")
            rep_tri_tree.column("# 3", anchor=E, stretch=NO, width=70)
            rep_tri_tree.heading("# 3", text="Due Date")
            rep_tri_tree.column("# 4", anchor=E, stretch=NO, width=130)
            rep_tri_tree.heading("# 4", text="Total Before TAX")
            rep_tri_tree.column("# 5", anchor=E, stretch=NO, width=90)
            rep_tri_tree.heading("# 5", text="TAX1")
            rep_tri_tree.column("# 6", anchor=E, stretch=NO, width=90)
            rep_tri_tree.heading("# 6", text="TAX2")
            rep_tri_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rep_tri_tree.heading("# 7", text="Invoice Total")

            # Insert the data in Treeview widget
            rep_tri_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=rep_tri_tree)

        canvas.create_text(875,100,text="Tax Report(Invoice)",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+trifrm.get()+"      Date To:"+trito.get()+"\n Invoice Category: All",fill='black',font=("Helvetica", 8), justify='right')


        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
    #==============================================================================================================
    elif rth=="Current month":
        given_date = datetime.today().date()
        in_dat = given_date.replace(day=1)
        trifrm1.delete(0,'end')
        trifrm1.insert(0, in_dat)

        test_date=date.today()
        nxt_mnth=(test_date+relativedelta(day=31))
        trito1.delete(0,'end')
        trito1.insert(0, nxt_mnth)
        
        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tri is not None:
            canvas.create_text(310,100,text=company_tri[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_tri[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_tri[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rep_tro_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rep_tro_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 1", text="Invoice No")
            rep_tro_tree.column("# 2", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 2", text="Issue Date")
            rep_tro_tree.column("# 3", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 3", text="Due Date")
            rep_tro_tree.column("# 4", anchor=E, stretch=NO, width=130)
            rep_tro_tree.heading("# 4", text="Total Before TAX")
            rep_tro_tree.column("# 5", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 5", text="TAX1")
            rep_tro_tree.column("# 6", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 6", text="TAX2")
            rep_tro_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 7", text="Invoice Total")

            # Insert the data in Treeview widget
            rep_tro_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            
            for record in rep_tro_tree.get_children():
                rep_tro_tree.delete(record)
            count=0

            var1=in_dat
            var2=nxt_mnth
            sql_inv_dt='SELECT * FROM invoice WHERE invodate BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:
                rep_tro_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[37], i[16], i[36],i[8]))
                count += 1

            # total_tri='SELECT SUM(invoicetot) from invoice'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            

            # total_tax1_tri='SELECT SUM(tax1) from invoice'
            # fbcursor.execute(total_tax1_tri)
            # tot_tax1_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(tax2) from invoice'
            # fbcursor.execute(total_tax2_tri)
            # tot_tax2_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(totalbeforetax) from invoice'
            # fbcursor.execute(total_tax2_tri)
            # tot_bfr= fbcursor.fetchone()

            
            
            # rep_tro_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            # rep_tro_tree.insert('', 'end',text="1",values=('','','',tot_bfr,tot_tax1_tri,tot_tax2_tri,tot_tri))
            window = canvas.create_window(270, 260, anchor="nw", window=rep_tro_tree)
        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')


            canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rep_tri_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rep_tri_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rep_tri_tree.heading("# 1", text="Invoice No")
            rep_tri_tree.column("# 2", anchor=E, stretch=NO, width=100)
            rep_tri_tree.heading("# 2", text="Issue Date")
            rep_tri_tree.column("# 3", anchor=E, stretch=NO, width=70)
            rep_tri_tree.heading("# 3", text="Due Date")
            rep_tri_tree.column("# 4", anchor=E, stretch=NO, width=130)
            rep_tri_tree.heading("# 4", text="Total Before TAX")
            rep_tri_tree.column("# 5", anchor=E, stretch=NO, width=90)
            rep_tri_tree.heading("# 5", text="TAX1")
            rep_tri_tree.column("# 6", anchor=E, stretch=NO, width=90)
            rep_tri_tree.heading("# 6", text="TAX2")
            rep_tri_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rep_tri_tree.heading("# 7", text="Invoice Total")

            # Insert the data in Treeview widget
            rep_tri_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=rep_tri_tree)

        canvas.create_text(875,100,text="Tax Report(Invoice)",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+trifrm.get()+"      Date To:"+trito.get()+"\n Invoice Category: All",fill='black',font=("Helvetica", 8), justify='right')



        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
        #=====================================================================================================
    elif rth=="Current days":
        given_date = date.today()
        trifrm   .delete(0,'end')
        trifrm1.insert(0,given_date)

        cr=date.today()
        trito1.delete(0,'end')
        trito1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tri is not None:
            canvas.create_text(310,100,text=company_tri[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_tri[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_tri[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rep_tro_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rep_tro_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 1", text="Invoice No")
            rep_tro_tree.column("# 2", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 2", text="Issue Date")
            rep_tro_tree.column("# 3", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 3", text="Due Date")
            rep_tro_tree.column("# 4", anchor=E, stretch=NO, width=130)
            rep_tro_tree.heading("# 4", text="Total Before TAX")
            rep_tro_tree.column("# 5", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 5", text="TAX1")
            rep_tro_tree.column("# 6", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 6", text="TAX2")
            rep_tro_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 7", text="Invoice Total")

            # Insert the data in Treeview widget
            rep_tro_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            
            for record in rep_tro_tree.get_children():
                rep_tro_tree.delete(record)
            count=0

            var1=given_date
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE invodate BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:
                rep_tro_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[37], i[16], i[36],i[8]))
                count += 1

            # total_tri='SELECT SUM(invoicetot) from invoice'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            

            # total_tax1_tri='SELECT SUM(tax1) from invoice'
            # fbcursor.execute(total_tax1_tri)
            # tot_tax1_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(tax2) from invoice'
            # fbcursor.execute(total_tax2_tri)
            # tot_tax2_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(totalbeforetax) from invoice'
            # fbcursor.execute(total_tax2_tri)
            # tot_bfr= fbcursor.fetchone()

            
            
            # rep_tro_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            # rep_tro_tree.insert('', 'end',text="1",values=('','','',tot_bfr,tot_tax1_tri,tot_tax2_tri,tot_tri))

            window = canvas.create_window(270, 260, anchor="nw", window=rep_tro_tree)
        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')


            canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rep_tri_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rep_tri_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rep_tri_tree.heading("# 1", text="Invoice No")
            rep_tri_tree.column("# 2", anchor=E, stretch=NO, width=100)
            rep_tri_tree.heading("# 2", text="Issue Date")
            rep_tri_tree.column("# 3", anchor=E, stretch=NO, width=70)
            rep_tri_tree.heading("# 3", text="Due Date")
            rep_tri_tree.column("# 4", anchor=E, stretch=NO, width=130)
            rep_tri_tree.heading("# 4", text="Total Before TAX")
            rep_tri_tree.column("# 5", anchor=E, stretch=NO, width=90)
            rep_tri_tree.heading("# 5", text="TAX1")
            rep_tri_tree.column("# 6", anchor=E, stretch=NO, width=90)
            rep_tri_tree.heading("# 6", text="TAX2")
            rep_tri_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rep_tri_tree.heading("# 7", text="Invoice Total")

            # Insert the data in Treeview widget
            rep_tri_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=rep_tri_tree)

        canvas.create_text(875,100,text="Tax Report(Invoice)",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+trifrm.get()+"      Date To:"+trito.get()+"\n Invoice Category: All",fill='black',font=("Helvetica", 8), justify='right')


        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
        #=================================================================================================
    elif rth=="Last 30 days":
        date_filter=date.today()
        in_dat=date_filter-timedelta(days=30)
        trifrm1.delete(0,'end')
        trifrm1.insert(0, in_dat)

        cr=date.today()
        trito1.delete(0,'end')
        trito1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tri is not None:
            canvas.create_text(310,100,text=company_tri[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_tri[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_tri[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rep_tro_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rep_tro_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 1", text="Invoice No")
            rep_tro_tree.column("# 2", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 2", text="Issue Date")
            rep_tro_tree.column("# 3", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 3", text="Due Date")
            rep_tro_tree.column("# 4", anchor=E, stretch=NO, width=130)
            rep_tro_tree.heading("# 4", text="Total Before TAX")
            rep_tro_tree.column("# 5", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 5", text="TAX1")
            rep_tro_tree.column("# 6", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 6", text="TAX2")
            rep_tro_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 7", text="Invoice Total")

            # Insert the data in Treeview widget
            rep_tro_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            
            for record in rep_tro_tree.get_children():
                rep_tro_tree.delete(record)
            count=0
           
            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE invodate BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:
                rep_tro_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[37], i[16], i[36],i[8]))
                count += 1

            # total_tri='SELECT SUM(invoicetot) from invoice'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            

            # total_tax1_tri='SELECT SUM(tax1) from invoice'
            # fbcursor.execute(total_tax1_tri)
            # tot_tax1_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(tax2) from invoice'
            # fbcursor.execute(total_tax2_tri)
            # tot_tax2_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(totalbeforetax) from invoice'
            # fbcursor.execute(total_tax2_tri)
            # tot_bfr= fbcursor.fetchone()

            
            
            # rep_tro_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            # rep_tro_tree.insert('', 'end',text="1",values=('','','',tot_bfr,tot_tax1_tri,tot_tax2_tri,tot_tri))


            window = canvas.create_window(270, 260, anchor="nw", window=rep_tro_tree)
        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')


            canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rep_tri_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rep_tri_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rep_tri_tree.heading("# 1", text="Invoice No")
            rep_tri_tree.column("# 2", anchor=E, stretch=NO, width=100)
            rep_tri_tree.heading("# 2", text="Issue Date")
            rep_tri_tree.column("# 3", anchor=E, stretch=NO, width=70)
            rep_tri_tree.heading("# 3", text="Due Date")
            rep_tri_tree.column("# 4", anchor=E, stretch=NO, width=130)
            rep_tri_tree.heading("# 4", text="Total Before TAX")
            rep_tri_tree.column("# 5", anchor=E, stretch=NO, width=90)
            rep_tri_tree.heading("# 5", text="TAX1")
            rep_tri_tree.column("# 6", anchor=E, stretch=NO, width=90)
            rep_tri_tree.heading("# 6", text="TAX2")
            rep_tri_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rep_tri_tree.heading("# 7", text="Invoice Total")

            # Insert the data in Treeview widget
            rep_tri_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=rep_tri_tree)

        canvas.create_text(875,100,text="Tax Report(Invoice)",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+trifrm.get()+"      Date To:"+trito.get()+"\n Invoice Category: All",fill='black',font=("Helvetica", 8), justify='right')



        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
    
    #=====================================================================================================
    elif rth=="Last 60 days":
        date_filter=date.today()
        in_dat=date_filter-timedelta(days=60)
        trifrm1.delete(0,'end')
        trifrm1.insert(0, in_dat)

        cr=date.today()
        trito1.delete(0,'end')
        trito1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tri is not None:
            canvas.create_text(310,100,text=company_tri[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_tri[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_tri[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rep_tro_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rep_tro_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 1", text="Invoice No")
            rep_tro_tree.column("# 2", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 2", text="Issue Date")
            rep_tro_tree.column("# 3", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 3", text="Due Date")
            rep_tro_tree.column("# 4", anchor=E, stretch=NO, width=130)
            rep_tro_tree.heading("# 4", text="Total Before TAX")
            rep_tro_tree.column("# 5", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 5", text="TAX1")
            rep_tro_tree.column("# 6", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 6", text="TAX2")
            rep_tro_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 7", text="Invoice Total")

            # Insert the data in Treeview widget
            rep_tro_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            
            for record in rep_tro_tree.get_children():
                rep_tro_tree.delete(record)
            count=0
            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE invodate BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:
                rep_tro_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[37], i[16], i[36],i[8]))
                count += 1

            # total_tri='SELECT SUM(invoicetot) from invoice'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            

            # total_tax1_tri='SELECT SUM(tax1) from invoice'
            # fbcursor.execute(total_tax1_tri)
            # tot_tax1_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(tax2) from invoice'
            # fbcursor.execute(total_tax2_tri)
            # tot_tax2_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(totalbeforetax) from invoice'
            # fbcursor.execute(total_tax2_tri)
            # tot_bfr= fbcursor.fetchone()

            
            
            # rep_tro_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            # rep_tro_tree.insert('', 'end',text="1",values=('','','',tot_bfr,tot_tax1_tri,tot_tax2_tri,tot_tri))

            window = canvas.create_window(270, 260, anchor="nw", window=rep_tro_tree)
        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')


            canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rep_tri_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rep_tri_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rep_tri_tree.heading("# 1", text="Invoice No")
            rep_tri_tree.column("# 2", anchor=E, stretch=NO, width=100)
            rep_tri_tree.heading("# 2", text="Issue Date")
            rep_tri_tree.column("# 3", anchor=E, stretch=NO, width=70)
            rep_tri_tree.heading("# 3", text="Due Date")
            rep_tri_tree.column("# 4", anchor=E, stretch=NO, width=130)
            rep_tri_tree.heading("# 4", text="Total Before TAX")
            rep_tri_tree.column("# 5", anchor=E, stretch=NO, width=90)
            rep_tri_tree.heading("# 5", text="TAX1")
            rep_tri_tree.column("# 6", anchor=E, stretch=NO, width=90)
            rep_tri_tree.heading("# 6", text="TAX2")
            rep_tri_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rep_tri_tree.heading("# 7", text="Invoice Total")

            # Insert the data in Treeview widget
            rep_tri_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=rep_tri_tree)

        canvas.create_text(875,100,text="Tax Report(Invoice)",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+trifrm.get()+"      Date To:"+trito.get()+"\n Invoice Category: All",fill='black',font=("Helvetica", 8), justify='right')

        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)


#================================================================================================================
    elif rth=="Last 90 days":
        date_filter=date.today()
        in_dat=date_filter-timedelta(days=90)
        trifrm1.delete(0,'end')
        trifrm1.insert(0, in_dat)

        cr=date.today()
        trito1.delete(0,'end')
        trito1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tri is not None:
            canvas.create_text(310,100,text=company_tri[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_tri[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_tri[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rep_tro_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rep_tro_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 1", text="Invoice No")
            rep_tro_tree.column("# 2", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 2", text="Issue Date")
            rep_tro_tree.column("# 3", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 3", text="Due Date")
            rep_tro_tree.column("# 4", anchor=E, stretch=NO, width=130)
            rep_tro_tree.heading("# 4", text="Total Before TAX")
            rep_tro_tree.column("# 5", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 5", text="TAX1")
            rep_tro_tree.column("# 6", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 6", text="TAX2")
            rep_tro_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 7", text="Invoice Total")

            # Insert the data in Treeview widget
            rep_tro_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            
            for record in rep_tro_tree.get_children():
                rep_tro_tree.delete(record)
            count=0
            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE invodate BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:
                rep_tro_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[37], i[16], i[36],i[8]))
                count += 1

            # total_tri='SELECT SUM(invoicetot) from invoice'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            

            # total_tax1_tri='SELECT SUM(tax1) from invoice'
            # fbcursor.execute(total_tax1_tri)
            # tot_tax1_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(tax2) from invoice'
            # fbcursor.execute(total_tax2_tri)
            # tot_tax2_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(totalbeforetax) from invoice'
            # fbcursor.execute(total_tax2_tri)
            # tot_bfr= fbcursor.fetchone()

            
            
            # rep_tro_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            # rep_tro_tree.insert('', 'end',text="1",values=('','','',tot_bfr,tot_tax1_tri,tot_tax2_tri,tot_tri))
            window = canvas.create_window(270, 260, anchor="nw", window=rep_tro_tree)
        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')


            canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rep_tri_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rep_tri_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rep_tri_tree.heading("# 1", text="Invoice No")
            rep_tri_tree.column("# 2", anchor=E, stretch=NO, width=100)
            rep_tri_tree.heading("# 2", text="Issue Date")
            rep_tri_tree.column("# 3", anchor=E, stretch=NO, width=70)
            rep_tri_tree.heading("# 3", text="Due Date")
            rep_tri_tree.column("# 4", anchor=E, stretch=NO, width=130)
            rep_tri_tree.heading("# 4", text="Total Before TAX")
            rep_tri_tree.column("# 5", anchor=E, stretch=NO, width=90)
            rep_tri_tree.heading("# 5", text="TAX1")
            rep_tri_tree.column("# 6", anchor=E, stretch=NO, width=90)
            rep_tri_tree.heading("# 6", text="TAX2")
            rep_tri_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rep_tri_tree.heading("# 7", text="Invoice Total")

            # Insert the data in Treeview widget
            rep_tri_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=rep_tri_tree)

        canvas.create_text(875,100,text="Tax Report(Invoice)",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+trifrm.get()+"      Date To:"+trito.get()+"\n Invoice Category: All",fill='black',font=("Helvetica", 8), justify='right')


        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
        #====================================================================================================
    elif rth=="Previous month":
        last_day_of_prev_month=date.today().replace(day=1)- timedelta(days=1)
        in_dat=date.today().replace(day=1)-timedelta(last_day_of_prev_month.day)
        trifrm1.delete(0,'end')
        trifrm1.insert(0, in_dat)

        cr=date.today()
        trito1.delete(0,'end')
        trito1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tri is not None:
            canvas.create_text(310,100,text=company_tri[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_tri[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_tri[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rep_tro_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rep_tro_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 1", text="Invoice No")
            rep_tro_tree.column("# 2", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 2", text="Issue Date")
            rep_tro_tree.column("# 3", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 3", text="Due Date")
            rep_tro_tree.column("# 4", anchor=E, stretch=NO, width=130)
            rep_tro_tree.heading("# 4", text="Total Before TAX")
            rep_tro_tree.column("# 5", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 5", text="TAX1")
            rep_tro_tree.column("# 6", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 6", text="TAX2")
            rep_tro_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 7", text="Invoice Total")

            # Insert the data in Treeview widget
            rep_tro_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            
            for record in rep_tro_tree.get_children():
                rep_tro_tree.delete(record)
            count=0
            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE invodate BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:
                rep_tro_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[37], i[16], i[36],i[8]))
                count += 1

            # total_tri='SELECT SUM(invoicetot) from invoice'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            

            # total_tax1_tri='SELECT SUM(tax1) from invoice'
            # fbcursor.execute(total_tax1_tri)
            # tot_tax1_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(tax2) from invoice'
            # fbcursor.execute(total_tax2_tri)
            # tot_tax2_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(totalbeforetax) from invoice'
            # fbcursor.execute(total_tax2_tri)
            # tot_bfr= fbcursor.fetchone()

            
            
            # rep_tro_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            # rep_tro_tree.insert('', 'end',text="1",values=('','','',tot_bfr,tot_tax1_tri,tot_tax2_tri,tot_tri))

            window = canvas.create_window(270, 260, anchor="nw", window=rep_tro_tree)
        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')


            canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rep_tri_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rep_tri_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rep_tri_tree.heading("# 1", text="Invoice No")
            rep_tri_tree.column("# 2", anchor=E, stretch=NO, width=100)
            rep_tri_tree.heading("# 2", text="Issue Date")
            rep_tri_tree.column("# 3", anchor=E, stretch=NO, width=70)
            rep_tri_tree.heading("# 3", text="Due Date")
            rep_tri_tree.column("# 4", anchor=E, stretch=NO, width=130)
            rep_tri_tree.heading("# 4", text="Total Before TAX")
            rep_tri_tree.column("# 5", anchor=E, stretch=NO, width=90)
            rep_tri_tree.heading("# 5", text="TAX1")
            rep_tri_tree.column("# 6", anchor=E, stretch=NO, width=90)
            rep_tri_tree.heading("# 6", text="TAX2")
            rep_tri_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rep_tri_tree.heading("# 7", text="Invoice Total")

            # Insert the data in Treeview widget
            rep_tri_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=rep_tri_tree)

        canvas.create_text(875,100,text="Tax Report(Invoice)",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+trifrm.get()+"      Date To:"+trito.get()+"\n Invoice Category: All",fill='black',font=("Helvetica", 8), justify='right')

        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
        #===========================================================================================================
    elif rth=="Previous year":
        last_year = (datetime.now()-relativedelta(years=1)).strftime("%Y-%m-%d")
        trifrm1.delete(0,'end')
        trifrm1.insert(0, last_year)

        cr=date.today()
        trito1.delete(0,'end')
        trito1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tri is not None:
            canvas.create_text(310,100,text=company_tri[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_tri[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_tri[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rep_tro_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rep_tro_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 1", text="Invoice No")
            rep_tro_tree.column("# 2", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 2", text="Issue Date")
            rep_tro_tree.column("# 3", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 3", text="Due Date")
            rep_tro_tree.column("# 4", anchor=E, stretch=NO, width=130)
            rep_tro_tree.heading("# 4", text="Total Before TAX")
            rep_tro_tree.column("# 5", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 5", text="TAX1")
            rep_tro_tree.column("# 6", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 6", text="TAX2")
            rep_tro_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 7", text="Invoice Total")

            # Insert the data in Treeview widget
            rep_tro_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            
            for record in rep_tro_tree.get_children():
                rep_tro_tree.delete(record)
            count=0
            var1=last_year
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE invodate BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:
                rep_tro_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[37], i[16], i[36],i[8]))
                count += 1

            # total_tri='SELECT SUM(invoicetot) from invoice'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            

            # total_tax1_tri='SELECT SUM(tax1) from invoice'
            # fbcursor.execute(total_tax1_tri)
            # tot_tax1_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(tax2) from invoice'
            # fbcursor.execute(total_tax2_tri)
            # tot_tax2_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(totalbeforetax) from invoice'
            # fbcursor.execute(total_tax2_tri)
            # tot_bfr= fbcursor.fetchone()

            
            
            # rep_tro_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            # rep_tro_tree.insert('', 'end',text="1",values=('','','',tot_bfr,tot_tax1_tri,tot_tax2_tri,tot_tri))

            window = canvas.create_window(270, 260, anchor="nw", window=rep_tro_tree)
        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')


            canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rep_tri_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rep_tri_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rep_tri_tree.heading("# 1", text="Invoice No")
            rep_tri_tree.column("# 2", anchor=E, stretch=NO, width=100)
            rep_tri_tree.heading("# 2", text="Issue Date")
            rep_tri_tree.column("# 3", anchor=E, stretch=NO, width=70)
            rep_tri_tree.heading("# 3", text="Due Date")
            rep_tri_tree.column("# 4", anchor=E, stretch=NO, width=130)
            rep_tri_tree.heading("# 4", text="Total Before TAX")
            rep_tri_tree.column("# 5", anchor=E, stretch=NO, width=90)
            rep_tri_tree.heading("# 5", text="TAX1")
            rep_tri_tree.column("# 6", anchor=E, stretch=NO, width=90)
            rep_tri_tree.heading("# 6", text="TAX2")
            rep_tri_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rep_tri_tree.heading("# 7", text="Invoice Total")

            # Insert the data in Treeview widget
            rep_tri_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=rep_tri_tree)

        canvas.create_text(875,100,text="Tax Report(Invoice)",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+trifrm.get()+"      Date To:"+trito.get()+"\n Invoice Category: All",fill='black',font=("Helvetica", 8), justify='right')


        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
    elif rth=="Custom Range":
        mlk=trifrm1.get_date()
        mlk1=trito1.get_date()
        cr1=date.today()
        trifrm1.delete(0,'end')
        trifrm1.insert(0, cr1)

        cr=date.today()
        trito1.delete(0,'end')
        trito1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tri is not None:
            canvas.create_text(310,100,text=company_tri[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_tri[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_tri[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rep_tro_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rep_tro_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 1", text="Invoice No")
            rep_tro_tree.column("# 2", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 2", text="Issue Date")
            rep_tro_tree.column("# 3", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 3", text="Due Date")
            rep_tro_tree.column("# 4", anchor=E, stretch=NO, width=130)
            rep_tro_tree.heading("# 4", text="Total Before TAX")
            rep_tro_tree.column("# 5", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 5", text="TAX1")
            rep_tro_tree.column("# 6", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 6", text="TAX2")
            rep_tro_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 7", text="Invoice Total")

            # Insert the data in Treeview widget
            rep_tro_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            
            for record in rep_tro_tree.get_children():
                rep_tro_tree.delete(record)
            count=0
            var1=mlk
            var2=mlk1
            sql_inv_dt='SELECT * FROM invoice WHERE invodate BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:
                rep_tro_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[37], i[16], i[36],i[8]))
                count += 1

            # total_tri='SELECT SUM(invoicetot) from invoice'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            

            # total_tax1_tri='SELECT SUM(tax1) from invoice'
            # fbcursor.execute(total_tax1_tri)
            # tot_tax1_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(tax2) from invoice'
            # fbcursor.execute(total_tax2_tri)
            # tot_tax2_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(totalbeforetax) from invoice'
            # fbcursor.execute(total_tax2_tri)
            # tot_bfr= fbcursor.fetchone()

            
            
            # rep_tro_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            # rep_tro_tree.insert('', 'end',text="1",values=('','','',tot_bfr,tot_tax1_tri,tot_tax2_tri,tot_tri))

            window = canvas.create_window(270, 260, anchor="nw", window=rep_tro_tree)
        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')


            canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rep_tri_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rep_tri_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rep_tri_tree.heading("# 1", text="Invoice No")
            rep_tri_tree.column("# 2", anchor=E, stretch=NO, width=100)
            rep_tri_tree.heading("# 2", text="Issue Date")
            rep_tri_tree.column("# 3", anchor=E, stretch=NO, width=70)
            rep_tri_tree.heading("# 3", text="Due Date")
            rep_tri_tree.column("# 4", anchor=E, stretch=NO, width=130)
            rep_tri_tree.heading("# 4", text="Total Before TAX")
            rep_tri_tree.column("# 5", anchor=E, stretch=NO, width=90)
            rep_tri_tree.heading("# 5", text="TAX1")
            rep_tri_tree.column("# 6", anchor=E, stretch=NO, width=90)
            rep_tri_tree.heading("# 6", text="TAX2")
            rep_tri_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rep_tri_tree.heading("# 7", text="Invoice Total")

            # Insert the data in Treeview widget
            rep_tri_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=rep_tri_tree)

        canvas.create_text(875,100,text="Tax Report(Invoice)",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+trifrm.get()+"      Date To:"+trito.get()+"\n Invoice Category: All",fill='black',font=("Helvetica", 8), justify='right')


        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)

        #============================================================================================
    else:
        pass

#-------------------------------------------------tax report order-----------------------------------------
def category_tro():
  # firtst filter-----------------------------------Month to date
    rth=trofilter.get()

    # #for company details
    tro_company = "SELECT * from company"
    fbcursor.execute(tro_company)
    company_tro= fbcursor.fetchone()
    
    if rth=="Month to date":

        given_date = datetime.today().date()
        in_dat = given_date.replace(day=1)
        trofrm1.delete(0,'end')
        trofrm1.insert(0, in_dat)

        cr=date.today()
        troto1.delete(0,'end')
        troto1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tro is not None:
            canvas.create_text(310,100,text=company_tro[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_tro[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_tro[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rep_tro_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rep_tro_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 1", text="Order No")
            rep_tro_tree.column("# 2", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 2", text="Issue Date")
            rep_tro_tree.column("# 3", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 3", text="Due Date")
            rep_tro_tree.column("# 4", anchor=E, stretch=NO, width=130)
            rep_tro_tree.heading("# 4", text="Total Before TAX")
            rep_tro_tree.column("# 5", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 5", text="TAX1")
            rep_tro_tree.column("# 6", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 6", text="TAX2")
            rep_tro_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 7", text="Order Total")

            # Insert the data in Treeview widget
            rep_tro_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            
            for record in rep_tro_tree.get_children():
                rep_tro_tree.delete(record)
            count=0
            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM orders WHERE order_date BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:

                rep_tro_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[1], i[2], i[28], i[14], i[29],i[8]))
                count += 1

            # total_tri='SELECT SUM(Order_total) from orders'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            

            # total_tax1_tri='SELECT SUM(tax1) from orders'
            # fbcursor.execute(total_tax1_tri)
            # tot_tax1_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(tax2) from orders'
            # fbcursor.execute(total_tax2_tri)
            # tot_tax2_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(totalbeforetax) from orders'
            # fbcursor.execute(total_tax2_tri)
            # tot_bfr_tri= fbcursor.fetchone()
            
            # rep_tro_tree.insert('', 'end',text="1",values=('','-End of list-','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            # rep_tro_tree.insert('', 'end',text="1",values=('','','Summary:',tot_bfr_tri,tot_tax1_tri,tot_tax2_tri,tot_tri))

            window = canvas.create_window(270, 260, anchor="nw", window=rep_tro_tree)

            
            
        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')

        

            
            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=100)
            tree.heading("# 1", text="Order No")
            tree.column("# 2", anchor=E, stretch=NO, width=100)
            tree.heading("# 2", text="Issue Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=130)
            tree.heading("# 4", text="Total Before TAX")
            tree.column("# 5", anchor=E, stretch=NO, width=90)
            tree.heading("# 5", text="TAX1")
            tree.column("# 6", anchor=E, stretch=NO, width=90)
            tree.heading("# 6", text="TAX2")
            tree.column("# 7", anchor=E, stretch=NO, width=100)
            tree.heading("# 7", text="Order Total")

            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Order Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)
        canvas.create_text(880,100,text="Tax Report(Orders)",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+trofrm.get()+"      Date To:"+troto.get()+"\n Order Category: All",fill='black',font=("Helvetica", 8), justify='right')
        canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')

        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)

    #--------------------------------------------------------------------------------------------------------------
    elif rth=="Year To Date":
        test_date=pendulum.today().date()
        start = test_date.start_of('year')
        trofrm1.delete(0,'end')
        trofrm1.insert(0, start)

        cr=date.today()
        troto1.delete(0,'end')
        troto1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tro is not None:
            canvas.create_text(310,100,text=company_tro[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_tro[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_tro[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rep_tro_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rep_tro_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 1", text="Order No")
            rep_tro_tree.column("# 2", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 2", text="Issue Date")
            rep_tro_tree.column("# 3", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 3", text="Due Date")
            rep_tro_tree.column("# 4", anchor=E, stretch=NO, width=130)
            rep_tro_tree.heading("# 4", text="Total Before TAX")
            rep_tro_tree.column("# 5", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 5", text="TAX1")
            rep_tro_tree.column("# 6", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 6", text="TAX2")
            rep_tro_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 7", text="Order Total")

            # Insert the data in Treeview widget
            rep_tro_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            
            for record in rep_tro_tree.get_children():
                rep_tro_tree.delete(record)
            count=0
            var1=start
            var2=cr
            sql_inv_dt='SELECT * FROM orders WHERE order_date BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:

                rep_tro_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[1], i[2], i[28], i[14], i[29],i[8]))
                count += 1

            # total_tri='SELECT SUM(Order_total) from orders'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            

            # total_tax1_tri='SELECT SUM(tax1) from orders'
            # fbcursor.execute(total_tax1_tri)
            # tot_tax1_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(tax2) from orders'
            # fbcursor.execute(total_tax2_tri)
            # tot_tax2_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(totalbeforetax) from orders'
            # fbcursor.execute(total_tax2_tri)
            # tot_bfr_tri= fbcursor.fetchone()
            
            # rep_tro_tree.insert('', 'end',text="1",values=('','-End of list-','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            # rep_tro_tree.insert('', 'end',text="1",values=('','','Summary:',tot_bfr_tri,tot_tax1_tri,tot_tax2_tri,tot_tri))

            window = canvas.create_window(270, 260, anchor="nw", window=rep_tro_tree)

            
            
        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')

        
            
            

            canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=100)
            tree.heading("# 1", text="Order No")
            tree.column("# 2", anchor=E, stretch=NO, width=100)
            tree.heading("# 2", text="Issue Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=130)
            tree.heading("# 4", text="Total Before TAX")
            tree.column("# 5", anchor=E, stretch=NO, width=90)
            tree.heading("# 5", text="TAX1")
            tree.column("# 6", anchor=E, stretch=NO, width=90)
            tree.heading("# 6", text="TAX2")
            tree.column("# 7", anchor=E, stretch=NO, width=100)
            tree.heading("# 7", text="Order Total")

            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Order Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)
        canvas.create_text(880,100,text="Tax Report(Orders)",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+trofrm.get()+"      Date To:"+troto.get()+"\n Order Category: All",fill='black',font=("Helvetica", 8), justify='right')
        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
        #===============================================================================================
    elif rth=="Current year":
        test_date=pendulum.today().date()
        start = test_date.start_of('year')
        trofrm1.delete(0,'end')
        trofrm1.insert(0, start)

        test_date_end=pendulum.today().date()
        end = test_date_end.end_of('year')
        troto1.delete(0,'end')
        troto1.insert(0, end)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tro is not None:
            canvas.create_text(310,100,text=company_tro[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_tro[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_tro[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rep_tro_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rep_tro_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 1", text="Order No")
            rep_tro_tree.column("# 2", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 2", text="Issue Date")
            rep_tro_tree.column("# 3", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 3", text="Due Date")
            rep_tro_tree.column("# 4", anchor=E, stretch=NO, width=130)
            rep_tro_tree.heading("# 4", text="Total Before TAX")
            rep_tro_tree.column("# 5", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 5", text="TAX1")
            rep_tro_tree.column("# 6", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 6", text="TAX2")
            rep_tro_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 7", text="Order Total")

            # Insert the data in Treeview widget
            rep_tro_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            
            for record in rep_tro_tree.get_children():
                rep_tro_tree.delete(record)
            count=0

            var1=start
            var2=end
            sql_inv_dt='SELECT * FROM orders WHERE order_date BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:

                rep_tro_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[1], i[2], i[28], i[14], i[29],i[8]))
                count += 1

            # total_tri='SELECT SUM(Order_total) from orders'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            

            # total_tax1_tri='SELECT SUM(tax1) from orders'
            # fbcursor.execute(total_tax1_tri)
            # tot_tax1_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(tax2) from orders'
            # fbcursor.execute(total_tax2_tri)
            # tot_tax2_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(totalbeforetax) from orders'
            # fbcursor.execute(total_tax2_tri)
            # tot_bfr_tri= fbcursor.fetchone()
            
            # rep_tro_tree.insert('', 'end',text="1",values=('','-End of list-','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            # rep_tro_tree.insert('', 'end',text="1",values=('','','Summary:',tot_bfr_tri,tot_tax1_tri,tot_tax2_tri,tot_tri))

            window = canvas.create_window(270, 260, anchor="nw", window=rep_tro_tree)

            
            
        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')

        

            canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=100)
            tree.heading("# 1", text="Order No")
            tree.column("# 2", anchor=E, stretch=NO, width=100)
            tree.heading("# 2", text="Issue Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=130)
            tree.heading("# 4", text="Total Before TAX")
            tree.column("# 5", anchor=E, stretch=NO, width=90)
            tree.heading("# 5", text="TAX1")
            tree.column("# 6", anchor=E, stretch=NO, width=90)
            tree.heading("# 6", text="TAX2")
            tree.column("# 7", anchor=E, stretch=NO, width=100)
            tree.heading("# 7", text="Order Total")

            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Order Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)
        canvas.create_text(880,100,text="Tax Report(Orders)",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+trofrm.get()+"      Date To:"+troto.get()+"\n Order Category: All",fill='black',font=("Helvetica", 8), justify='right')
        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
    #==============================================================================================================
    elif rth=="Current month":
        given_date = datetime.today().date()
        in_dat = given_date.replace(day=1)
        trofrm1.delete(0,'end')
        trofrm1.insert(0, in_dat)

        test_date=date.today()
        nxt_mnth=(test_date+relativedelta(day=31))
        troto1.delete(0,'end')
        troto1.insert(0, nxt_mnth)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tro is not None:
            canvas.create_text(310,100,text=company_tro[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_tro[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_tro[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rep_tro_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rep_tro_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 1", text="Order No")
            rep_tro_tree.column("# 2", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 2", text="Issue Date")
            rep_tro_tree.column("# 3", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 3", text="Due Date")
            rep_tro_tree.column("# 4", anchor=E, stretch=NO, width=130)
            rep_tro_tree.heading("# 4", text="Total Before TAX")
            rep_tro_tree.column("# 5", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 5", text="TAX1")
            rep_tro_tree.column("# 6", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 6", text="TAX2")
            rep_tro_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 7", text="Order Total")

            # Insert the data in Treeview widget
            rep_tro_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            
            for record in rep_tro_tree.get_children():
                rep_tro_tree.delete(record)
            count=0
            var1=in_dat
            var2=nxt_mnth
            sql_inv_dt='SELECT * FROM orders WHERE order_date BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:

                rep_tro_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[1], i[2], i[28], i[14], i[29],i[8]))
                count += 1

            # total_tri='SELECT SUM(Order_total) from orders'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            

            # total_tax1_tri='SELECT SUM(tax1) from orders'
            # fbcursor.execute(total_tax1_tri)
            # tot_tax1_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(tax2) from orders'
            # fbcursor.execute(total_tax2_tri)
            # tot_tax2_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(totalbeforetax) from orders'
            # fbcursor.execute(total_tax2_tri)
            # tot_bfr_tri= fbcursor.fetchone()
            
            # rep_tro_tree.insert('', 'end',text="1",values=('','-End of list-','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            # rep_tro_tree.insert('', 'end',text="1",values=('','','Summary:',tot_bfr_tri,tot_tax1_tri,tot_tax2_tri,tot_tri))

            window = canvas.create_window(270, 260, anchor="nw", window=rep_tro_tree)

            
            
        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')

        

            canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=100)
            tree.heading("# 1", text="Order No")
            tree.column("# 2", anchor=E, stretch=NO, width=100)
            tree.heading("# 2", text="Issue Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=130)
            tree.heading("# 4", text="Total Before TAX")
            tree.column("# 5", anchor=E, stretch=NO, width=90)
            tree.heading("# 5", text="TAX1")
            tree.column("# 6", anchor=E, stretch=NO, width=90)
            tree.heading("# 6", text="TAX2")
            tree.column("# 7", anchor=E, stretch=NO, width=100)
            tree.heading("# 7", text="Order Total")

            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Order Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)
        canvas.create_text(880,100,text="Tax Report(Orders)",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+trofrm.get()+"      Date To:"+troto.get()+"\n Order Category: All",fill='black',font=("Helvetica", 8), justify='right')

        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
        #=====================================================================================================
    elif rth=="Current days":
        given_date = date.today()
        trofrm1.delete(0,'end')
        trofrm1.insert(0,given_date)

        cr=date.today()
        troto1.delete(0,'end')
        troto1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tro is not None:
            canvas.create_text(310,100,text=company_tro[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_tro[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_tro[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rep_tro_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rep_tro_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 1", text="Order No")
            rep_tro_tree.column("# 2", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 2", text="Issue Date")
            rep_tro_tree.column("# 3", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 3", text="Due Date")
            rep_tro_tree.column("# 4", anchor=E, stretch=NO, width=130)
            rep_tro_tree.heading("# 4", text="Total Before TAX")
            rep_tro_tree.column("# 5", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 5", text="TAX1")
            rep_tro_tree.column("# 6", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 6", text="TAX2")
            rep_tro_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 7", text="Order Total")

            # Insert the data in Treeview widget
            rep_tro_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            
            for record in rep_tro_tree.get_children():
                rep_tro_tree.delete(record)
            count=0
            var1=given_date
            var2=cr
            sql_inv_dt='SELECT * FROM orders WHERE order_date BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:

                rep_tro_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[1], i[2], i[28], i[14], i[29],i[8]))
                count += 1

            # total_tri='SELECT SUM(Order_total) from orders'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            

            # total_tax1_tri='SELECT SUM(tax1) from orders'
            # fbcursor.execute(total_tax1_tri)
            # tot_tax1_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(tax2) from orders'
            # fbcursor.execute(total_tax2_tri)
            # tot_tax2_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(totalbeforetax) from orders'
            # fbcursor.execute(total_tax2_tri)
            # tot_bfr_tri= fbcursor.fetchone()
            
            # rep_tro_tree.insert('', 'end',text="1",values=('','-End of list-','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            # rep_tro_tree.insert('', 'end',text="1",values=('','','Summary:',tot_bfr_tri,tot_tax1_tri,tot_tax2_tri,tot_tri))

            window = canvas.create_window(270, 260, anchor="nw", window=rep_tro_tree)

            
            
        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')

        

            canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=100)
            tree.heading("# 1", text="Order No")
            tree.column("# 2", anchor=E, stretch=NO, width=100)
            tree.heading("# 2", text="Issue Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=130)
            tree.heading("# 4", text="Total Before TAX")
            tree.column("# 5", anchor=E, stretch=NO, width=90)
            tree.heading("# 5", text="TAX1")
            tree.column("# 6", anchor=E, stretch=NO, width=90)
            tree.heading("# 6", text="TAX2")
            tree.column("# 7", anchor=E, stretch=NO, width=100)
            tree.heading("# 7", text="Order Total")

            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Order Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)
        canvas.create_text(880,100,text="Tax Report(Orders)",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+trofrm.get()+"      Date To:"+troto.get()+"\n Order Category: All",fill='black',font=("Helvetica", 8), justify='right')
        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
        #=================================================================================================
    elif rth=="Last 30 days":
        date_filter=date.today()
        in_dat=date_filter-timedelta(days=30)
        trofrm1.delete(0,'end')
        trofrm1.insert(0, in_dat)

        cr=date.today()
        troto1.delete(0,'end')
        troto1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tro is not None:
            canvas.create_text(310,100,text=company_tro[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_tro[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_tro[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rep_tro_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rep_tro_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 1", text="Order No")
            rep_tro_tree.column("# 2", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 2", text="Issue Date")
            rep_tro_tree.column("# 3", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 3", text="Due Date")
            rep_tro_tree.column("# 4", anchor=E, stretch=NO, width=130)
            rep_tro_tree.heading("# 4", text="Total Before TAX")
            rep_tro_tree.column("# 5", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 5", text="TAX1")
            rep_tro_tree.column("# 6", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 6", text="TAX2")
            rep_tro_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 7", text="Order Total")

            # Insert the data in Treeview widget
            rep_tro_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            
            for record in rep_tro_tree.get_children():
                rep_tro_tree.delete(record)
            count=0
            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM orders WHERE order_date BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:

                rep_tro_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[1], i[2], i[28], i[14], i[29],i[8]))
                count += 1

            # total_tri='SELECT SUM(Order_total) from orders'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            

            # total_tax1_tri='SELECT SUM(tax1) from orders'
            # fbcursor.execute(total_tax1_tri)
            # tot_tax1_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(tax2) from orders'
            # fbcursor.execute(total_tax2_tri)
            # tot_tax2_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(totalbeforetax) from orders'
            # fbcursor.execute(total_tax2_tri)
            # tot_bfr_tri= fbcursor.fetchone()
            
            # rep_tro_tree.insert('', 'end',text="1",values=('','-End of list-','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            # rep_tro_tree.insert('', 'end',text="1",values=('','','Summary:',tot_bfr_tri,tot_tax1_tri,tot_tax2_tri,tot_tri))


            window = canvas.create_window(270, 260, anchor="nw", window=rep_tro_tree)

            
            
        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')

        

            canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=100)
            tree.heading("# 1", text="Order No")
            tree.column("# 2", anchor=E, stretch=NO, width=100)
            tree.heading("# 2", text="Issue Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=130)
            tree.heading("# 4", text="Total Before TAX")
            tree.column("# 5", anchor=E, stretch=NO, width=90)
            tree.heading("# 5", text="TAX1")
            tree.column("# 6", anchor=E, stretch=NO, width=90)
            tree.heading("# 6", text="TAX2")
            tree.column("# 7", anchor=E, stretch=NO, width=100)
            tree.heading("# 7", text="Order Total")

            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Order Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)
        canvas.create_text(880,100,text="Tax Report(Orders)",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+trofrm.get()+"      Date To:"+troto.get()+"\n Order Category: All",fill='black',font=("Helvetica", 8), justify='right')
        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
    
    #=====================================================================================================
    elif rth=="Last 60 days":
        date_filter=date.today()
        in_dat=date_filter-timedelta(days=60)
        trofrm1.delete(0,'end')
        trofrm1.insert(0, in_dat)

        cr=date.today()
        troto1.delete(0,'end')
        troto1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tro is not None:
            canvas.create_text(310,100,text=company_tro[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_tro[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_tro[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rep_tro_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rep_tro_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 1", text="Order No")
            rep_tro_tree.column("# 2", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 2", text="Issue Date")
            rep_tro_tree.column("# 3", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 3", text="Due Date")
            rep_tro_tree.column("# 4", anchor=E, stretch=NO, width=130)
            rep_tro_tree.heading("# 4", text="Total Before TAX")
            rep_tro_tree.column("# 5", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 5", text="TAX1")
            rep_tro_tree.column("# 6", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 6", text="TAX2")
            rep_tro_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 7", text="Order Total")

            # Insert the data in Treeview widget
            rep_tro_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            
            for record in rep_tro_tree.get_children():
                rep_tro_tree.delete(record)
            count=0
            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM orders WHERE order_date BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:

                rep_tro_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[1], i[2], i[28], i[14], i[29],i[8]))
                count += 1

            # total_tri='SELECT SUM(Order_total) from orders'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            

            # total_tax1_tri='SELECT SUM(tax1) from orders'
            # fbcursor.execute(total_tax1_tri)
            # tot_tax1_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(tax2) from orders'
            # fbcursor.execute(total_tax2_tri)
            # tot_tax2_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(totalbeforetax) from orders'
            # fbcursor.execute(total_tax2_tri)
            # tot_bfr_tri= fbcursor.fetchone()
            
            # rep_tro_tree.insert('', 'end',text="1",values=('','-End of list-','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            # rep_tro_tree.insert('', 'end',text="1",values=('','','Summary:',tot_bfr_tri,tot_tax1_tri,tot_tax2_tri,tot_tri))

            window = canvas.create_window(270, 260, anchor="nw", window=rep_tro_tree)

            
            
        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')

        

            canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=100)
            tree.heading("# 1", text="Order No")
            tree.column("# 2", anchor=E, stretch=NO, width=100)
            tree.heading("# 2", text="Issue Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=130)
            tree.heading("# 4", text="Total Before TAX")
            tree.column("# 5", anchor=E, stretch=NO, width=90)
            tree.heading("# 5", text="TAX1")
            tree.column("# 6", anchor=E, stretch=NO, width=90)
            tree.heading("# 6", text="TAX2")
            tree.column("# 7", anchor=E, stretch=NO, width=100)
            tree.heading("# 7", text="Order Total")

            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Order Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)
        canvas.create_text(880,100,text="Tax Report(Orders)",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+trofrm.get()+"      Date To:"+troto.get()+"\n Order Category: All",fill='black',font=("Helvetica", 8), justify='right')

        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)


#================================================================================================================
    elif rth=="Last 90 days":
        date_filter=date.today()
        in_dat=date_filter-timedelta(days=90)
        trofrm1.delete(0,'end')
        trofrm1.insert(0, in_dat)

        cr=date.today()
        troto1.delete(0,'end')
        troto1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tro is not None:
            canvas.create_text(310,100,text=company_tro[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_tro[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_tro[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rep_tro_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rep_tro_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 1", text="Order No")
            rep_tro_tree.column("# 2", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 2", text="Issue Date")
            rep_tro_tree.column("# 3", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 3", text="Due Date")
            rep_tro_tree.column("# 4", anchor=E, stretch=NO, width=130)
            rep_tro_tree.heading("# 4", text="Total Before TAX")
            rep_tro_tree.column("# 5", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 5", text="TAX1")
            rep_tro_tree.column("# 6", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 6", text="TAX2")
            rep_tro_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 7", text="Order Total")

            # Insert the data in Treeview widget
            rep_tro_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            
            for record in rep_tro_tree.get_children():
                rep_tro_tree.delete(record)
            count=0
            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM orders WHERE order_date BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:

                rep_tro_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[1], i[2], i[28], i[14], i[29],i[8]))
                count += 1

            # total_tri='SELECT SUM(Order_total) from orders'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            

            # total_tax1_tri='SELECT SUM(tax1) from orders'
            # fbcursor.execute(total_tax1_tri)
            # tot_tax1_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(tax2) from orders'
            # fbcursor.execute(total_tax2_tri)
            # tot_tax2_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(totalbeforetax) from orders'
            # fbcursor.execute(total_tax2_tri)
            # tot_bfr_tri= fbcursor.fetchone()
            
            # rep_tro_tree.insert('', 'end',text="1",values=('','-End of list-','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            # rep_tro_tree.insert('', 'end',text="1",values=('','','Summary:',tot_bfr_tri,tot_tax1_tri,tot_tax2_tri,tot_tri))

            window = canvas.create_window(270, 260, anchor="nw", window=rep_tro_tree)

            
            
        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')

        

            canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=100)
            tree.heading("# 1", text="Order No")
            tree.column("# 2", anchor=E, stretch=NO, width=100)
            tree.heading("# 2", text="Issue Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=130)
            tree.heading("# 4", text="Total Before TAX")
            tree.column("# 5", anchor=E, stretch=NO, width=90)
            tree.heading("# 5", text="TAX1")
            tree.column("# 6", anchor=E, stretch=NO, width=90)
            tree.heading("# 6", text="TAX2")
            tree.column("# 7", anchor=E, stretch=NO, width=100)
            tree.heading("# 7", text="Order Total")

            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Order Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)
        canvas.create_text(880,100,text="Tax Report(Orders)",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+trofrm.get()+"      Date To:"+troto.get()+"\n Order Category: All",fill='black',font=("Helvetica", 8), justify='right')
        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
        #====================================================================================================
    elif rth=="Previous month":
        last_day_of_prev_month=date.today().replace(day=1)- timedelta(days=1)
        in_dat=date.today().replace(day=1)-timedelta(last_day_of_prev_month.day)
        trofrm1.delete(0,'end')
        trofrm1.insert(0, in_dat)

        cr=date.today()
        troto1.delete(0,'end')
        troto1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tro is not None:
            canvas.create_text(310,100,text=company_tro[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_tro[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_tro[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rep_tro_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rep_tro_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 1", text="Order No")
            rep_tro_tree.column("# 2", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 2", text="Issue Date")
            rep_tro_tree.column("# 3", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 3", text="Due Date")
            rep_tro_tree.column("# 4", anchor=E, stretch=NO, width=130)
            rep_tro_tree.heading("# 4", text="Total Before TAX")
            rep_tro_tree.column("# 5", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 5", text="TAX1")
            rep_tro_tree.column("# 6", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 6", text="TAX2")
            rep_tro_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 7", text="Order Total")

            # Insert the data in Treeview widget
            rep_tro_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            
            for record in rep_tro_tree.get_children():
                rep_tro_tree.delete(record)
            count=0
            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM orders WHERE order_date BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:

                rep_tro_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[1], i[2], i[28], i[14], i[29],i[8]))
                count += 1

            # total_tri='SELECT SUM(Order_total) from orders'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            

            # total_tax1_tri='SELECT SUM(tax1) from orders'
            # fbcursor.execute(total_tax1_tri)
            # tot_tax1_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(tax2) from orders'
            # fbcursor.execute(total_tax2_tri)
            # tot_tax2_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(totalbeforetax) from orders'
            # fbcursor.execute(total_tax2_tri)
            # tot_bfr_tri= fbcursor.fetchone()
            
            # rep_tro_tree.insert('', 'end',text="1",values=('','-End of list-','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            # rep_tro_tree.insert('', 'end',text="1",values=('','','Summary:',tot_bfr_tri,tot_tax1_tri,tot_tax2_tri,tot_tri))
            window = canvas.create_window(270, 260, anchor="nw", window=rep_tro_tree)

            
            
        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')

        

            canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=100)
            tree.heading("# 1", text="Order No")
            tree.column("# 2", anchor=E, stretch=NO, width=100)
            tree.heading("# 2", text="Issue Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=130)
            tree.heading("# 4", text="Total Before TAX")
            tree.column("# 5", anchor=E, stretch=NO, width=90)
            tree.heading("# 5", text="TAX1")
            tree.column("# 6", anchor=E, stretch=NO, width=90)
            tree.heading("# 6", text="TAX2")
            tree.column("# 7", anchor=E, stretch=NO, width=100)
            tree.heading("# 7", text="Order Total")

            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Order Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)
        canvas.create_text(880,100,text="Tax Report(Orders)",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+trofrm.get()+"      Date To:"+troto.get()+"\n Order Category: All",fill='black',font=("Helvetica", 8), justify='right')

        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
        #===========================================================================================================
    elif rth=="Previous year":
        last_year = (datetime.now()-relativedelta(years=1)).strftime("%Y-%m-%d")
        trofrm1.delete(0,'end')
        trofrm1.insert(0, last_year)

        cr=date.today()
        troto1.delete(0,'end')
        troto1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tro is not None:
            canvas.create_text(310,100,text=company_tro[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_tro[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_tro[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rep_tro_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rep_tro_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 1", text="Order No")
            rep_tro_tree.column("# 2", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 2", text="Issue Date")
            rep_tro_tree.column("# 3", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 3", text="Due Date")
            rep_tro_tree.column("# 4", anchor=E, stretch=NO, width=130)
            rep_tro_tree.heading("# 4", text="Total Before TAX")
            rep_tro_tree.column("# 5", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 5", text="TAX1")
            rep_tro_tree.column("# 6", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 6", text="TAX2")
            rep_tro_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 7", text="Order Total")

            # Insert the data in Treeview widget
            rep_tro_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            
            for record in rep_tro_tree.get_children():
                rep_tro_tree.delete(record)
            count=0
            var1=last_yearyear
            var2=cr
            sql_inv_dt='SELECT * FROM orders WHERE order_date BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:

                rep_tro_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[1], i[2], i[28], i[14], i[29],i[8]))
                count += 1

            # total_tri='SELECT SUM(Order_total) from orders'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            

            # total_tax1_tri='SELECT SUM(tax1) from orders'
            # fbcursor.execute(total_tax1_tri)
            # tot_tax1_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(tax2) from orders'
            # fbcursor.execute(total_tax2_tri)
            # tot_tax2_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(totalbeforetax) from orders'
            # fbcursor.execute(total_tax2_tri)
            # tot_bfr_tri= fbcursor.fetchone()
            
            # rep_tro_tree.insert('', 'end',text="1",values=('','-End of list-','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            # rep_tro_tree.insert('', 'end',text="1",values=('','','Summary:',tot_bfr_tri,tot_tax1_tri,tot_tax2_tri,tot_tri))

            window = canvas.create_window(270, 260, anchor="nw", window=rep_tro_tree)

            
            
        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')

        

            canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=100)
            tree.heading("# 1", text="Order No")
            tree.column("# 2", anchor=E, stretch=NO, width=100)
            tree.heading("# 2", text="Issue Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=130)
            tree.heading("# 4", text="Total Before TAX")
            tree.column("# 5", anchor=E, stretch=NO, width=90)
            tree.heading("# 5", text="TAX1")
            tree.column("# 6", anchor=E, stretch=NO, width=90)
            tree.heading("# 6", text="TAX2")
            tree.column("# 7", anchor=E, stretch=NO, width=100)
            tree.heading("# 7", text="Order Total")

            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Order Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)
        canvas.create_text(880,100,text="Tax Report(Orders)",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+trofrm.get()+"      Date To:"+troto.get()+"\n Order Category: All",fill='black',font=("Helvetica", 8), justify='right')

        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
    elif rth=="Custom Range":
        cft=trofrm1.get_date()
        cft1=troto1.get_date()
        cr1=date.today()
        trofrm1.delete(0,'end')
        trofrm1.insert(0, cr1)

        cr=date.today()
        troto1.delete(0,'end')
        troto1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tro is not None:
            canvas.create_text(310,100,text=company_tro[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_tro[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_tro[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rep_tro_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rep_tro_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 1", text="Order No")
            rep_tro_tree.column("# 2", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 2", text="Issue Date")
            rep_tro_tree.column("# 3", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 3", text="Due Date")
            rep_tro_tree.column("# 4", anchor=E, stretch=NO, width=130)
            rep_tro_tree.heading("# 4", text="Total Before TAX")
            rep_tro_tree.column("# 5", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 5", text="TAX1")
            rep_tro_tree.column("# 6", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 6", text="TAX2")
            rep_tro_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 7", text="Order Total")

            # Insert the data in Treeview widget
            rep_tro_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            
            for record in rep_tro_tree.get_children():
                rep_tro_tree.delete(record)
            count=0
            var1=cft
            var2=cft1
            sql_inv_dt='SELECT * FROM orders WHERE order_date BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:

                rep_tro_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[1], i[2], i[28], i[14], i[29],i[8]))
                count += 1

            # total_tri='SELECT SUM(Order_total) from orders'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            

            # total_tax1_tri='SELECT SUM(tax1) from orders'
            # fbcursor.execute(total_tax1_tri)
            # tot_tax1_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(tax2) from orders'
            # fbcursor.execute(total_tax2_tri)
            # tot_tax2_tri= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(totalbeforetax) from orders'
            # fbcursor.execute(total_tax2_tri)
            # tot_bfr_tri= fbcursor.fetchone()
            
            # rep_tro_tree.insert('', 'end',text="1",values=('','-End of list-','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            # rep_tro_tree.insert('', 'end',text="1",values=('','','Summary:',tot_bfr_tri,tot_tax1_tri,tot_tax2_tri,tot_tri))

            window = canvas.create_window(270, 260, anchor="nw", window=rep_tro_tree)

            
            
        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')

        

            canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=100)
            tree.heading("# 1", text="Order No")
            tree.column("# 2", anchor=E, stretch=NO, width=100)
            tree.heading("# 2", text="Issue Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=130)
            tree.heading("# 4", text="Total Before TAX")
            tree.column("# 5", anchor=E, stretch=NO, width=90)
            tree.heading("# 5", text="TAX1")
            tree.column("# 6", anchor=E, stretch=NO, width=90)
            tree.heading("# 6", text="TAX2")
            tree.column("# 7", anchor=E, stretch=NO, width=100)
            tree.heading("# 7", text="Order Total")

            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Order Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)
        canvas.create_text(880,100,text="Tax Report(Orders)",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+trofrm.get()+"      Date To:"+troto.get()+"\n Order Category: All",fill='black',font=("Helvetica", 8), justify='right')

        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)

        #============================================================================================
    else:
        pass
#-------------------------------------------------Sales report group by date------------------------------------------
def category_srgd():
  # firtst filter-----------------------------------Month to date
    rth=srgdfilter.get()
    # #for company details
    tro_company = "SELECT * from company"
    fbcursor.execute(tro_company)
    company_tro= fbcursor.fetchone()

    irt1=srgd_frm.get_date()
    irt2=srgd_to.get_date()

    if rth==rth:
        lkt=srgdfilter.get()
        lkts=srgdfilter.get()
        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tro is not None:
            canvas.create_text(310,100,text=company_tro[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_tro[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_tro[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
            
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=120)
            tree.heading("# 1", text="Date")
            tree.column("# 2", anchor=E, stretch=NO, width=145)
            tree.heading("# 2", text="Quantity")
            tree.column("# 3", anchor=E, stretch=NO, width=150)
            tree.heading("# 3", text="Cost")
            tree.column("# 4", anchor=E, stretch=NO, width=150)
            tree.heading("# 4", text="Income")
            tree.column("# 5", anchor=E, stretch=NO, width=150)
            tree.heading("# 5", text="Profit")
            
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','',''))
            
            for record in tree.get_children():
                tree.delete(record)
            count=0

            var_1=irt1
            var_2=irt2
            sql_inv='SELECT * FROM productservice Where name=%s'
            # inv_valuz=(var1,var2)
            
            inv=(lkts,)
            fbcursor.execute(sql_inv, inv)
            tre=fbcursor.fetchall()
            

            sel_inv_dt1='SELECT * FROM invoice Where Productserviceid=(SELECT Productserviceid from productservice Where name=%s and invodate between %s and %s)'
            inv_valuz=(lkt,var_1, var_2)
            fbcursor.execute(sel_inv_dt1, inv_valuz)
            tre1=fbcursor.fetchall()

            
            
            for i in tre1:
                for j in tre:
                    tree.insert(parent='', index='end', text='hello',values=(i[2],i[38],int(j[9])*int(i[38]),i[8],int(i[8])-int(j[9])))
                    count += 1


                count +=1


            window = canvas.create_window(270, 260, anchor="nw", window=tree)
        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')


            canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=50)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=100)
            tree.heading("# 4", text="Terms")
            tree.column("# 5", anchor=E, stretch=NO, width=100)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=100)
            tree.heading("# 6", text="Invoice Total")
            tree.column("# 7", anchor=E, stretch=NO, width=100)
            tree.heading("# 7", text="Invoice Paid")
            tree.column("# 8", anchor=E, stretch=NO, width=100)
            tree.heading("# 8", text="Balance")
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','Invoice Total','Total Paid','Balance'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)
        canvas.create_text(900,100,text="Invoice Report",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+srgdfrm.get()+"      Date To:"+srgdto.get()+"\nOrder Category: All",fill='black',font=("Helvetica", 8), justify='right')
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)

    elif rth=="MiMobile":

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

        canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')

       
        
        canvas.create_text(900,100,text="Invoice Report",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+srgdfrm.get()+"      Date To:"+srgdto.get()+"\nOrder Category: All",fill='black',font=("Helvetica", 8), justify='right')

        canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
        
        # Create an instance of Style widget
        style=ttk.Style()
        style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
        style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
        style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

        # Add a Treeview widge
                
        tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
        tree.column("# 1", anchor=E, stretch=NO, width=50)
        tree.heading("# 1", text="No")
        tree.column("# 2", anchor=E, stretch=NO, width=70)
        tree.heading("# 2", text="Date")
        tree.column("# 3", anchor=E, stretch=NO, width=70)
        tree.heading("# 3", text="Due Date")
        tree.column("# 4", anchor=E, stretch=NO, width=100)
        tree.heading("# 4", text="Terms")
        tree.column("# 5", anchor=E, stretch=NO, width=100)
        tree.heading("# 5", text="Status")
        tree.column("# 6", anchor=E, stretch=NO, width=100)
        tree.heading("# 6", text="Invoice Total")
        tree.column("# 7", anchor=E, stretch=NO, width=100)
        tree.heading("# 7", text="Invoice Paid")
        tree.column("# 8", anchor=E, stretch=NO, width=100)
        tree.heading("# 8", text="Balance")
        # Insert the data in Treeview widget
        tree.insert('', 'end',text="1",values=('','','','','','Invoice Total','Total Paid','Balance'))

        window = canvas.create_window(290, 260, anchor="nw", window=tree)
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)

#----------------------------------------invoice report detail------------------------------------------------------
def category_ird():
  # firtst filter-----------------------------------Month to date
    rth=irdfilter.get()
    ird1=irdfrm1.get_date()
    ird2=irdfrm2.get_date()
    tro_company = "SELECT * from company"
    fbcursor.execute(tro_company)
    company_tro= fbcursor.fetchone()

    if rth=="All":

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tro is not None:
            canvas.create_text(310,100,text=company_tro[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_tro[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_tro[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rep_ird_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rep_ird_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rep_ird_tree.heading("# 1", text="Invoice No")
            rep_ird_tree.column("# 2", anchor=E, stretch=NO, width=100)
            rep_ird_tree.heading("# 2", text="Date")
            rep_ird_tree.column("# 3", anchor=E, stretch=NO, width=150)
            rep_ird_tree.heading("# 3", text="Customer")
            rep_ird_tree.column("# 4", anchor=E, stretch=NO, width=150)
            rep_ird_tree.heading("# 4", text="Invoice Total")
            rep_ird_tree.column("# 5", anchor=E, stretch=NO, width=130)
            rep_ird_tree.heading("# 5", text="Paid")
            rep_ird_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rep_ird_tree.heading("# 6", text="Balance")
            # Insert the data in Treeview widget
            for record in rep_ird_tree.get_children():
                rep_ird_tree.delete(record)
            count=0

            var_1=ird1
            var_2=ird2
            
            sql_inv_dt='SELECT * from invoice where invodate between %s and %s'
            inv_valuz=(var_1,var_2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            rep_ird_tree.insert('', 'end',text="1",values=('','','','Invoice Total','Paid','Balance'))
            
            for i in tre:
                rep_ird_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[29], i[8], i[9], i[10]))
                count += 1

            # total_tri='SELECT SUM(invoicetot) from invoice'
            # fbcursor.execute(total_tri)
            # tot_ird= fbcursor.fetchone()
            

            # total_tax1_tri='SELECT SUM(totpaid) from invoice'
            # fbcursor.execute(total_tax1_tri)
            # tot_tax1_ird= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(balance) from invoice'
            # fbcursor.execute(total_tax2_tri)
            # tot_tax2_ird= fbcursor.fetchone()
            
            # rep_ird_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2'))

            # rep_ird_tree.insert('', 'end',text="1",values=('','','Summary:',tot_ird,tot_tax1_ird,tot_tax2_ird))
            
            window = canvas.create_window(270, 260, anchor="nw", window=rep_ird_tree)

            
        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')


            canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=80)
            tree.heading("# 1", text="Invoice No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=150)
            tree.heading("# 3", text="Customer")
            tree.column("# 4", anchor=E, stretch=NO, width=150)
            tree.heading("# 4", text="Invoice Total")
            tree.column("# 5", anchor=E, stretch=NO, width=130)
            tree.heading("# 5", text="Paid")
            tree.column("# 6", anchor=E, stretch=NO, width=100)
            tree.heading("# 6", text="Balance")
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','Invoice Total','Paid','Balance'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)
        canvas.create_text(900,100,text="Invoice Report",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+irdfrm.get()+"      Date To:"+irdto.get()+"\n Invoice Category: All",fill='black',font=("Helvetica", 8), justify='right')

        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
#-----------------------------------daily invoice report
def category_dir():
        tro_company = "SELECT * from company"
        fbcursor.execute(tro_company)
        company_tro= fbcursor.fetchone()
        
        ddr=dir_frm.get_date()

        ddr2=date.today()
        
        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tro is not None:
            canvas.create_text(310,100,text=company_tro[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_tro[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_tro[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rep_ird_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rep_ird_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rep_ird_tree.heading("# 1", text="Invoice No")
            rep_ird_tree.column("# 2", anchor=E, stretch=NO, width=100)
            rep_ird_tree.heading("# 2", text="Date")
            rep_ird_tree.column("# 3", anchor=E, stretch=NO, width=150)
            rep_ird_tree.heading("# 3", text="Customer")
            rep_ird_tree.column("# 4", anchor=E, stretch=NO, width=150)
            rep_ird_tree.heading("# 4", text="Invoice Total")
            rep_ird_tree.column("# 5", anchor=E, stretch=NO, width=130)
            rep_ird_tree.heading("# 5", text="Paid")
            rep_ird_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rep_ird_tree.heading("# 6", text="Balance")
            # Insert the data in Treeview widget
            for record in rep_ird_tree.get_children():
                rep_ird_tree.delete(record)
            count=0
            rep_ird_tree.insert('', 'end',text="1",values=('','','','Invoice Total','Paid','Balance'))
            
            sql_inv_dt='SELECT * FROM invoice WHERE invodate=%s'
        
            inv_valuz=(ddr,)
            
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()
            

            for i in tre:
                rep_ird_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[29], i[8], i[9], i[10]))
                count += 1
            # total_tri='SELECT SUM(invoicetot) from invoice'
            # fbcursor.execute(total_tri)
            # tot_ird= fbcursor.fetchone()
            

            # total_tax1_tri='SELECT SUM(totpaid) from invoice'
            # fbcursor.execute(total_tax1_tri)
            # tot_tax1_ird= fbcursor.fetchone()

            # total_tax2_tri='SELECT SUM(balance) from invoice'
            # fbcursor.execute(total_tax2_tri)
            # tot_tax2_ird= fbcursor.fetchone()
            
            # rep_ird_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2'))

            # rep_ird_tree.insert('', 'end',text="1",values=('','','Summary:',tot_ird,tot_tax1_ird,tot_tax2_ird))
            
            window = canvas.create_window(270, 260, anchor="nw", window=rep_ird_tree)
        
        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')

            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=80)
            tree.heading("# 1", text="Invoice No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=150)
            tree.heading("# 3", text="Customer")
            tree.column("# 4", anchor=E, stretch=NO, width=150)
            tree.heading("# 4", text="Invoice Total")
            tree.column("# 5", anchor=E, stretch=NO, width=130)
            tree.heading("# 5", text="Paid")
            tree.column("# 6", anchor=E, stretch=NO, width=100)
            tree.heading("# 6", text="Balance")
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','Invoice Total','Paid','Balance'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)
        canvas.create_text(880,100,text="Daily Invoice Report",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(935,145,text="Date:"+dirdate.get(),fill='black',font=("Helvetica", 8), justify='right')

        canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)

#----------------------------------------------Purchase Order Report-------------------------------------

def category_por():  
  # firtst filter-----------------------------------Month to date
    rth=porfilter.get()
    # #for company details
    or_company = "SELECT * from company"
    fbcursor.execute(or_company)
    company_or= fbcursor.fetchone()
    if rth=="Month to date":
        given_date = datetime.today().date()
        in_dat = given_date.replace(day=1)
        porfrm1.delete(0,'end')
        porfrm1.insert(0, in_dat)
        
        cr=date.today()
        porto1.delete(0,'end')
        porto1.insert(0, cr)

        
        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        global canvaspor
        canvaspor=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvaspor.yview)
        canvaspor.config(width=1310,height=600)

        canvaspor.config(
            yscrollcommand=vertibar.set
            )
        canvaspor.pack(expand=True,side=LEFT,fill=BOTH)
        canvaspor.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_or is not None:
            canvaspor.create_text(310,100,text=company_or[1],fill='black',font=("Helvetica", 12), justify='left')
            canvaspor.create_text(320,165,text=company_or[2],fill='black',font=("Helvetica", 10), justify='left')
            canvaspor.create_text(365,228,text="Sales tax reg No:"+company_or[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_por_tree=ttk.Treeview(canvaspor, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_por_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rp_por_tree.heading("# 1", text="No")
            rp_por_tree.column("# 2", anchor=E, stretch=NO, width=90)
            rp_por_tree.heading("# 2", text="Date")
            rp_por_tree.column("# 3", anchor=E, stretch=NO, width=150)
            rp_por_tree.heading("# 3", text="Due Date")
            rp_por_tree.column("# 4", anchor=E, stretch=NO, width=150)
            rp_por_tree.heading("# 4", text="Vendor")
            rp_por_tree.column("# 5", anchor=E, stretch=NO, width=115)
            rp_por_tree.heading("# 5", text="Status")
            rp_por_tree.column("# 6", anchor=E, stretch=NO, width=115)
            rp_por_tree.heading("# 6", text="P.Order Total")

            # Insert the data in Treeview widget
            rp_por_tree.insert('', 'end',text="1",values=('','','','','','P.Order Total'))
            
            for record in rp_por_tree.get_children():
                rp_por_tree.delete(record)
            count=0
            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM porder WHERE porderdate BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:
        
                rp_por_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[2], i[3], i[26], i[5], i[10]))
                count += 1
            # total_tri='SELECT SUM(total) from porder'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            
            
            # rp_por_tree.insert('', 'end',text="1",values=('','','','','','P.Order Total'))
            # rp_por_tree.insert('', 'end',text="1",values=('','','','','',tot_tri))

            window = canvaspor.create_window(270, 260, anchor="nw", window=rp_por_tree)


        else:
            canvaspor.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvaspor.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')
            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvaspor, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=80)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=150)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=150)
            tree.heading("# 4", text="Vendor")
            tree.column("# 5", anchor=E, stretch=NO, width=115)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=115)
            tree.heading("# 6", text="P.Order Total")
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','P.Order Total'))

            window = canvaspor.create_window(290, 260, anchor="nw", window=tree)
        canvaspor.create_text(870,100,text="Purchase Order Report",fill='black',font=("Helvetica", 16), justify='right')
        canvaspor.create_text(880,145,text="Date From:"+porfrm.get()+"      Date To:"+porto.get()+"\n Purchase Order Category: All",fill='black',font=("Helvetica", 8), justify='right')

        canvaspor.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')

        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvaspor, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvaspor.bind("<Button-3>", my_popup)

    #--------------------------------------------------------------------------------------------------------------
    elif rth=="Year To Date":
        test_date=pendulum.today().date()
        start = test_date.start_of('year')
        porfrm1.delete(0,'end')
        porfrm1.insert(0, start)

        cr=date.today()
        porto1.delete(0,'end')
        porto1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvaspor=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvaspor.yview)
        canvaspor.config(width=1310,height=600)

        canvaspor.config(
            yscrollcommand=vertibar.set
            )
        canvaspor.pack(expand=True,side=LEFT,fill=BOTH)
        canvaspor.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_or is not None:
            canvaspor.create_text(310,100,text=company_or[1],fill='black',font=("Helvetica", 12), justify='left')
            canvaspor.create_text(320,165,text=company_or[2],fill='black',font=("Helvetica", 10), justify='left')
            canvaspor.create_text(365,228,text="Sales tax reg No:"+company_or[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_por_tree=ttk.Treeview(canvaspor, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_por_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rp_por_tree.heading("# 1", text="No")
            rp_por_tree.column("# 2", anchor=E, stretch=NO, width=90)
            rp_por_tree.heading("# 2", text="Date")
            rp_por_tree.column("# 3", anchor=E, stretch=NO, width=150)
            rp_por_tree.heading("# 3", text="Due Date")
            rp_por_tree.column("# 4", anchor=E, stretch=NO, width=150)
            rp_por_tree.heading("# 4", text="Vendor")
            rp_por_tree.column("# 5", anchor=E, stretch=NO, width=115)
            rp_por_tree.heading("# 5", text="Status")
            rp_por_tree.column("# 6", anchor=E, stretch=NO, width=115)
            rp_por_tree.heading("# 6", text="P.Order Total")

            # Insert the data in Treeview widget
            rp_por_tree.insert('', 'end',text="1",values=('','','','','','P.Order Total'))
            
            for record in rp_por_tree.get_children():
                rp_por_tree.delete(record)
            count=0
            var1=start
            var2=cr
            sql_inv_dt='SELECT * FROM porder WHERE porderdate BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:
        
                rp_por_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[2], i[3], i[26], i[5], i[10]))
                count += 1
            # total_tri='SELECT SUM(total) from porder'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            
            
            # rp_por_tree.insert('', 'end',text="1",values=('','','','','','P.Order Total'))
            # rp_por_tree.insert('', 'end',text="1",values=('','','','','',tot_tri))

            window = canvaspor.create_window(270, 260, anchor="nw", window=rp_por_tree)


        else:
            canvaspor.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvaspor.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')
            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvaspor, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=100)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=90)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=150)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=150)
            tree.heading("# 4", text="Vendor")
            tree.column("# 5", anchor=E, stretch=NO, width=115)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=115)
            tree.heading("# 6", text="P.Order Total")
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','P.Order Total'))

            window = canvaspor.create_window(290, 260, anchor="nw", window=tree)
        canvaspor.create_text(870,100,text="Purchase Order Report",fill='black',font=("Helvetica", 16), justify='right')
        canvaspor.create_text(880,145,text="Date From:"+porfrm.get()+"      Date To:"+porto.get()+"\n Purchase Order Category: All",fill='black',font=("Helvetica", 8), justify='right')

        canvaspor.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')

        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvaspor, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvaspor.bind("<Button-3>", my_popup)
        #===============================================================================================
    elif rth=="Current year":
        test_date=pendulum.today().date()
        start = test_date.start_of('year')
        porfrm1.delete(0,'end')
        porfrm1.insert(0, start)

        test_date_end=pendulum.today().date()
        end = test_date_end.end_of('year')
        porto1.delete(0,'end')
        porto1.insert(0, end)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvaspor=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvaspor.yview)
        canvaspor.config(width=1310,height=600)

        canvaspor.config(
            yscrollcommand=vertibar.set
            )
        canvaspor.pack(expand=True,side=LEFT,fill=BOTH)
        canvaspor.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_or is not None:
            canvaspor.create_text(310,100,text=company_or[1],fill='black',font=("Helvetica", 12), justify='left')
            canvaspor.create_text(320,165,text=company_or[2],fill='black',font=("Helvetica", 10), justify='left')
            canvaspor.create_text(365,228,text="Sales tax reg No:"+company_or[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_por_tree=ttk.Treeview(canvaspor, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_por_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rp_por_tree.heading("# 1", text="No")
            rp_por_tree.column("# 2", anchor=E, stretch=NO, width=90)
            rp_por_tree.heading("# 2", text="Date")
            rp_por_tree.column("# 3", anchor=E, stretch=NO, width=150)
            rp_por_tree.heading("# 3", text="Due Date")
            rp_por_tree.column("# 4", anchor=E, stretch=NO, width=150)
            rp_por_tree.heading("# 4", text="Vendor")
            rp_por_tree.column("# 5", anchor=E, stretch=NO, width=115)
            rp_por_tree.heading("# 5", text="Status")
            rp_por_tree.column("# 6", anchor=E, stretch=NO, width=115)
            rp_por_tree.heading("# 6", text="P.Order Total")

            # Insert the data in Treeview widget
            rp_por_tree.insert('', 'end',text="1",values=('','','','','','P.Order Total'))
            
            for record in rp_por_tree.get_children():
                rp_por_tree.delete(record)
            count=0
            var1=start
            var2=end
            sql_inv_dt='SELECT * FROM porder WHERE porderdate BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:
        
                rp_por_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[2], i[3], i[26], i[5], i[10]))
                count += 1
            # total_tri='SELECT SUM(total) from porder'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            
            
            # rp_por_tree.insert('', 'end',text="1",values=('','','','','','P.Order Total'))
            # rp_por_tree.insert('', 'end',text="1",values=('','','','','',tot_tri))


            window = canvaspor.create_window(270, 260, anchor="nw", window=rp_por_tree)


        else:

            canvaspor.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvaspor.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')

            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvaspor, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=80)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=150)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=150)
            tree.heading("# 4", text="Vendor")
            tree.column("# 5", anchor=E, stretch=NO, width=115)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=115)
            tree.heading("# 6", text="P.Order Total")
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','P.Order Total'))

            window = canvaspor.create_window(290, 260, anchor="nw", window=tree)

        canvaspor.create_text(870,100,text="Purchase Order Report",fill='black',font=("Helvetica", 16), justify='right')
        canvaspor.create_text(880,145,text="Date From:"+porfrm.get()+"      Date To:"+porto.get()+"\n Purchase Order Category: All",fill='black',font=("Helvetica", 8), justify='right')

        canvaspor.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')

        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
    #==============================================================================================================
    elif rth=="Current month":
        given_date = datetime.today().date()
        in_dat = given_date.replace(day=1)
        porfrm1.delete(0,'end')
        porfrm1.insert(0, in_dat)

        test_date=date.today()
        nxt_mnth=(test_date+relativedelta(day=31))
        porto1.delete(0,'end')
        porto1.insert(0, nxt_mnth)
        
        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvaspor=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvaspor.yview)
        canvaspor.config(width=1310,height=600)

        canvaspor.config(
            yscrollcommand=vertibar.set
            )
        canvaspor.pack(expand=True,side=LEFT,fill=BOTH)
        canvaspor.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_or is not None:
            canvaspor.create_text(310,100,text=company_or[1],fill='black',font=("Helvetica", 12), justify='left')
            canvaspor.create_text(320,165,text=company_or[2],fill='black',font=("Helvetica", 10), justify='left')
            canvaspor.create_text(365,228,text="Sales tax reg No:"+company_or[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_por_tree=ttk.Treeview(canvaspor, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_por_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rp_por_tree.heading("# 1", text="No")
            rp_por_tree.column("# 2", anchor=E, stretch=NO, width=90)
            rp_por_tree.heading("# 2", text="Date")
            rp_por_tree.column("# 3", anchor=E, stretch=NO, width=150)
            rp_por_tree.heading("# 3", text="Due Date")
            rp_por_tree.column("# 4", anchor=E, stretch=NO, width=150)
            rp_por_tree.heading("# 4", text="Vendor")
            rp_por_tree.column("# 5", anchor=E, stretch=NO, width=115)
            rp_por_tree.heading("# 5", text="Status")
            rp_por_tree.column("# 6", anchor=E, stretch=NO, width=115)
            rp_por_tree.heading("# 6", text="P.Order Total")

            # Insert the data in Treeview widget
            rp_por_tree.insert('', 'end',text="1",values=('','','','','','P.Order Total'))
            
            for record in rp_por_tree.get_children():
                rp_por_tree.delete(record)
            count=0
            var1=in_dat
            var2=nxt_mnth
            sql_inv_dt='SELECT * FROM porder WHERE porderdate BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:
        
                rp_por_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[2], i[3], i[26], i[5], i[10]))
                count += 1
            # total_tri='SELECT SUM(total) from porder'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            
            
            # rp_por_tree.insert('', 'end',text="1",values=('','','','','','P.Order Total'))
            # rp_por_tree.insert('', 'end',text="1",values=('','','','','',tot_tri))

            window = canvaspor.create_window(270, 260, anchor="nw", window=rp_por_tree)


        else:
            canvaspor.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvaspor.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')
            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvaspor, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=80)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=150)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=150)
            tree.heading("# 4", text="Vendor")
            tree.column("# 5", anchor=E, stretch=NO, width=115)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=115)
            tree.heading("# 6", text="P.Order Total")
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','P.Order Total'))

            window = canvaspor.create_window(290, 260, anchor="nw", window=tree)
        canvaspor.create_text(870,100,text="Purchase Order Report",fill='black',font=("Helvetica", 16), justify='right')
        canvaspor.create_text(880,145,text="Date From:"+porfrm.get()+"      Date To:"+porto.get()+"\n Purchase Order Category: All",fill='black',font=("Helvetica", 8), justify='right')

        canvaspor.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
            
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvaspor, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvaspor.bind("<Button-3>", my_popup)
        #=====================================================================================================
    elif rth=="Current days":
        given_date = date.today()
        porfrm.delete(0,'end')
        porfrm1.insert(0,given_date)

        cr=date.today()
        porto1.delete(0,'end')
        porto1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvaspor=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvaspor.yview)
        canvaspor.config(width=1310,height=600)

        canvaspor.config(
            yscrollcommand=vertibar.set
            )
        canvaspor.pack(expand=True,side=LEFT,fill=BOTH)
        canvaspor.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_or is not None:
            canvaspor.create_text(310,100,text=company_or[1],fill='black',font=("Helvetica", 12), justify='left')
            canvaspor.create_text(320,165,text=company_or[2],fill='black',font=("Helvetica", 10), justify='left')
            canvaspor.create_text(365,228,text="Sales tax reg No:"+company_or[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_por_tree=ttk.Treeview(canvaspor, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_por_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rp_por_tree.heading("# 1", text="No")
            rp_por_tree.column("# 2", anchor=E, stretch=NO, width=90)
            rp_por_tree.heading("# 2", text="Date")
            rp_por_tree.column("# 3", anchor=E, stretch=NO, width=150)
            rp_por_tree.heading("# 3", text="Due Date")
            rp_por_tree.column("# 4", anchor=E, stretch=NO, width=150)
            rp_por_tree.heading("# 4", text="Vendor")
            rp_por_tree.column("# 5", anchor=E, stretch=NO, width=115)
            rp_por_tree.heading("# 5", text="Status")
            rp_por_tree.column("# 6", anchor=E, stretch=NO, width=115)
            rp_por_tree.heading("# 6", text="P.Order Total")

            # Insert the data in Treeview widget
            rp_por_tree.insert('', 'end',text="1",values=('','','','','','P.Order Total'))
            
            for record in rp_por_tree.get_children():
                rp_por_tree.delete(record)
            count=0
            var1=given_date
            var2=cr
            sql_inv_dt='SELECT * FROM porder WHERE porderdate BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:
        
                rp_por_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[2], i[3], i[26], i[5], i[10]))
                count += 1
            # total_tri='SELECT SUM(total) from porder'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            
            
            # rp_por_tree.insert('', 'end',text="1",values=('','','','','','P.Order Total'))
            # rp_por_tree.insert('', 'end',text="1",values=('','','','','',tot_tri))


            window = canvaspor.create_window(270, 260, anchor="nw", window=rp_por_tree)


        else:
            canvaspor.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvaspor.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')

            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvaspor, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=80)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=150)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=150)
            tree.heading("# 4", text="Vendor")
            tree.column("# 5", anchor=E, stretch=NO, width=115)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=115)
            tree.heading("# 6", text="P.Order Total")
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','P.Order Total'))

            window = canvaspor.create_window(290, 260, anchor="nw", window=tree)
        canvaspor.create_text(870,100,text="Purchase Order Report",fill='black',font=("Helvetica", 16), justify='right')
        canvaspor.create_text(880,145,text="Date From:"+porfrm.get()+"      Date To:"+porto.get()+"\n Purchase Order Category: All",fill='black',font=("Helvetica", 8), justify='right')

        canvaspor.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
            
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvaspor, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvaspor.bind("<Button-3>", my_popup)
        #=================================================================================================
    elif rth=="Last 30 days":
        date_filter=date.today()
        in_dat=date_filter-timedelta(days=30)
        porfrm1.delete(0,'end')
        porfrm1.insert(0, in_dat)

        cr=date.today()
        porto1.delete(0,'end')
        porto1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvaspor=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvaspor.yview)
        canvaspor.config(width=1310,height=600)

        canvaspor.config(
            yscrollcommand=vertibar.set
            )
        canvaspor.pack(expand=True,side=LEFT,fill=BOTH)
        canvaspor.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_or is not None:
            canvaspor.create_text(310,100,text=company_or[1],fill='black',font=("Helvetica", 12), justify='left')
            canvaspor.create_text(320,165,text=company_or[2],fill='black',font=("Helvetica", 10), justify='left')
            canvaspor.create_text(365,228,text="Sales tax reg No:"+company_or[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_por_tree=ttk.Treeview(canvaspor, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_por_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rp_por_tree.heading("# 1", text="No")
            rp_por_tree.column("# 2", anchor=E, stretch=NO, width=90)
            rp_por_tree.heading("# 2", text="Date")
            rp_por_tree.column("# 3", anchor=E, stretch=NO, width=150)
            rp_por_tree.heading("# 3", text="Due Date")
            rp_por_tree.column("# 4", anchor=E, stretch=NO, width=150)
            rp_por_tree.heading("# 4", text="Vendor")
            rp_por_tree.column("# 5", anchor=E, stretch=NO, width=115)
            rp_por_tree.heading("# 5", text="Status")
            rp_por_tree.column("# 6", anchor=E, stretch=NO, width=115)
            rp_por_tree.heading("# 6", text="P.Order Total")

            # Insert the data in Treeview widget
            rp_por_tree.insert('', 'end',text="1",values=('','','','','','P.Order Total'))
            
            for record in rp_por_tree.get_children():
                rp_por_tree.delete(record)
            count=0
            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM porder WHERE porderdate BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:
        
                rp_por_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[2], i[3], i[26], i[5], i[10]))
                count += 1
            # total_tri='SELECT SUM(total) from porder'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            
            
            # rp_por_tree.insert('', 'end',text="1",values=('','','','','','P.Order Total'))
            # rp_por_tree.insert('', 'end',text="1",values=('','','','','',tot_tri))
            window = canvaspor.create_window(270, 260, anchor="nw", window=rp_por_tree)


        else:

            canvaspor.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvaspor.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')

            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvaspor, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=80)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=150)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=150)
            tree.heading("# 4", text="Vendor")
            tree.column("# 5", anchor=E, stretch=NO, width=115)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=115)
            tree.heading("# 6", text="P.Order Total")
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','P.Order Total'))

            window = canvaspor.create_window(290, 260, anchor="nw", window=tree)
        canvaspor.create_text(870,100,text="Purchase Order Report",fill='black',font=("Helvetica", 16), justify='right')
        canvaspor.create_text(880,145,text="Date From:"+porfrm.get()+"      Date To:"+porto.get()+"\n Purchase Order Category: All",fill='black',font=("Helvetica", 8), justify='right')

        canvaspor.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')

            
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvaspor, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvaspor.bind("<Button-3>", my_popup)
    
    #=====================================================================================================
    elif rth=="Last 60 days":
        date_filter=date.today()
        in_dat=date_filter-timedelta(days=60)
        porfrm1.delete(0,'end')
        porfrm1.insert(0, in_dat)

        cr=date.today()
        porto1.delete(0,'end')
        porto1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvaspor=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvaspor.yview)
        canvaspor.config(width=1310,height=600)

        canvaspor.config(
            yscrollcommand=vertibar.set
            )
        canvaspor.pack(expand=True,side=LEFT,fill=BOTH)
        canvaspor.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_or is not None:
            canvaspor.create_text(310,100,text=company_or[1],fill='black',font=("Helvetica", 12), justify='left')
            canvaspor.create_text(320,165,text=company_or[2],fill='black',font=("Helvetica", 10), justify='left')
            canvaspor.create_text(365,228,text="Sales tax reg No:"+company_or[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_por_tree=ttk.Treeview(canvaspor, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_por_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rp_por_tree.heading("# 1", text="No")
            rp_por_tree.column("# 2", anchor=E, stretch=NO, width=90)
            rp_por_tree.heading("# 2", text="Date")
            rp_por_tree.column("# 3", anchor=E, stretch=NO, width=150)
            rp_por_tree.heading("# 3", text="Due Date")
            rp_por_tree.column("# 4", anchor=E, stretch=NO, width=150)
            rp_por_tree.heading("# 4", text="Vendor")
            rp_por_tree.column("# 5", anchor=E, stretch=NO, width=115)
            rp_por_tree.heading("# 5", text="Status")
            rp_por_tree.column("# 6", anchor=E, stretch=NO, width=115)
            rp_por_tree.heading("# 6", text="P.Order Total")

            # Insert the data in Treeview widget
            rp_por_tree.insert('', 'end',text="1",values=('','','','','','P.Order Total'))
            
            for record in rp_por_tree.get_children():
                rp_por_tree.delete(record)
            count=0
            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM porder WHERE porderdate BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:
        
                rp_por_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[2], i[3], i[26], i[5], i[10]))
                count += 1
            # total_tri='SELECT SUM(total) from porder'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            
            
            # rp_por_tree.insert('', 'end',text="1",values=('','','','','','P.Order Total'))
            # rp_por_tree.insert('', 'end',text="1",values=('','','','','',tot_tri))

            window = canvaspor.create_window(270, 260, anchor="nw", window=rp_por_tree)


        else:
            canvaspor.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvaspor.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')

            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvaspor, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=80)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=150)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=150)
            tree.heading("# 4", text="Vendor")
            tree.column("# 5", anchor=E, stretch=NO, width=115)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=115)
            tree.heading("# 6", text="P.Order Total")
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','P.Order Total'))

            window = canvaspor.create_window(290, 260, anchor="nw", window=tree)
        canvaspor.create_text(870,100,text="Purchase Order Report",fill='black',font=("Helvetica", 16), justify='right')
        canvaspor.create_text(880,145,text="Date From:"+porfrm.get()+"      Date To:"+porto.get()+"\n Purchase Order Category: All",fill='black',font=("Helvetica", 8), justify='right')

        canvaspor.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvaspor, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvaspor.bind("<Button-3>", my_popup)
    #========================================================================================================
    
#================================================================================================================
    elif rth=="Last 90 days":
        date_filter=date.today()
        in_dat=date_filter-timedelta(days=90)
        porfrm1.delete(0,'end')
        porfrm1.insert(0, in_dat)

        cr=date.today()
        porto1.delete(0,'end')
        porto1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvaspor=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvaspor.yview)
        canvaspor.config(width=1310,height=600)

        canvaspor.config(
            yscrollcommand=vertibar.set
            )
        canvaspor.pack(expand=True,side=LEFT,fill=BOTH)
        canvaspor.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_or is not None:
            canvaspor.create_text(310,100,text=company_or[1],fill='black',font=("Helvetica", 12), justify='left')
            canvaspor.create_text(320,165,text=company_or[2],fill='black',font=("Helvetica", 10), justify='left')
            canvaspor.create_text(365,228,text="Sales tax reg No:"+company_or[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_por_tree=ttk.Treeview(canvaspor, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_por_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rp_por_tree.heading("# 1", text="No")
            rp_por_tree.column("# 2", anchor=E, stretch=NO, width=90)
            rp_por_tree.heading("# 2", text="Date")
            rp_por_tree.column("# 3", anchor=E, stretch=NO, width=150)
            rp_por_tree.heading("# 3", text="Due Date")
            rp_por_tree.column("# 4", anchor=E, stretch=NO, width=150)
            rp_por_tree.heading("# 4", text="Vendor")
            rp_por_tree.column("# 5", anchor=E, stretch=NO, width=115)
            rp_por_tree.heading("# 5", text="Status")
            rp_por_tree.column("# 6", anchor=E, stretch=NO, width=115)
            rp_por_tree.heading("# 6", text="P.Order Total")

            # Insert the data in Treeview widget
            rp_por_tree.insert('', 'end',text="1",values=('','','','','','P.Order Total'))
            
            for record in rp_por_tree.get_children():
                rp_por_tree.delete(record)
            count=0
            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM porder WHERE porderdate BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:
        
                rp_por_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[2], i[3], i[26], i[5], i[10]))
                count += 1
            # total_tri='SELECT SUM(total) from porder'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            
            
            # rp_por_tree.insert('', 'end',text="1",values=('','','','','','P.Order Total'))
            # rp_por_tree.insert('', 'end',text="1",values=('','','','','',tot_tri))
            window = canvaspor.create_window(270, 260, anchor="nw", window=rp_por_tree)


        else:
            canvaspor.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvaspor.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')

        
            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvaspor, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=80)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=150)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=150)
            tree.heading("# 4", text="Vendor")
            tree.column("# 5", anchor=E, stretch=NO, width=115)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=115)
            tree.heading("# 6", text="P.Order Total")
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','P.Order Total'))

            window = canvaspor.create_window(290, 260, anchor="nw", window=tree)
        canvaspor.create_text(870,100,text="Purchase Order Report",fill='black',font=("Helvetica", 16), justify='right')
        canvaspor.create_text(880,145,text="Date From:"+porfrm.get()+"      Date To:"+porto.get()+"\n Purchase Order Category: All",fill='black',font=("Helvetica", 8), justify='right')

        canvaspor.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvaspor, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvaspor.bind("<Button-3>", my_popup)
        #====================================================================================================
    elif rth=="Previous month":
        last_day_of_prev_month=date.today().replace(day=1)- timedelta(days=1)
        in_dat=date.today().replace(day=1)-timedelta(last_day_of_prev_month.day)
        porfrm1.delete(0,'end')
        porfrm1.insert(0, in_dat)

        cr=date.today()
        porto1.delete(0,'end')
        porto1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvaspor=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvaspor.yview)
        canvaspor.config(width=1310,height=600)

        canvaspor.config(
            yscrollcommand=vertibar.set
            )
        canvaspor.pack(expand=True,side=LEFT,fill=BOTH)
        canvaspor.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_or is not None:
            canvaspor.create_text(310,100,text=company_or[1],fill='black',font=("Helvetica", 12), justify='left')
            canvaspor.create_text(320,165,text=company_or[2],fill='black',font=("Helvetica", 10), justify='left')
            canvaspor.create_text(365,228,text="Sales tax reg No:"+company_or[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_por_tree=ttk.Treeview(canvaspor, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_por_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rp_por_tree.heading("# 1", text="No")
            rp_por_tree.column("# 2", anchor=E, stretch=NO, width=90)
            rp_por_tree.heading("# 2", text="Date")
            rp_por_tree.column("# 3", anchor=E, stretch=NO, width=150)
            rp_por_tree.heading("# 3", text="Due Date")
            rp_por_tree.column("# 4", anchor=E, stretch=NO, width=150)
            rp_por_tree.heading("# 4", text="Vendor")
            rp_por_tree.column("# 5", anchor=E, stretch=NO, width=115)
            rp_por_tree.heading("# 5", text="Status")
            rp_por_tree.column("# 6", anchor=E, stretch=NO, width=115)
            rp_por_tree.heading("# 6", text="P.Order Total")

            # Insert the data in Treeview widget
            rp_por_tree.insert('', 'end',text="1",values=('','','','','','P.Order Total'))
            
            for record in rp_por_tree.get_children():
                rp_por_tree.delete(record)
            count=0
            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM porder WHERE porderdate BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:
        
                rp_por_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[2], i[3], i[26], i[5], i[10]))
                count += 1
            # total_tri='SELECT SUM(total) from porder'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            
            
            # rp_por_tree.insert('', 'end',text="1",values=('','','','','','P.Order Total'))
            # rp_por_tree.insert('', 'end',text="1",values=('','','','','',tot_tri))

            window = canvaspor.create_window(270, 260, anchor="nw", window=rp_por_tree)


        else:
            canvaspor.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvaspor.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')

            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvaspor, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=80)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=150)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=150)
            tree.heading("# 4", text="Vendor")
            tree.column("# 5", anchor=E, stretch=NO, width=115)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=115)
            tree.heading("# 6", text="P.Order Total")
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','P.Order Total'))

            window = canvaspor.create_window(290, 260, anchor="nw", window=tree)
        canvaspor.create_text(870,100,text="Purchase Order Report",fill='black',font=("Helvetica", 16), justify='right')
        canvaspor.create_text(880,145,text="Date From:"+porfrm.get()+"      Date To:"+porto.get()+"\n Purchase Order Category: All",fill='black',font=("Helvetica", 8), justify='right')

        canvaspor.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')

        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
        #===========================================================================================================
    elif rth=="Previous year":
        last_year = (datetime.now()-relativedelta(years=1)).strftime("%Y-%m-%d")
        porfrm1.delete(0,'end')
        porfrm1.insert(0, last_year)

        cr=date.today()
        porto1.delete(0,'end')
        porto1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvaspor=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvaspor.yview)
        canvaspor.config(width=1310,height=600)

        canvaspor.config(
            yscrollcommand=vertibar.set
            )
        canvaspor.pack(expand=True,side=LEFT,fill=BOTH)
        canvaspor.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_or is not None:
            canvaspor.create_text(310,100,text=company_or[1],fill='black',font=("Helvetica", 12), justify='left')
            canvaspor.create_text(320,165,text=company_or[2],fill='black',font=("Helvetica", 10), justify='left')
            canvaspor.create_text(365,228,text="Sales tax reg No:"+company_or[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_por_tree=ttk.Treeview(canvaspor, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_por_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rp_por_tree.heading("# 1", text="No")
            rp_por_tree.column("# 2", anchor=E, stretch=NO, width=90)
            rp_por_tree.heading("# 2", text="Date")
            rp_por_tree.column("# 3", anchor=E, stretch=NO, width=150)
            rp_por_tree.heading("# 3", text="Due Date")
            rp_por_tree.column("# 4", anchor=E, stretch=NO, width=150)
            rp_por_tree.heading("# 4", text="Vendor")
            rp_por_tree.column("# 5", anchor=E, stretch=NO, width=115)
            rp_por_tree.heading("# 5", text="Status")
            rp_por_tree.column("# 6", anchor=E, stretch=NO, width=115)
            rp_por_tree.heading("# 6", text="P.Order Total")

            # Insert the data in Treeview widget
            rp_por_tree.insert('', 'end',text="1",values=('','','','','','P.Order Total'))
            
            for record in rp_por_tree.get_children():
                rp_por_tree.delete(record)
            count=0
            var1=last_year
            var2=cr
            sql_inv_dt='SELECT * FROM porder WHERE porderdate BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:
        
                rp_por_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[2], i[3], i[26], i[5], i[10]))
                count += 1
            # total_tri='SELECT SUM(total) from porder'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            
            
            # rp_por_tree.insert('', 'end',text="1",values=('','','','','','P.Order Total'))
            # rp_por_tree.insert('', 'end',text="1",values=('','','','','',tot_tri))

            window = canvaspor.create_window(270, 260, anchor="nw", window=rp_por_tree)


        else:
            canvaspor.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvaspor.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')
            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvaspor, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=80)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=150)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=150)
            tree.heading("# 4", text="Vendor")
            tree.column("# 5", anchor=E, stretch=NO, width=115)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=115)
            tree.heading("# 6", text="P.Order Total")
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','P.Order Total'))

            window = canvaspor.create_window(290, 260, anchor="nw", window=tree)
        canvaspor.create_text(870,100,text="Purchase Order Report",fill='black',font=("Helvetica", 16), justify='right')
        canvaspor.create_text(880,145,text="Date From:"+porfrm.get()+"      Date To:"+porto.get()+"\n Purchase Order Category: All",fill='black',font=("Helvetica", 8), justify='right')

        canvaspor.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')

        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvaspor, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvaspor.bind("<Button-3>", my_popup)
    # ------------------------------
    elif rth=="Custom Range":
        lhy=porfrm1.get_date()
        lhy1=porto1.get_date()
        cr=date.today()
        porfrm1.delete(0,'end')
        porfrm1.insert(0, cr)

        cr=date.today()
        porto1.delete(0,'end')
        porto1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvaspor=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvaspor.yview)
        canvaspor.config(width=1310,height=600)

        canvaspor.config(
            yscrollcommand=vertibar.set
            )
        canvaspor.pack(expand=True,side=LEFT,fill=BOTH)
        canvaspor.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_or is not None:
            canvaspor.create_text(310,100,text=company_or[1],fill='black',font=("Helvetica", 12), justify='left')
            canvaspor.create_text(320,165,text=company_or[2],fill='black',font=("Helvetica", 10), justify='left')
            canvaspor.create_text(365,228,text="Sales tax reg No:"+company_or[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_por_tree=ttk.Treeview(canvaspor, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_por_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rp_por_tree.heading("# 1", text="No")
            rp_por_tree.column("# 2", anchor=E, stretch=NO, width=90)
            rp_por_tree.heading("# 2", text="Date")
            rp_por_tree.column("# 3", anchor=E, stretch=NO, width=150)
            rp_por_tree.heading("# 3", text="Due Date")
            rp_por_tree.column("# 4", anchor=E, stretch=NO, width=150)
            rp_por_tree.heading("# 4", text="Vendor")
            rp_por_tree.column("# 5", anchor=E, stretch=NO, width=115)
            rp_por_tree.heading("# 5", text="Status")
            rp_por_tree.column("# 6", anchor=E, stretch=NO, width=115)
            rp_por_tree.heading("# 6", text="P.Order Total")

            # Insert the data in Treeview widget
            rp_por_tree.insert('', 'end',text="1",values=('','','','','','P.Order Total'))
            
            for record in rp_por_tree.get_children():
                rp_por_tree.delete(record)
            count=0
            var1=lhy
            var2=lhy1
            sql_inv_dt='SELECT * FROM porder WHERE porderdate BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:
        
                rp_por_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[2], i[3], i[26], i[5], i[10]))
                count += 1
            # total_tri='SELECT SUM(total) from porder'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            
            
            # rp_por_tree.insert('', 'end',text="1",values=('','','','','','P.Order Total'))
            # rp_por_tree.insert('', 'end',text="1",values=('','','','','',tot_tri))

            window = canvaspor.create_window(270, 260, anchor="nw", window=rp_por_tree)


        else:
            canvaspor.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvaspor.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')

            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvaspor, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=80)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=150)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=150)
            tree.heading("# 4", text="Vendor")
            tree.column("# 5", anchor=E, stretch=NO, width=115)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=115)
            tree.heading("# 6", text="P.Order Total")
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','P.Order Total'))

            window = canvaspor.create_window(290, 260, anchor="nw", window=tree)

        canvaspor.create_text(870,100,text="Purchase Order Report",fill='black',font=("Helvetica", 16), justify='right')
        canvaspor.create_text(880,145,text="Date From:"+porfrm.get()+"      Date To:"+porto.get()+"\n Purchase Order Category: All",fill='black',font=("Helvetica", 8), justify='right')

        canvaspor.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvaspor, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvaspor.bind("<Button-3>", my_popup)

        #============================================================================================
    else:
        pass
#------------------------------------expense report--------------------
def category_exp():
  # firtst filter-----------------------------------Month to date
    rth=expfilter.get()
    tro_company = "SELECT * from company"
    fbcursor.execute(tro_company)
    company_tro= fbcursor.fetchone()

    given_date = datetime.today().date()
    in_dat = given_date.replace(day=1)
    exp_frm.delete(0,'end')
    exp_frm.insert(0, in_dat)

    cr=date.today()
    exp_to.delete(0,'end')
    exp_to.insert(0, cr)

    global canvas
    if rth=="All":

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tro is not None:
            canvas.create_text(310,100,text=company_tro[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_tro[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_tro[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_exp_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_exp_tree.column("# 1", anchor=E, stretch=NO, width=80)
            rp_exp_tree.heading("# 1", text="Date")
            rp_exp_tree.column("# 2", anchor=E, stretch=NO, width=160)
            rp_exp_tree.heading("# 2", text="Customer")
            rp_exp_tree.column("# 3", anchor=E, stretch=NO, width=160)
            rp_exp_tree.heading("# 3", text="Vendor")
            rp_exp_tree.column("# 4", anchor=E, stretch=NO, width=100)
            rp_exp_tree.heading("# 4", text="Invoice")
            rp_exp_tree.column("# 5", anchor=E, stretch=NO, width=115)
            rp_exp_tree.heading("# 5", text="Rebill.Amount")
            rp_exp_tree.column("# 6", anchor=E, stretch=NO, width=115)
            rp_exp_tree.heading("# 6", text="Amount")
            # Insert the data in Treeview widget
            rp_exp_tree.insert('', 'end',text="1",values=('','','','','Rebill.Amount','Amount'))
            
            for record in rp_exp_tree.get_children():
                rp_exp_tree.delete(record)
            count=0
            var_1=exp_frm.get_date()
            var_2=exp_to.get_date()

            lre='SELECT * from expenses WHERE date BETWEEN %s and %s '
            sre=(var_1, var_2)
            fbcursor.execute(lre,sre)
            tre=fbcursor.fetchall()

            for i in tre:
                rp_exp_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[4], i[10], i[5], i[14], i[16], i[3]))
                count += 1

            # total_tri='SELECT SUM(expense_amount) from expenses'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            

            # total_tax1_tri='SELECT SUM(rebill_amount) from expenses'
            # fbcursor.execute(total_tax1_tri)
            # tot_tax1_tri= fbcursor.fetchone()

            
            # rp_exp_tree.insert('', 'end',text="1",values=('','','','-End List-','Rebill.Amount','Amount'))
            # rp_exp_tree.insert('', 'end',text="1",values=('','','','Summary',tot_tax1_tri,tot_tri))

            window = canvas.create_window(270, 260, anchor="nw", window=rp_exp_tree)

            
            
        else:

            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')

            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=80)
            tree.heading("# 1", text="Date")
            tree.column("# 2", anchor=E, stretch=NO, width=150)
            tree.heading("# 2", text="Customer")
            tree.column("# 3", anchor=E, stretch=NO, width=120)
            tree.heading("# 3", text="Vendor")
            tree.column("# 4", anchor=E, stretch=NO, width=100)
            tree.heading("# 4", text="Invoice")
            tree.column("# 5", anchor=E, stretch=NO, width=115)
            tree.heading("# 5", text="Rebill.Amount")
            tree.column("# 6", anchor=E, stretch=NO, width=115)
            tree.heading("# 6", text="Amount")
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','Rebill.Amount','Amount'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)
        canvas.create_text(900,100,text="Expenses Report",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+expfrm.get()+"      Date To:"+expto.get()+"\n Expense Category: All",fill='black',font=("Helvetica", 8), justify='right')

        canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')

        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)

    elif rth=="Internal":

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tro is not None:
            canvas.create_text(310,100,text=company_tro[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_tro[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_tro[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_exp_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_exp_tree.column("# 1", anchor=E, stretch=NO, width=80)
            rp_exp_tree.heading("# 1", text="Date")
            rp_exp_tree.column("# 2", anchor=E, stretch=NO, width=160)
            rp_exp_tree.heading("# 2", text="Customer")
            rp_exp_tree.column("# 3", anchor=E, stretch=NO, width=160)
            rp_exp_tree.heading("# 3", text="Vendor")
            rp_exp_tree.column("# 4", anchor=E, stretch=NO, width=100)
            rp_exp_tree.heading("# 4", text="Invoice")
            rp_exp_tree.column("# 5", anchor=E, stretch=NO, width=115)
            rp_exp_tree.heading("# 5", text="Rebill.Amount")
            rp_exp_tree.column("# 6", anchor=E, stretch=NO, width=115)
            rp_exp_tree.heading("# 6", text="Amount")
            # Insert the data in Treeview widget
            rp_exp_tree.insert('', 'end',text="1",values=('','','','','Rebill.Amount','Amount'))
            
            for record in rp_exp_tree.get_children():
                rp_exp_tree.delete(record)
            count=0
            var_1=exp_frm.get_date()
            var_2=exp_to.get_date()

            lre='SELECT * from expenses WHERE date BETWEEN %s and %s and customer="Internal" '
            sre=(var_1, var_2)
            fbcursor.execute(lre,sre)
            tre=fbcursor.fetchall()


            for i in tre:
                rp_exp_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[4], i[10], i[5], i[14], i[16], i[3]))
                count += 1

            # total_tri='SELECT SUM(expense_amount) from expenses WHERE customer="Internal" '
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            

            # total_tax1_tri='SELECT SUM(rebill_amount) from expenses WHERE customer="Internal"'
            # fbcursor.execute(total_tax1_tri)
            # tot_tax1_tri= fbcursor.fetchone()

            
            # rp_exp_tree.insert('', 'end',text="1",values=('','','','-End List-','Rebill.Amount','Amount'))
            # rp_exp_tree.insert('', 'end',text="1",values=('','','','Summary',tot_tax1_tri,tot_tri))

            window = canvas.create_window(270, 260, anchor="nw", window=rp_exp_tree)

            
            
        else:

            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')

            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=80)
            tree.heading("# 1", text="Date")
            tree.column("# 2", anchor=E, stretch=NO, width=150)
            tree.heading("# 2", text="Customer")
            tree.column("# 3", anchor=E, stretch=NO, width=120)
            tree.heading("# 3", text="Vendor")
            tree.column("# 4", anchor=E, stretch=NO, width=100)
            tree.heading("# 4", text="Invoice")
            tree.column("# 5", anchor=E, stretch=NO, width=115)
            tree.heading("# 5", text="Rebill.Amount")
            tree.column("# 6", anchor=E, stretch=NO, width=115)
            tree.heading("# 6", text="Amount")
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','Rebill.Amount','Amount'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)
        canvas.create_text(900,100,text="Expenses Report",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+expfrm.get()+"      Date To:"+expto.get()+"\n Expense Category: All",fill='black',font=("Helvetica", 8), justify='right')

        canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')

        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
    else:
        pass
#------------------------------payment report------------------------
def category_pyr():
  # firtst filter-----------------------------------Month to date
    rth=pyrfilter.get()
    tri_company = "SELECT * from company"
    fbcursor.execute(tri_company)
    company_tri= fbcursor.fetchone()

    if rth=="Month to date":
        given_date = datetime.today().date()
        in_dat = given_date.replace(day=1)
        pyrfrm1.delete(0,'end')
        pyrfrm1.insert(0, in_dat)

        cr=date.today()
        pyrto1.delete(0,'end')
        pyrto1.insert(0, cr)


        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tri is not None:
            canvas.create_text(310,100,text=company_tri[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_tri[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_tri[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_pr_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rp_pr_tree.column("# 1", anchor=E, stretch=NO, width=80)
            rp_pr_tree.heading("# 1", text="Invoice No")
            rp_pr_tree.column("# 2", anchor=E, stretch=NO, width=140)
            rp_pr_tree.heading("# 2", text="Invoice Issue Date")
            rp_pr_tree.column("# 3", anchor=E, stretch=NO, width=130)
            rp_pr_tree.heading("# 3", text="Customer")
            rp_pr_tree.column("# 4", anchor=E, stretch=NO, width=90)
            rp_pr_tree.heading("# 4", text="Payment ID")
            rp_pr_tree.column("# 5", anchor=E, stretch=NO, width=110)
            rp_pr_tree.heading("# 5", text="Payment Date")
            rp_pr_tree.column("# 6", anchor=E, stretch=NO, width=80)
            rp_pr_tree.heading("# 6", text="Paid By")
            rp_pr_tree.column("# 7", anchor=E, stretch=NO, width=110)
            rp_pr_tree.heading("# 7", text="Amount Paid")
            rp_pr_tree.insert('', 'end',text="1",values=('','','','','','',''))
            for record in rp_pr_tree.get_children():
                rp_pr_tree.delete(record)
            count=0
            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE invodate BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()
            
            
            for i in tre:
            
                rp_pr_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[18], i[34], i[2], i[18],i[9]))
                count += 1

            # total_tri='SELECT SUM(totpaid) from invoice'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            
            # rp_pr_tree.insert('', 'end',text="1",values=('','','','','','',tot_tri))

            window = canvas.create_window(270, 260, anchor="nw", window=rp_pr_tree)
        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')

            canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=80)
            tree.heading("# 1", text="Invoice No")
            tree.column("# 2", anchor=E, stretch=NO, width=140)
            tree.heading("# 2", text="Invoice Issue Date")
            tree.column("# 3", anchor=E, stretch=NO, width=130)
            tree.heading("# 3", text="Customer")
            tree.column("# 4", anchor=E, stretch=NO, width=90)
            tree.heading("# 4", text="Payment ID")
            tree.column("# 5", anchor=E, stretch=NO, width=110)
            tree.heading("# 5", text="Payment Date")
            tree.column("# 6", anchor=E, stretch=NO, width=80)
            tree.heading("# 6", text="Paid By")
            tree.column("# 7", anchor=E, stretch=NO, width=110)
            tree.heading("# 7", text="Amount Paid")
    
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','',''))

            window = canvas.create_window(260, 260, anchor="nw", window=tree)
        canvas.create_text(900,100,text="Payment Report",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+pyrfrm.get()+"      Date To:"+pyrto.get(),fill='black',font=("Helvetica", 8), justify='right')

        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)

    #--------------------------------------------------------------------------------------------------------------
    elif rth=="Year To Date":
        test_date=pendulum.today().date()
        start = test_date.start_of('year')
        pyrfrm1.delete(0,'end')
        pyrfrm1.insert(0, start)

        cr=date.today()
        pyrto1.delete(0,'end')
        pyrto1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tri is not None:
            canvas.create_text(310,100,text=company_tri[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_tri[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_tri[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_pr_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rp_pr_tree.column("# 1", anchor=E, stretch=NO, width=80)
            rp_pr_tree.heading("# 1", text="Invoice No")
            rp_pr_tree.column("# 2", anchor=E, stretch=NO, width=140)
            rp_pr_tree.heading("# 2", text="Invoice Issue Date")
            rp_pr_tree.column("# 3", anchor=E, stretch=NO, width=130)
            rp_pr_tree.heading("# 3", text="Customer")
            rp_pr_tree.column("# 4", anchor=E, stretch=NO, width=90)
            rp_pr_tree.heading("# 4", text="Payment ID")
            rp_pr_tree.column("# 5", anchor=E, stretch=NO, width=110)
            rp_pr_tree.heading("# 5", text="Payment Date")
            rp_pr_tree.column("# 6", anchor=E, stretch=NO, width=80)
            rp_pr_tree.heading("# 6", text="Paid By")
            rp_pr_tree.column("# 7", anchor=E, stretch=NO, width=110)
            rp_pr_tree.heading("# 7", text="Amount Paid")
            rp_pr_tree.insert('', 'end',text="1",values=('','','','','','',''))
            for record in rp_pr_tree.get_children():
                rp_pr_tree.delete(record)
            count=0
            var1=start
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE invodate BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()
            
            
            for i in tre:
            
                rp_pr_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[18], i[34], i[2], i[18],i[9]))
                count += 1

            # total_tri='SELECT SUM(totpaid) from invoice'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            
            # rp_pr_tree.insert('', 'end',text="1",values=('','','','','','',tot_tri))

            window = canvas.create_window(270, 260, anchor="nw", window=rp_pr_tree)
        else:

            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')

            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=80)
            tree.heading("# 1", text="Invoice No")
            tree.column("# 2", anchor=E, stretch=NO, width=140)
            tree.heading("# 2", text="Invoice Issue Date")
            tree.column("# 3", anchor=E, stretch=NO, width=130)
            tree.heading("# 3", text="Customer")
            tree.column("# 4", anchor=E, stretch=NO, width=90)
            tree.heading("# 4", text="Payment ID")
            tree.column("# 5", anchor=E, stretch=NO, width=110)
            tree.heading("# 5", text="Payment Date")
            tree.column("# 6", anchor=E, stretch=NO, width=80)
            tree.heading("# 6", text="Paid By")
            tree.column("# 7", anchor=E, stretch=NO, width=110)
            tree.heading("# 7", text="Amount Paid")
    
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','',''))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)

        canvas.create_text(900,100,text="Payment Report",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+pyrfrm.get()+"      Date To:"+pyrto.get(),fill='black',font=("Helvetica", 8), justify='right')

        canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')

        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
        #===============================================================================================
    elif rth=="Current year":
        test_date=pendulum.today().date()
        start = test_date.start_of('year')
        pyrfrm1.delete(0,'end')
        pyrfrm1.insert(0, start)

        test_date_end=pendulum.today().date()
        end = test_date_end.end_of('year')
        pyrto1.delete(0,'end')
        pyrto1.insert(0, end)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tri is not None:
            canvas.create_text(310,100,text=company_tri[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_tri[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_tri[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_pr_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rp_pr_tree.column("# 1", anchor=E, stretch=NO, width=80)
            rp_pr_tree.heading("# 1", text="Invoice No")
            rp_pr_tree.column("# 2", anchor=E, stretch=NO, width=140)
            rp_pr_tree.heading("# 2", text="Invoice Issue Date")
            rp_pr_tree.column("# 3", anchor=E, stretch=NO, width=130)
            rp_pr_tree.heading("# 3", text="Customer")
            rp_pr_tree.column("# 4", anchor=E, stretch=NO, width=90)
            rp_pr_tree.heading("# 4", text="Payment ID")
            rp_pr_tree.column("# 5", anchor=E, stretch=NO, width=110)
            rp_pr_tree.heading("# 5", text="Payment Date")
            rp_pr_tree.column("# 6", anchor=E, stretch=NO, width=80)
            rp_pr_tree.heading("# 6", text="Paid By")
            rp_pr_tree.column("# 7", anchor=E, stretch=NO, width=110)
            rp_pr_tree.heading("# 7", text="Amount Paid")
            rp_pr_tree.insert('', 'end',text="1",values=('','','','','','',''))
            for record in rp_pr_tree.get_children():
                rp_pr_tree.delete(record)
            count=0
            var1=start
            var2=end
            sql_inv_dt='SELECT * FROM invoice WHERE invodate BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()
            
            
            for i in tre:
            
                rp_pr_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[18], i[34], i[2], i[18],i[9]))
                count += 1

            # total_tri='SELECT SUM(totpaid) from invoice'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            
            # rp_pr_tree.insert('', 'end',text="1",values=('','','','','','',tot_tri))

            window = canvas.create_window(270, 260, anchor="nw", window=rp_pr_tree)
        else:

            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')

            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=80)
            tree.heading("# 1", text="Invoice No")
            tree.column("# 2", anchor=E, stretch=NO, width=140)
            tree.heading("# 2", text="Invoice Issue Date")
            tree.column("# 3", anchor=E, stretch=NO, width=130)
            tree.heading("# 3", text="Customer")
            tree.column("# 4", anchor=E, stretch=NO, width=90)
            tree.heading("# 4", text="Payment ID")
            tree.column("# 5", anchor=E, stretch=NO, width=110)
            tree.heading("# 5", text="Payment Date")
            tree.column("# 6", anchor=E, stretch=NO, width=80)
            tree.heading("# 6", text="Paid By")
            tree.column("# 7", anchor=E, stretch=NO, width=110)
            tree.heading("# 7", text="Amount Paid")
    
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','',''))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)
        canvas.create_text(900,100,text="Payment Report",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+pyrfrm.get()+"      Date To:"+pyrto.get(),fill='black',font=("Helvetica", 8), justify='right')

        canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')

        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvaspor, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvaspor.bind("<Button-3>", my_popup)
    #==============================================================================================================
    elif rth=="Current month":
        given_date = datetime.today().date()
        in_dat = given_date.replace(day=1)
        pyrfrm1.delete(0,'end')
        pyrfrm1.insert(0, in_dat)

        test_date=date.today()
        nxt_mnth=(test_date+relativedelta(day=31))
        pyrto1.delete(0,'end')
        pyrto1.insert(0, nxt_mnth)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tri is not None:
            canvas.create_text(310,100,text=company_tri[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_tri[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_tri[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_pr_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rp_pr_tree.column("# 1", anchor=E, stretch=NO, width=80)
            rp_pr_tree.heading("# 1", text="Invoice No")
            rp_pr_tree.column("# 2", anchor=E, stretch=NO, width=140)
            rp_pr_tree.heading("# 2", text="Invoice Issue Date")
            rp_pr_tree.column("# 3", anchor=E, stretch=NO, width=130)
            rp_pr_tree.heading("# 3", text="Customer")
            rp_pr_tree.column("# 4", anchor=E, stretch=NO, width=90)
            rp_pr_tree.heading("# 4", text="Payment ID")
            rp_pr_tree.column("# 5", anchor=E, stretch=NO, width=110)
            rp_pr_tree.heading("# 5", text="Payment Date")
            rp_pr_tree.column("# 6", anchor=E, stretch=NO, width=80)
            rp_pr_tree.heading("# 6", text="Paid By")
            rp_pr_tree.column("# 7", anchor=E, stretch=NO, width=110)
            rp_pr_tree.heading("# 7", text="Amount Paid")
            rp_pr_tree.insert('', 'end',text="1",values=('','','','','','',''))
            for record in rp_pr_tree.get_children():
                rp_pr_tree.delete(record)
            count=0
            var1=in_dat
            var2=nxt_mnth
            sql_inv_dt='SELECT * FROM invoice WHERE invodate BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()
            
            
            for i in tre:
            
                rp_pr_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[18], i[34], i[2], i[18],i[9]))
                count += 1

            # total_tri='SELECT SUM(totpaid) from invoice'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            
            # rp_pr_tree.insert('', 'end',text="1",values=('','','','','','',tot_tri))

            window = canvas.create_window(270, 260, anchor="nw", window=rp_pr_tree)
        else:

            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')

            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=80)
            tree.heading("# 1", text="Invoice No")
            tree.column("# 2", anchor=E, stretch=NO, width=140)
            tree.heading("# 2", text="Invoice Issue Date")
            tree.column("# 3", anchor=E, stretch=NO, width=130)
            tree.heading("# 3", text="Customer")
            tree.column("# 4", anchor=E, stretch=NO, width=90)
            tree.heading("# 4", text="Payment ID")
            tree.column("# 5", anchor=E, stretch=NO, width=110)
            tree.heading("# 5", text="Payment Date")
            tree.column("# 6", anchor=E, stretch=NO, width=80)
            tree.heading("# 6", text="Paid By")
            tree.column("# 7", anchor=E, stretch=NO, width=110)
            tree.heading("# 7", text="Amount Paid")
    
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','',''))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)

        canvas.create_text(900,100,text="Payment Report",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+pyrfrm.get()+"      Date To:"+pyrto.get(),fill='black',font=("Helvetica", 8), justify='right')

        canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')

        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvaspor, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvaspor.bind("<Button-3>", my_popup)
        #=====================================================================================================
    elif rth=="Current days":
        given_date = date.today()
        pyrfrm1.delete(0,'end')
        pyrfrm1.insert(0,given_date)

        cr=date.today()
        pyrto1.delete(0,'end')
        pyrto1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tri is not None:
            canvas.create_text(310,100,text=company_tri[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_tri[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_tri[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_pr_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rp_pr_tree.column("# 1", anchor=E, stretch=NO, width=80)
            rp_pr_tree.heading("# 1", text="Invoice No")
            rp_pr_tree.column("# 2", anchor=E, stretch=NO, width=140)
            rp_pr_tree.heading("# 2", text="Invoice Issue Date")
            rp_pr_tree.column("# 3", anchor=E, stretch=NO, width=130)
            rp_pr_tree.heading("# 3", text="Customer")
            rp_pr_tree.column("# 4", anchor=E, stretch=NO, width=90)
            rp_pr_tree.heading("# 4", text="Payment ID")
            rp_pr_tree.column("# 5", anchor=E, stretch=NO, width=110)
            rp_pr_tree.heading("# 5", text="Payment Date")
            rp_pr_tree.column("# 6", anchor=E, stretch=NO, width=80)
            rp_pr_tree.heading("# 6", text="Paid By")
            rp_pr_tree.column("# 7", anchor=E, stretch=NO, width=110)
            rp_pr_tree.heading("# 7", text="Amount Paid")
            rp_pr_tree.insert('', 'end',text="1",values=('','','','','','',''))
            for record in rp_pr_tree.get_children():
                rp_pr_tree.delete(record)
            count=0
            var1=given_date
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE invodate BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()
            
            
            for i in tre:
            
                rp_pr_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[18], i[34], i[2], i[18],i[9]))
                count += 1

            # total_tri='SELECT SUM(totpaid) from invoice'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            
            # rp_pr_tree.insert('', 'end',text="1",values=('','','','','','',tot_tri))

            window = canvas.create_window(270, 260, anchor="nw", window=rp_pr_tree)
        else:

            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')

        
            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=80)
            tree.heading("# 1", text="Invoice No")
            tree.column("# 2", anchor=E, stretch=NO, width=140)
            tree.heading("# 2", text="Invoice Issue Date")
            tree.column("# 3", anchor=E, stretch=NO, width=130)
            tree.heading("# 3", text="Customer")
            tree.column("# 4", anchor=E, stretch=NO, width=90)
            tree.heading("# 4", text="Payment ID")
            tree.column("# 5", anchor=E, stretch=NO, width=110)
            tree.heading("# 5", text="Payment Date")
            tree.column("# 6", anchor=E, stretch=NO, width=80)
            tree.heading("# 6", text="Paid By")
            tree.column("# 7", anchor=E, stretch=NO, width=110)
            tree.heading("# 7", text="Amount Paid")
    
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','',''))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)
        canvas.create_text(900,100,text="Payment Report",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+pyrfrm.get()+"      Date To:"+pyrto.get(),fill='black',font=("Helvetica", 8), justify='right')

        canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvaspor, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvaspor.bind("<Button-3>", my_popup)
        #=================================================================================================
    elif rth=="Last 30 days":
        date_filter=date.today()
        in_dat=date_filter-timedelta(days=30)
        pyrfrm1.delete(0,'end')
        pyrfrm1.insert(0, in_dat)

        cr=date.today()
        pyrto1.delete(0,'end')
        pyrto1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tri is not None:
            canvas.create_text(310,100,text=company_tri[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_tri[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_tri[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_pr_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rp_pr_tree.column("# 1", anchor=E, stretch=NO, width=80)
            rp_pr_tree.heading("# 1", text="Invoice No")
            rp_pr_tree.column("# 2", anchor=E, stretch=NO, width=140)
            rp_pr_tree.heading("# 2", text="Invoice Issue Date")
            rp_pr_tree.column("# 3", anchor=E, stretch=NO, width=130)
            rp_pr_tree.heading("# 3", text="Customer")
            rp_pr_tree.column("# 4", anchor=E, stretch=NO, width=90)
            rp_pr_tree.heading("# 4", text="Payment ID")
            rp_pr_tree.column("# 5", anchor=E, stretch=NO, width=110)
            rp_pr_tree.heading("# 5", text="Payment Date")
            rp_pr_tree.column("# 6", anchor=E, stretch=NO, width=80)
            rp_pr_tree.heading("# 6", text="Paid By")
            rp_pr_tree.column("# 7", anchor=E, stretch=NO, width=110)
            rp_pr_tree.heading("# 7", text="Amount Paid")
            rp_pr_tree.insert('', 'end',text="1",values=('','','','','','',''))
            for record in rp_pr_tree.get_children():
                rp_pr_tree.delete(record)
            count=0
            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE invodate BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()
            
            
            for i in tre:
            
                rp_pr_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[18], i[34], i[2], i[18],i[9]))
                count += 1

            # total_tri='SELECT SUM(totpaid) from invoice'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            
            # rp_pr_tree.insert('', 'end',text="1",values=('','','','','','',tot_tri))

            window = canvas.create_window(270, 260, anchor="nw", window=rp_pr_tree)
        else:

            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')

            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=80)
            tree.heading("# 1", text="Invoice No")
            tree.column("# 2", anchor=E, stretch=NO, width=140)
            tree.heading("# 2", text="Invoice Issue Date")
            tree.column("# 3", anchor=E, stretch=NO, width=130)
            tree.heading("# 3", text="Customer")
            tree.column("# 4", anchor=E, stretch=NO, width=90)
            tree.heading("# 4", text="Payment ID")
            tree.column("# 5", anchor=E, stretch=NO, width=110)
            tree.heading("# 5", text="Payment Date")
            tree.column("# 6", anchor=E, stretch=NO, width=80)
            tree.heading("# 6", text="Paid By")
            tree.column("# 7", anchor=E, stretch=NO, width=110)
            tree.heading("# 7", text="Amount Paid")
    
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','',''))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)
        canvas.create_text(900,100,text="Payment Report",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+pyrfrm.get()+"      Date To:"+pyrto.get(),fill='black',font=("Helvetica", 8), justify='right')

        canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')

        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvaspor, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvaspor.bind("<Button-3>", my_popup)
    
    #=====================================================================================================
    elif rth=="Last 60 days":
        date_filter=date.today()
        in_dat=date_filter-timedelta(days=60)
        pyrfrm1.delete(0,'end')
        pyrfrm1.insert(0, in_dat)

        cr=date.today()
        pyrto1.delete(0,'end')
        pyrto1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tri is not None:
            canvas.create_text(310,100,text=company_tri[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_tri[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_tri[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_pr_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rp_pr_tree.column("# 1", anchor=E, stretch=NO, width=80)
            rp_pr_tree.heading("# 1", text="Invoice No")
            rp_pr_tree.column("# 2", anchor=E, stretch=NO, width=140)
            rp_pr_tree.heading("# 2", text="Invoice Issue Date")
            rp_pr_tree.column("# 3", anchor=E, stretch=NO, width=130)
            rp_pr_tree.heading("# 3", text="Customer")
            rp_pr_tree.column("# 4", anchor=E, stretch=NO, width=90)
            rp_pr_tree.heading("# 4", text="Payment ID")
            rp_pr_tree.column("# 5", anchor=E, stretch=NO, width=110)
            rp_pr_tree.heading("# 5", text="Payment Date")
            rp_pr_tree.column("# 6", anchor=E, stretch=NO, width=80)
            rp_pr_tree.heading("# 6", text="Paid By")
            rp_pr_tree.column("# 7", anchor=E, stretch=NO, width=110)
            rp_pr_tree.heading("# 7", text="Amount Paid")
            rp_pr_tree.insert('', 'end',text="1",values=('','','','','','',''))
            for record in rp_pr_tree.get_children():
                rp_pr_tree.delete(record)
            count=0
            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE invodate BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()
            
            
            for i in tre:
            
                rp_pr_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[18], i[34], i[2], i[18],i[9]))
                count += 1

            # total_tri='SELECT SUM(totpaid) from invoice'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            
            # rp_pr_tree.insert('', 'end',text="1",values=('','','','','','',tot_tri))

            window = canvas.create_window(270, 260, anchor="nw", window=rp_pr_tree)
        else:
            
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')

            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=80)
            tree.heading("# 1", text="Invoice No")
            tree.column("# 2", anchor=E, stretch=NO, width=140)
            tree.heading("# 2", text="Invoice Issue Date")
            tree.column("# 3", anchor=E, stretch=NO, width=130)
            tree.heading("# 3", text="Customer")
            tree.column("# 4", anchor=E, stretch=NO, width=90)
            tree.heading("# 4", text="Payment ID")
            tree.column("# 5", anchor=E, stretch=NO, width=110)
            tree.heading("# 5", text="Payment Date")
            tree.column("# 6", anchor=E, stretch=NO, width=80)
            tree.heading("# 6", text="Paid By")
            tree.column("# 7", anchor=E, stretch=NO, width=110)
            tree.heading("# 7", text="Amount Paid")
    
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','',''))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)
        canvas.create_text(900,100,text="Payment Report",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+pyrfrm.get()+"      Date To:"+pyrto.get(),fill='black',font=("Helvetica", 8), justify='right')

        canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
            
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvaspor, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvaspor.bind("<Button-3>", my_popup)
   

#================================================================================================================
    elif rth=="Last 90 days":
        date_filter=date.today()
        in_dat=date_filter-timedelta(days=90)
        pyrfrm1.delete(0,'end')
        pyrfrm1.insert(0, in_dat)

        cr=date.today()
        pyrto1.delete(0,'end')
        pyrto1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tri is not None:
            canvas.create_text(310,100,text=company_tri[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_tri[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_tri[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_pr_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rp_pr_tree.column("# 1", anchor=E, stretch=NO, width=80)
            rp_pr_tree.heading("# 1", text="Invoice No")
            rp_pr_tree.column("# 2", anchor=E, stretch=NO, width=140)
            rp_pr_tree.heading("# 2", text="Invoice Issue Date")
            rp_pr_tree.column("# 3", anchor=E, stretch=NO, width=130)
            rp_pr_tree.heading("# 3", text="Customer")
            rp_pr_tree.column("# 4", anchor=E, stretch=NO, width=90)
            rp_pr_tree.heading("# 4", text="Payment ID")
            rp_pr_tree.column("# 5", anchor=E, stretch=NO, width=110)
            rp_pr_tree.heading("# 5", text="Payment Date")
            rp_pr_tree.column("# 6", anchor=E, stretch=NO, width=80)
            rp_pr_tree.heading("# 6", text="Paid By")
            rp_pr_tree.column("# 7", anchor=E, stretch=NO, width=110)
            rp_pr_tree.heading("# 7", text="Amount Paid")
            rp_pr_tree.insert('', 'end',text="1",values=('','','','','','',''))
            for record in rp_pr_tree.get_children():
                rp_pr_tree.delete(record)
            count=0
            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE invodate BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()
            
            
            for i in tre:
            
                rp_pr_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[18], i[34], i[2], i[18],i[9]))
                count += 1

            # total_tri='SELECT SUM(totpaid) from invoice'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            
            # rp_pr_tree.insert('', 'end',text="1",values=('','','','','','',tot_tri))

            window = canvas.create_window(270, 260, anchor="nw", window=rp_pr_tree)
        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')

            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=80)
            tree.heading("# 1", text="Invoice No")
            tree.column("# 2", anchor=E, stretch=NO, width=140)
            tree.heading("# 2", text="Invoice Issue Date")
            tree.column("# 3", anchor=E, stretch=NO, width=130)
            tree.heading("# 3", text="Customer")
            tree.column("# 4", anchor=E, stretch=NO, width=90)
            tree.heading("# 4", text="Payment ID")
            tree.column("# 5", anchor=E, stretch=NO, width=110)
            tree.heading("# 5", text="Payment Date")
            tree.column("# 6", anchor=E, stretch=NO, width=80)
            tree.heading("# 6", text="Paid By")
            tree.column("# 7", anchor=E, stretch=NO, width=110)
            tree.heading("# 7", text="Amount Paid")
    
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','',''))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)

        canvas.create_text(900,100,text="Payment Report",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+pyrfrm.get()+"      Date To:"+pyrto.get(),fill='black',font=("Helvetica", 8), justify='right')

        canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvaspor, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvaspor.bind("<Button-3>", my_popup)
        #====================================================================================================
    elif rth=="Previous month":
        last_day_of_prev_month=date.today().replace(day=1)- timedelta(days=1)
        in_dat=date.today().replace(day=1)-timedelta(last_day_of_prev_month.day)
        pyrfrm1.delete(0,'end')
        pyrfrm1.insert(0, in_dat)

        cr=date.today()
        pyrto1.delete(0,'end')
        pyrto1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tri is not None:
            canvas.create_text(310,100,text=company_tri[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_tri[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_tri[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_pr_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rp_pr_tree.column("# 1", anchor=E, stretch=NO, width=80)
            rp_pr_tree.heading("# 1", text="Invoice No")
            rp_pr_tree.column("# 2", anchor=E, stretch=NO, width=140)
            rp_pr_tree.heading("# 2", text="Invoice Issue Date")
            rp_pr_tree.column("# 3", anchor=E, stretch=NO, width=130)
            rp_pr_tree.heading("# 3", text="Customer")
            rp_pr_tree.column("# 4", anchor=E, stretch=NO, width=90)
            rp_pr_tree.heading("# 4", text="Payment ID")
            rp_pr_tree.column("# 5", anchor=E, stretch=NO, width=110)
            rp_pr_tree.heading("# 5", text="Payment Date")
            rp_pr_tree.column("# 6", anchor=E, stretch=NO, width=80)
            rp_pr_tree.heading("# 6", text="Paid By")
            rp_pr_tree.column("# 7", anchor=E, stretch=NO, width=110)
            rp_pr_tree.heading("# 7", text="Amount Paid")
            rp_pr_tree.insert('', 'end',text="1",values=('','','','','','',''))
            for record in rp_pr_tree.get_children():
                rp_pr_tree.delete(record)
            count=0
            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE invodate BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()
            
            
            for i in tre:
            
                rp_pr_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[18], i[34], i[2], i[18],i[9]))
                count += 1

            # total_tri='SELECT SUM(totpaid) from invoice'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            
            # rp_pr_tree.insert('', 'end',text="1",values=('','','','','','',tot_tri))

            window = canvas.create_window(270, 260, anchor="nw", window=rp_pr_tree)
        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')

            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=80)
            tree.heading("# 1", text="Invoice No")
            tree.column("# 2", anchor=E, stretch=NO, width=140)
            tree.heading("# 2", text="Invoice Issue Date")
            tree.column("# 3", anchor=E, stretch=NO, width=130)
            tree.heading("# 3", text="Customer")
            tree.column("# 4", anchor=E, stretch=NO, width=90)
            tree.heading("# 4", text="Payment ID")
            tree.column("# 5", anchor=E, stretch=NO, width=110)
            tree.heading("# 5", text="Payment Date")
            tree.column("# 6", anchor=E, stretch=NO, width=80)
            tree.heading("# 6", text="Paid By")
            tree.column("# 7", anchor=E, stretch=NO, width=110)
            tree.heading("# 7", text="Amount Paid")
    
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','',''))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)
        canvas.create_text(900,100,text="Payment Report",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+pyrfrm.get()+"      Date To:"+pyrto.get(),fill='black',font=("Helvetica", 8), justify='right')

        canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')

        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
        #===========================================================================================================
    elif rth=="Previous year":
        last_year = (datetime.now()-relativedelta(years=1)).strftime("%Y-%m-%d")
        pyrfrm1.delete(0,'end')
        pyrfrm1.insert(0, last_year)

        cr=date.today()
        pyrto1.delete(0,'end')
        pyrto1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tri is not None:
            canvas.create_text(310,100,text=company_tri[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_tri[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_tri[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_pr_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rp_pr_tree.column("# 1", anchor=E, stretch=NO, width=80)
            rp_pr_tree.heading("# 1", text="Invoice No")
            rp_pr_tree.column("# 2", anchor=E, stretch=NO, width=140)
            rp_pr_tree.heading("# 2", text="Invoice Issue Date")
            rp_pr_tree.column("# 3", anchor=E, stretch=NO, width=130)
            rp_pr_tree.heading("# 3", text="Customer")
            rp_pr_tree.column("# 4", anchor=E, stretch=NO, width=90)
            rp_pr_tree.heading("# 4", text="Payment ID")
            rp_pr_tree.column("# 5", anchor=E, stretch=NO, width=110)
            rp_pr_tree.heading("# 5", text="Payment Date")
            rp_pr_tree.column("# 6", anchor=E, stretch=NO, width=80)
            rp_pr_tree.heading("# 6", text="Paid By")
            rp_pr_tree.column("# 7", anchor=E, stretch=NO, width=110)
            rp_pr_tree.heading("# 7", text="Amount Paid")
            rp_pr_tree.insert('', 'end',text="1",values=('','','','','','',''))
            for record in rp_pr_tree.get_children():
                rp_pr_tree.delete(record)
            count=0
            var1=last_year
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE invodate BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()
            
            
            for i in tre:
            
                rp_pr_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[18], i[34], i[2], i[18],i[9]))
                count += 1

            # total_tri='SELECT SUM(totpaid) from invoice'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            
            # rp_pr_tree.insert('', 'end',text="1",values=('','','','','','',tot_tri))

            window = canvas.create_window(270, 260, anchor="nw", window=rp_pr_tree)
        else:
        
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')

            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=80)
            tree.heading("# 1", text="Invoice No")
            tree.column("# 2", anchor=E, stretch=NO, width=140)
            tree.heading("# 2", text="Invoice Issue Date")
            tree.column("# 3", anchor=E, stretch=NO, width=130)
            tree.heading("# 3", text="Customer")
            tree.column("# 4", anchor=E, stretch=NO, width=90)
            tree.heading("# 4", text="Payment ID")
            tree.column("# 5", anchor=E, stretch=NO, width=110)
            tree.heading("# 5", text="Payment Date")
            tree.column("# 6", anchor=E, stretch=NO, width=80)
            tree.heading("# 6", text="Paid By")
            tree.column("# 7", anchor=E, stretch=NO, width=110)
            tree.heading("# 7", text="Amount Paid")
    
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','',''))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)
        canvas.create_text(900,100,text="Payment Report",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+pyrfrm.get()+"      Date To:"+pyrto.get(),fill='black',font=("Helvetica", 8), justify='right')

        canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')

        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvaspor, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvaspor.bind("<Button-3>", my_popup)
    # ------------------------------
    elif rth=="Custom Range":
        ltr=pyrfrm1.get_date()
        ltr1=pyrto1.get_date()
        cr1=date.today()
        pyrfrm1.delete(0,'end')
        pyrfrm1.insert(0, cr1)

        cr=date.today()
        pyrto1.delete(0,'end')
        pyrto1.insert(0, cr)

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tri is not None:
            canvas.create_text(310,100,text=company_tri[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_tri[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_tri[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_pr_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rp_pr_tree.column("# 1", anchor=E, stretch=NO, width=80)
            rp_pr_tree.heading("# 1", text="Invoice No")
            rp_pr_tree.column("# 2", anchor=E, stretch=NO, width=140)
            rp_pr_tree.heading("# 2", text="Invoice Issue Date")
            rp_pr_tree.column("# 3", anchor=E, stretch=NO, width=130)
            rp_pr_tree.heading("# 3", text="Customer")
            rp_pr_tree.column("# 4", anchor=E, stretch=NO, width=90)
            rp_pr_tree.heading("# 4", text="Payment ID")
            rp_pr_tree.column("# 5", anchor=E, stretch=NO, width=110)
            rp_pr_tree.heading("# 5", text="Payment Date")
            rp_pr_tree.column("# 6", anchor=E, stretch=NO, width=80)
            rp_pr_tree.heading("# 6", text="Paid By")
            rp_pr_tree.column("# 7", anchor=E, stretch=NO, width=110)
            rp_pr_tree.heading("# 7", text="Amount Paid")
            rp_pr_tree.insert('', 'end',text="1",values=('','','','','','',''))
            for record in rp_pr_tree.get_children():
                rp_pr_tree.delete(record)
            count=0
            var1=ltr
            var2=ltr1
            sql_inv_dt='SELECT * FROM invoice WHERE invodate BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()
            
            
            for i in tre:
            
                rp_pr_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[18], i[34], i[2], i[18],i[9]))
                count += 1

            # total_tri='SELECT SUM(totpaid) from invoice'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            
            # rp_pr_tree.insert('', 'end',text="1",values=('','','','','','',tot_tri))

            window = canvas.create_window(270, 260, anchor="nw", window=rp_pr_tree)
        else:
        
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')
            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=80)
            tree.heading("# 1", text="Invoice No")
            tree.column("# 2", anchor=E, stretch=NO, width=140)
            tree.heading("# 2", text="Invoice Issue Date")
            tree.column("# 3", anchor=E, stretch=NO, width=130)
            tree.heading("# 3", text="Customer")
            tree.column("# 4", anchor=E, stretch=NO, width=90)
            tree.heading("# 4", text="Payment ID")
            tree.column("# 5", anchor=E, stretch=NO, width=110)
            tree.heading("# 5", text="Payment Date")
            tree.column("# 6", anchor=E, stretch=NO, width=80)
            tree.heading("# 6", text="Paid By")
            tree.column("# 7", anchor=E, stretch=NO, width=110)
            tree.heading("# 7", text="Amount Paid")
    
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','',''))
            window = canvas.create_window(290, 260, anchor="nw", window=tree)
        
        canvas.create_text(900,100,text="Payment Report",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(875,145,text="Date From:"+pyrfrm.get()+"      Date To:"+pyrto.get(),fill='black',font=("Helvetica", 8), justify='right')

        canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')

        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)

        #============================================================================================
    else:
        pass

#Recurring Invoice----------------------------------------------
def category_rir():
        tro_company = "SELECT * from company"
        fbcursor.execute(tro_company)
        company_tro= fbcursor.fetchone()
        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tro is not None:
            canvas.create_text(310,100,text=company_tro[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company_tro[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company_tro[4],fill='black',font=("Helvetica", 8),     justify='left')
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_rir_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_rir_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rp_rir_tree.heading("# 1", text="Invoice No")
            rp_rir_tree.column("# 2", anchor=E, stretch=NO, width=130)
            rp_rir_tree.heading("# 2", text="Customer")
            rp_rir_tree.column("# 3", anchor=E, stretch=NO, width=100)
            rp_rir_tree.heading("# 3", text="Next Invoice")
            rp_rir_tree.column("# 4", anchor=E, stretch=NO, width=140)
            rp_rir_tree.heading("# 4", text="Recurring Interval")
            rp_rir_tree.column("# 5", anchor=E, stretch=NO, width=115)
            rp_rir_tree.heading("# 5", text="Stop After")
            rp_rir_tree.column("# 6", anchor=E, stretch=NO, width=115)
            rp_rir_tree.heading("# 6", text="Invoice Total")
            # Insert the data in Treeview widget
            rp_rir_tree.insert('', 'end',text="1",values=('','','','','','Total'))
            # Insert the data in Treeview widget
            for record in rp_rir_tree.get_children():
                rp_rir_tree.delete(record)
            count=0
            fbcursor.execute('SELECT * from invoice')
            for i in fbcursor:
                rp_rir_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[18], i[26], i[24], i[27], i[8]))
                count += 1

            total_tri='SELECT SUM(invoicetot) from invoice'
            fbcursor.execute(total_tri)
            tot_ird= fbcursor.fetchone()
            
            
            rp_rir_tree.insert('', 'end',text="1",values=('','','','','','Total'))

            rp_rir_tree.insert('', 'end',text="1",values=('','','-End List-','','Total',tot_ird))
            
            window = canvas.create_window(270, 260, anchor="nw", window=rp_rir_tree)

            
        else:
                
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')


            canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=80)
            tree.heading("# 1", text="Invoice No")
            tree.column("# 2", anchor=E, stretch=NO, width=130)
            tree.heading("# 2", text="Customer")
            tree.column("# 3", anchor=E, stretch=NO, width=100)
            tree.heading("# 3", text="Next Invoice")
            tree.column("# 4", anchor=E, stretch=NO, width=140)
            tree.heading("# 4", text="Recurring Interval")
            tree.column("# 5", anchor=E, stretch=NO, width=115)
            tree.heading("# 5", text="Stop After")
            tree.column("# 6", anchor=E, stretch=NO, width=115)
            tree.heading("# 6", text="Invoice Total")
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)
        canvas.create_text(865,100,text="Recurring Invoice Report",fill='black',font=("Helvetica", 16), justify='right')

        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)

#-------------------------------------------------past due invoice------------------------------------------
def category_pdi():
        sql_company = "SELECT * from company"
        fbcursor.execute(sql_company)
        company= fbcursor.fetchone()

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company is not None:
            canvas.create_text(310,100,text=company[1],fill='black',font=("Helvetica", 12), justify='left')
            canvas.create_text(320,165,text=company[2],fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(365,228,text="Sales tax reg No:"+company[4],fill='black',font=("Helvetica", 8), justify='left')

            # Add a Treeview widge
             # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                
            rp_pdi_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            rp_pdi_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_pdi_tree.heading("# 1", text="No")
            rp_pdi_tree.column("# 2", anchor=E, stretch=NO, width=80)
            rp_pdi_tree.heading("# 2", text="Date")
            rp_pdi_tree.column("# 3", anchor=E, stretch=NO, width=80)
            rp_pdi_tree.heading("# 3", text="Due Date")
            rp_pdi_tree.column("# 4", anchor=E, stretch=NO, width=100)
            rp_pdi_tree.heading("# 4", text="Terms")
            rp_pdi_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_pdi_tree.heading("# 5", text="Status")
            rp_pdi_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_pdi_tree.heading("# 6", text="Invoice Total")
            rp_pdi_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rp_pdi_tree.heading("# 7", text="Invoice Paid")
            rp_pdi_tree.column("# 8", anchor=E, stretch=NO, width=100)
            rp_pdi_tree.heading("# 8", text="Balance")
            # Insert the data in Treeview widget
            
            rp_pdi_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total','Total Paid','Balance'))
            
            for record in rp_pdi_tree.get_children():
                rp_pdi_tree.delete(record)
            count=0
            fbcursor.execute('SELECT * FROM invoice WHERE duedate>invodate')

            for i in fbcursor:
                rp_pdi_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[35], i[4], i[8], i[9],i[10]))
                count += 1

            total_tri='SELECT SUM(invoicetot) from invoice'
            fbcursor.execute(total_tri)
            tot_ird= fbcursor.fetchone()
            

            total_tax1_tri='SELECT SUM(totpaid) from invoice'
            fbcursor.execute(total_tax1_tri)
            tot_tax1_ird= fbcursor.fetchone()

            total_tax2_tri='SELECT SUM(balance) from invoice'
            fbcursor.execute(total_tax2_tri)
            tot_tax2_ird= fbcursor.fetchone()
            

            rp_pdi_tree.insert('', 'end',text="1",values=('','','','','',tot_ird,tot_tax1_ird,tot_tax2_ird))
            window = canvas.create_window(270, 260, anchor="nw", window=rp_pdi_tree)
        else:
            
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')
            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')
            canvas.create_text(930,145,text="Invoice Category: All",fill='black',font=("Helvetica", 8), justify='right')
            canvas.create_text(330,228,text="Sales tax reg No.",fill='black',font=("Helvetica", 8), justify='left')
            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6","c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=80)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=60)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=80)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=100)
            tree.heading("# 4", text="Terms")
            tree.column("# 5", anchor=E, stretch=NO, width=110)
            tree.heading("# 5", text="Overdue Days")
            tree.column("# 6", anchor=E, stretch=NO, width=100)
            tree.heading("# 6", text="Invoice Total")
            tree.column("# 7", anchor=E, stretch=NO, width=100)
            tree.heading("# 7", text="Total Paid")
            tree.column("# 8", anchor=E, stretch=NO, width=100)
            tree.heading("# 8", text="Balance")
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','Total', '', ''))

            window = canvas.create_window(270, 260, anchor="nw", window=tree)
        canvas.create_text(865,100,text="Past Due Invoice Report",fill='black',font=("Helvetica", 16), justify='right')
        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
#-----------------------Customer list --------------------------------------
def category_cl():
  # firtst filter-----------------------------------Month to date
    rth=clfilter.get()
    # #for company details
    tro_company = "SELECT * from company"
    fbcursor.execute(tro_company)
    company_tro= fbcursor.fetchone()

    global canvas
    

    if rth=="All Customers ":

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(120,25,1200,1430,  outline='yellow',fill='white')
        if company_tro is not None:
            canvas.create_text(190,100,text=company_tro[1],fill='black',font=("Helvetica", 12), justify='left')            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_cl_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_cl_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rp_cl_tree.heading("# 1", text="Customer Id")
            rp_cl_tree.column("# 2", anchor=E, stretch=NO, width=170)
            rp_cl_tree.heading("# 2", text="Category")
            rp_cl_tree.column("# 3", anchor=E, stretch=NO, width=250)
            rp_cl_tree.heading("# 3", text="Customer Businnes Name")
            rp_cl_tree.column("# 4", anchor=E, stretch=NO, width=180)
            rp_cl_tree.heading("# 4", text="Customer Person")
            rp_cl_tree.column("# 5", anchor=E, stretch=NO, width=140)
            rp_cl_tree.heading("# 5", text="Tel")
            rp_cl_tree.column("# 6", anchor=E, stretch=NO, width=130)
            rp_cl_tree.heading("# 6", text="Fax")
            # Insert the data in Treeview widget
            rp_cl_tree.insert('', 'end',text="1",values=('','','','','',''))

            # Insert the data in Treeview widget
            for record in rp_cl_tree.get_children():
                rp_cl_tree.delete(record)
            count=0
            fbcursor.execute('SELECT * from customer')
            for i in fbcursor:
                rp_cl_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[2], i[4], i[8], i[10], i[11]))
                count += 1
            window = canvas.create_window(170, 150, anchor="nw",  window=rp_cl_tree)
        
        
        else:
            canvas.create_text(240,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')
                
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=100)
            tree.heading("# 1", text="Customer Id")
            tree.column("# 2", anchor=E, stretch=NO, width=170)
            tree.heading("# 2", text="Category")
            tree.column("# 3", anchor=E, stretch=NO, width=250)
            tree.heading("# 3", text="Customer Businnes Name")
            tree.column("# 4", anchor=E, stretch=NO, width=180)
            tree.heading("# 4", text="Customer Person")
            tree.column("# 5", anchor=E, stretch=NO, width=130)
            tree.heading("# 5", text="Tel")
            tree.column("# 6", anchor=E, stretch=NO, width=130)
            tree.heading("# 6", text="Fax")
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','',''))

            window = canvas.create_window(170, 150, anchor="nw", window=tree)
        canvas.create_text(1070,100,text="Customers List",fill='black',font=("Helvetica", 16), justify='right') 

        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)

    #--------------------------------------------------------------------------------------------------------------
    elif rth=="Default":
        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(120,25,1200,1430,  outline='yellow',fill='white')
        if company_tro is not None:
            canvas.create_text(190,100,text=company_tro[1],fill='black',font=("Helvetica", 12), justify='left')            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_cl_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_cl_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rp_cl_tree.heading("# 1", text="Customer Id")
            rp_cl_tree.column("# 2", anchor=E, stretch=NO, width=170)
            rp_cl_tree.heading("# 2", text="Category")
            rp_cl_tree.column("# 3", anchor=E, stretch=NO, width=250)
            rp_cl_tree.heading("# 3", text="Customer Businnes Name")
            rp_cl_tree.column("# 4", anchor=E, stretch=NO, width=180)
            rp_cl_tree.heading("# 4", text="Customer Person")
            rp_cl_tree.column("# 5", anchor=E, stretch=NO, width=140)
            rp_cl_tree.heading("# 5", text="Tel")
            rp_cl_tree.column("# 6", anchor=E, stretch=NO, width=130)
            rp_cl_tree.heading("# 6", text="Fax")
            # Insert the data in Treeview widget
            rp_cl_tree.insert('', 'end',text="1",values=('','','','','',''))

            # Insert the data in Treeview widget
            for record in rp_cl_tree.get_children():
                rp_cl_tree.delete(record)
            count=0
            fbcursor.execute('SELECT * from customer WHERE category="Default"')
            if fbcursor is not None:
                for i in fbcursor:
                    rp_cl_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[2], i[4], i[8], i[10], i[11]))
                    count += 1
            else:
                rp_cl_tree.insert('', 'end',text="1",values=('','','','-No Data-','',''))


            window = canvas.create_window(170, 150, anchor="nw",  window=rp_cl_tree)
        
        
        else:
            canvas.create_text(240,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=100)
            tree.heading("# 1", text="Customer Id")
            tree.column("# 2", anchor=E, stretch=NO, width=170)
            tree.heading("# 2", text="Category")
            tree.column("# 3", anchor=E, stretch=NO, width=250)
            tree.heading("# 3", text="Customer Businnes Name")
            tree.column("# 4", anchor=E, stretch=NO, width=180)
            tree.heading("# 4", text="Customer Person")
            tree.column("# 5", anchor=E, stretch=NO, width=130)
            tree.heading("# 5", text="Tel")
            tree.column("# 6", anchor=E, stretch=NO, width=130)
            tree.heading("# 6", text="Fax")
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','',''))

            window = canvas.create_window(170, 150, anchor="nw", window=tree)
        canvas.create_text(1070,100,text="Customers List",fill='black',font=("Helvetica", 16), justify='right') 

        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)

#-----------------------Customer list detailed--------------------------
def category_cld():
  # firtst filter-----------------------------------Month to date
    rth=cldfilter.get()
    sql_company = "SELECT * from company"
    fbcursor.execute(sql_company)
    company= fbcursor.fetchone()

    global canvas

    if rth=="All Customers ":
        # #for company details
        tro_company = "SELECT * from company"
        fbcursor.execute(tro_company)
        company_tro= fbcursor.fetchone()
        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company is not None:
            canvas.create_text(320,100,text=company[1],fill='black',font=("Helvetica", 12), justify='left')            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_cld_tree=ttk.Treeview(canvas, column=("c1", "c2"), show='headings', height=55, style='mystyle.Treeview')
            rp_cld_tree.column("# 1", anchor="sw", stretch=NO, width=345)
            rp_cld_tree.heading("# 1", text="")
            rp_cld_tree.column("# 2", anchor="sw", stretch=NO, width=345)
            rp_cld_tree.heading("# 2", text="")
            
            # Insert the data in Treeview widget
            rp_cld_tree.insert('', 'end',text="1",values=('',''))

            # Insert the data in Treeview widget
            for record in rp_cld_tree.get_children():
                rp_cld_tree.delete(record)
            count=0
            fbcursor.execute('SELECT * from customer')
            for i in fbcursor:
                rp_cld_tree.insert("","end", iid=i, text='hello', values=("Billing Information:                      Customer Id:"+str(i[0]),"Shipping Information:                      Tax exempt No.:"+str(i[17])))

                rp_cld_tree.insert("","end", values=('Name: '+str(i[4]),'Name:'+str(i[6])))

                rp_cld_tree.insert("","end", values=('Address: '+str(i[5]),'Address:'+str(i[7])))
                rp_cld_tree.insert("","end", values=('Contact Person: '+str(i[8]),'Contact Person:'+str(i[13])))
                rp_cld_tree.insert("","end", values=('Tel:'+str(i[10])+'          Fax: '+str(i[11]),'Tel:'+str(i[15])+'          Fax: '+str(i[16])))
                rp_cld_tree.insert("","end", values=('Email: '+str(i[9]),'Email: '+str(i[14])))
                rp_cld_tree.insert('', 'end',text="1",values=('____________________________________________________________','____________________________________________________________'))
                
                count += 1
            window = canvas.create_window(290, 130, anchor="nw", window=rp_cld_tree)
        
        
        else:

            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')
            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=345)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=345)
            tree.heading("# 2", text="Date")
            
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('',''))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)
        canvas.create_text(900,100,text="Invoice Report",fill='black',font=("Helvetica", 16), justify='right') 

        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)

    #--------------------------------------------------------------------------------------------------------------
    elif rth=="Default":
        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company is not None:
            canvas.create_text(320,100,text=company[1],fill='black',font=("Helvetica", 12), justify='left')            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_cld_tree=ttk.Treeview(canvas, column=("c1", "c2"), show='headings', height=55, style='mystyle.Treeview')
            rp_cld_tree.column("# 1", anchor="sw", stretch=NO, width=345)
            rp_cld_tree.heading("# 1", text="")
            rp_cld_tree.column("# 2", anchor="sw", stretch=NO, width=345)
            rp_cld_tree.heading("# 2", text="")
            
            # Insert the data in Treeview widget
            rp_cld_tree.insert('', 'end',text="1",values=('',''))

            # Insert the data in Treeview widget
            for record in rp_cld_tree.get_children():
                rp_cld_tree.delete(record)
            count=0
            fbcursor.execute('SELECT * from customer WHERE category="Default"')
            for i in fbcursor:
                rp_cld_tree.insert("","end", iid=i, text='hello', values=("Billing Information:                      Customer Id:"+str(i[0]),"Shipping Information:                      Tax exempt No.:"+str(i[17])))

                rp_cld_tree.insert("","end", values=('Name: '+str(i[4]),'Name:'+str(i[6])))

                rp_cld_tree.insert("","end", values=('Address: '+str(i[5]),'Address:'+str(i[7])))
                rp_cld_tree.insert("","end", values=('Contact Person: '+str(i[8]),'Contact Person:'+str(i[13])))
                rp_cld_tree.insert("","end", values=('Tel:'+str(i[10])+'          Fax: '+str(i[11]),'Tel:'+str(i[15])+'          Fax: '+str(i[16])))
                rp_cld_tree.insert("","end", values=('Email: '+str(i[9]),'Email: '+str(i[14])))
                rp_cld_tree.insert('', 'end',text="1",values=('____________________________________________________________','____________________________________________________________'))
                
                count += 1
            window = canvas.create_window(290, 130, anchor="nw", window=rp_cld_tree)
        
        
        else:

            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            

            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=50)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=100)
            tree.heading("# 4", text="Terms")
            tree.column("# 5", anchor=E, stretch=NO, width=100)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=100)
            tree.heading("# 6", text="Invoice Total")
            tree.column("# 7", anchor=E, stretch=NO, width=100)
            tree.heading("# 7", text="Invoice Paid")
            tree.column("# 8", anchor=E, stretch=NO, width=100)
            tree.heading("# 8", text="Balance")
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','Invoice Total','Total Paid','Balance'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)
        canvas.create_text(900,100,text="Invoice Report",fill='black',font=("Helvetica", 16), justify='right')
        canvas.create_text(320,100,text=company[1],fill='black',font=("Helvetica", 12), justify='left')            


        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)

#products/Service list--------------------------------------------------------------------------
def category_psl():
  # firtst filter-----------------------------------Month to date
    rth=pslfilter.get()
    tro_company = "SELECT * from company"
    fbcursor.execute(tro_company)
    company_tro= fbcursor.fetchone()
    global canvas
    if rth=="All product and Services ":

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(120,25,1200,1430,  outline='yellow',fill='white')
        if company_tro is not None:
            canvas.create_text(190,100,text=company_tro[1],fill='black',font=("Helvetica", 12), justify='left')            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_psl_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            rp_psl_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rp_psl_tree.heading("# 1", text="Product ID")
            rp_psl_tree.column("# 2", anchor=E, stretch=NO, width=120)
            rp_psl_tree.heading("# 2", text="Category")
            rp_psl_tree.column("# 3", anchor=E, stretch=NO, width=180)
            rp_psl_tree.heading("# 3", text="Product/ Service Name")
            rp_psl_tree.column("# 4", anchor=E, stretch=NO, width=130)
            rp_psl_tree.heading("# 4", text="Description")
            rp_psl_tree.column("# 5", anchor=E, stretch=NO, width=150)
            rp_psl_tree.heading("# 5", text="Warehouse")
            rp_psl_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_psl_tree.heading("# 6", text="Stock")
            rp_psl_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rp_psl_tree.heading("# 7", text="Cost")
            rp_psl_tree.column("# 8", anchor=E, stretch=NO, width=100)
            rp_psl_tree.heading("# 8", text="Price")
            # Insert the data in Treeview widget
            rp_psl_tree.insert('', 'end',text="1",values=('','','','','','','',''))


            # Insert the data in Treeview widget
            for record in rp_psl_tree.get_children():
                rp_psl_tree.delete(record)
            count=0
            fbcursor.execute('SELECT * from productservice')
            for i in fbcursor:
                rp_psl_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[3], i[4], i[5], i[15], i[13], i[9], i[11]))
                count += 1
            window = canvas.create_window(170, 150, anchor="nw",  window=rp_psl_tree)
        
        
        else:
            canvas.create_text(240,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=100)
            tree.heading("# 1", text="Product ID")
            tree.column("# 2", anchor=E, stretch=NO, width=120)
            tree.heading("# 2", text="Category")
            tree.column("# 3", anchor=E, stretch=NO, width=180)
            tree.heading("# 3", text="Product/ Service Name")
            tree.column("# 4", anchor=E, stretch=NO, width=130)
            tree.heading("# 4", text="Description")
            tree.column("# 5", anchor=E, stretch=NO, width=150)
            tree.heading("# 5", text="Warehouse")
            tree.column("# 6", anchor=E, stretch=NO, width=100)
            tree.heading("# 6", text="Stock")
            tree.column("# 7", anchor=E, stretch=NO, width=100)
            tree.heading("# 7", text="Cost")
            tree.column("# 8", anchor=E, stretch=NO, width=100)
            tree.heading("# 8", text="Price")
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','','',''))

            window = canvas.create_window(170, 150, anchor="nw", window=tree)
        canvas.create_text(1000,100,text="Products And Services Report",fill='black',font=("Helvetica", 16), justify='right') 

        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)

    #--------------------------------------------------------------------------------------------------------------
    elif rth=="All products":
        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(120,25,1200,1430,  outline='yellow',fill='white')
        if company_tro is not None:
            canvas.create_text(190,100,text=company_tro[1],fill='black',font=("Helvetica", 12), justify='left')            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_psl_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            rp_psl_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rp_psl_tree.heading("# 1", text="Product ID")
            rp_psl_tree.column("# 2", anchor=E, stretch=NO, width=120)
            rp_psl_tree.heading("# 2", text="Category")
            rp_psl_tree.column("# 3", anchor=E, stretch=NO, width=180)
            rp_psl_tree.heading("# 3", text="Product/ Service Name")
            rp_psl_tree.column("# 4", anchor=E, stretch=NO, width=130)
            rp_psl_tree.heading("# 4", text="Description")
            rp_psl_tree.column("# 5", anchor=E, stretch=NO, width=150)
            rp_psl_tree.heading("# 5", text="Warehouse")
            rp_psl_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_psl_tree.heading("# 6", text="Stock")
            rp_psl_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rp_psl_tree.heading("# 7", text="Cost")
            rp_psl_tree.column("# 8", anchor=E, stretch=NO, width=100)
            rp_psl_tree.heading("# 8", text="Price")
            # Insert the data in Treeview widget
            rp_psl_tree.insert('', 'end',text="1",values=('','','','','','','',''))


            # Insert the data in Treeview widget
            for record in rp_psl_tree.get_children():
                rp_psl_tree.delete(record)
            count=0
            fbcursor.execute('SELECT * from productservice WHERE category="products" ')
            for i in fbcursor:
                rp_psl_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[3], i[4], i[5], i[15], i[13], i[9], i[11]))
                count += 1
            window = canvas.create_window(170, 150, anchor="nw",  window=rp_psl_tree)
        
        
        else:

            canvas.create_text(240,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=100)
            tree.heading("# 1", text="Product ID")
            tree.column("# 2", anchor=E, stretch=NO, width=120)
            tree.heading("# 2", text="Category")
            tree.column("# 3", anchor=E, stretch=NO, width=180)
            tree.heading("# 3", text="Product/ Service Name")
            tree.column("# 4", anchor=E, stretch=NO, width=130)
            tree.heading("# 4", text="Description")
            tree.column("# 5", anchor=E, stretch=NO, width=150)
            tree.heading("# 5", text="Warehouse")
            tree.column("# 6", anchor=E, stretch=NO, width=100)
            tree.heading("# 6", text="Stock")
            tree.column("# 7", anchor=E, stretch=NO, width=100)
            tree.heading("# 7", text="Cost")
            tree.column("# 8", anchor=E, stretch=NO, width=100)
            tree.heading("# 8", text="Price")
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','','',''))

            window = canvas.create_window(170, 150, anchor="nw", window=tree)
        canvas.create_text(1000,100,text="Products And Services Report",fill='black',font=("Helvetica", 16), justify='right') 
            
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
        #===============================================================================================
    elif rth=="All Service":
        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(120,25,1200,1430,  outline='yellow',fill='white')
        if company_tro is not None:
            canvas.create_text(190,100,text=company_tro[1],fill='black',font=("Helvetica", 12), justify='left')            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_psl_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            rp_psl_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rp_psl_tree.heading("# 1", text="Product ID")
            rp_psl_tree.column("# 2", anchor=E, stretch=NO, width=120)
            rp_psl_tree.heading("# 2", text="Category")
            rp_psl_tree.column("# 3", anchor=E, stretch=NO, width=180)
            rp_psl_tree.heading("# 3", text="Product/ Service Name")
            rp_psl_tree.column("# 4", anchor=E, stretch=NO, width=130)
            rp_psl_tree.heading("# 4", text="Description")
            rp_psl_tree.column("# 5", anchor=E, stretch=NO, width=150)
            rp_psl_tree.heading("# 5", text="Warehouse")
            rp_psl_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_psl_tree.heading("# 6", text="Stock")
            rp_psl_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rp_psl_tree.heading("# 7", text="Cost")
            rp_psl_tree.column("# 8", anchor=E, stretch=NO, width=100)
            rp_psl_tree.heading("# 8", text="Price")
            # Insert the data in Treeview widget
            rp_psl_tree.insert('', 'end',text="1",values=('','','','','','','',''))


            # Insert the data in Treeview widget
            for record in rp_psl_tree.get_children():
                rp_psl_tree.delete(record)
            count=0
            fbcursor.execute('SELECT * from productservice WHERE category="Service" ')
            for i in fbcursor:
                rp_psl_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[3], i[4], i[5], i[15], i[13], i[9], i[11]))
                count += 1
            window = canvas.create_window(170, 150, anchor="nw",  window=rp_psl_tree)
        
        
        else:
                
            canvas.create_text(240,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=100)
            tree.heading("# 1", text="Product ID")
            tree.column("# 2", anchor=E, stretch=NO, width=120)
            tree.heading("# 2", text="Category")
            tree.column("# 3", anchor=E, stretch=NO, width=180)
            tree.heading("# 3", text="Product/ Service Name")
            tree.column("# 4", anchor=E, stretch=NO, width=130)
            tree.heading("# 4", text="Description")
            tree.column("# 5", anchor=E, stretch=NO, width=150)
            tree.heading("# 5", text="Warehouse")
            tree.column("# 6", anchor=E, stretch=NO, width=100)
            tree.heading("# 6", text="Stock")
            tree.column("# 7", anchor=E, stretch=NO, width=100)
            tree.heading("# 7", text="Cost")
            tree.column("# 8", anchor=E, stretch=NO, width=100)
            tree.heading("# 8", text="Price")
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','','',''))

            window = canvas.create_window(170, 150, anchor="nw", window=tree)

        canvas.create_text(1000,100,text="Products And Services Report",fill='black',font=("Helvetica", 16), justify='right') 

        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
    #==============================================================================================================
    elif rth=="Default":
        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(120,25,1200,1430,  outline='yellow',fill='white')
        if company_tro is not None:
            canvas.create_text(190,100,text=company_tro[1],fill='black',font=("Helvetica", 12), justify='left')            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_psl_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            rp_psl_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rp_psl_tree.heading("# 1", text="Product ID")
            rp_psl_tree.column("# 2", anchor=E, stretch=NO, width=120)
            rp_psl_tree.heading("# 2", text="Category")
            rp_psl_tree.column("# 3", anchor=E, stretch=NO, width=180)
            rp_psl_tree.heading("# 3", text="Product/ Service Name")
            rp_psl_tree.column("# 4", anchor=E, stretch=NO, width=130)
            rp_psl_tree.heading("# 4", text="Description")
            rp_psl_tree.column("# 5", anchor=E, stretch=NO, width=150)
            rp_psl_tree.heading("# 5", text="Warehouse")
            rp_psl_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_psl_tree.heading("# 6", text="Stock")
            rp_psl_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rp_psl_tree.heading("# 7", text="Cost")
            rp_psl_tree.column("# 8", anchor=E, stretch=NO, width=100)
            rp_psl_tree.heading("# 8", text="Price")
            # Insert the data in Treeview widget
            rp_psl_tree.insert('', 'end',text="1",values=('','','','','','','',''))


            # Insert the data in Treeview widget
            for record in rp_psl_tree.get_children():
                rp_psl_tree.delete(record)
            count=0
            fbcursor.execute('SELECT * from productservice WHERE category="Default"')
            for i in fbcursor:
                rp_psl_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[3], i[4], i[5], i[15], i[13], i[9], i[11]))
                count += 1
            window = canvas.create_window(170, 150, anchor="nw",  window=rp_psl_tree)
        
        
        else:

            canvas.create_text(240,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')
   
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=100)
            tree.heading("# 1", text="Product ID")
            tree.column("# 2", anchor=E, stretch=NO, width=120)
            tree.heading("# 2", text="Category")
            tree.column("# 3", anchor=E, stretch=NO, width=180)
            tree.heading("# 3", text="Product/ Service Name")
            tree.column("# 4", anchor=E, stretch=NO, width=130)
            tree.heading("# 4", text="Description")
            tree.column("# 5", anchor=E, stretch=NO, width=150)
            tree.heading("# 5", text="Warehouse")
            tree.column("# 6", anchor=E, stretch=NO, width=100)
            tree.heading("# 6", text="Stock")
            tree.column("# 7", anchor=E, stretch=NO, width=100)
            tree.heading("# 7", text="Cost")
            tree.column("# 8", anchor=E, stretch=NO, width=100)
            tree.heading("# 8", text="Price")
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','','',''))

            window = canvas.create_window(170, 150, anchor="nw", window=tree)
        canvas.create_text(1000,100,text="Products And Services Report",fill='black',font=("Helvetica", 16), justify='right') 


        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
    else:
        pass
#-------------------------------------------------prace list----------------------
def category_prl():
  # firtst filter-----------------------------------Month to date
    rth=prlfilter.get()
     # #for company details
    tro_company = "SELECT * from company"
    fbcursor.execute(tro_company)
    company_tro= fbcursor.fetchone()
    global canvas
    if rth=="All product and Services ":

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tro is not None:
            canvas.create_text(310,100,text=company_tro[1],fill='black',font=("Helvetica", 12), justify='left')            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_pl_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4"), show='headings', height=55, style='mystyle.Treeview')
            rp_pl_tree.column("# 1", anchor=E, stretch=NO, width=150)
            rp_pl_tree.heading("# 1", text="Product ID")
            rp_pl_tree.column("# 2", anchor=E, stretch=NO, width=200)
            rp_pl_tree.heading("# 2", text="Product/Service Name")
            rp_pl_tree.column("# 3", anchor=E, stretch=NO, width=200)
            rp_pl_tree.heading("# 3", text="Description")
            rp_pl_tree.column("# 4", anchor=E, stretch=NO, width=150)
            rp_pl_tree.heading("# 4", text="Unit Price")
            
            # Insert the data in Treeview widget
            rp_pl_tree.insert('', 'end',text="1",values=('','','',''))


            # Insert the data in Treeview widget
            for record in rp_pl_tree.get_children():
                rp_pl_tree.delete(record)
            count=0
            fbcursor.execute('SELECT * from productservice')
            for i in fbcursor:
                rp_pl_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[4], i[5], i[7]))
                count += 1
            window = canvas.create_window(280, 130, anchor="nw", window=rp_pl_tree)
        
        
        else:

            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')
            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=150)
            tree.heading("# 1", text="Product ID")
            tree.column("# 2", anchor=E, stretch=NO, width=200)
            tree.heading("# 2", text="Product/Service Name")
            tree.column("# 3", anchor=E, stretch=NO, width=200)
            tree.heading("# 3", text="Description")
            tree.column("# 4", anchor=E, stretch=NO, width=150)
            tree.heading("# 4", text="Unit Price")
            
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','',''))

            window = canvas.create_window(280, 130, anchor="nw", window=tree)
        canvas.create_text(930,100,text="Price List",fill='black',font=("Helvetica", 16), justify='right')

        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)

    #--------------------------------------------------------------------------------------------------------------
    elif rth=="All products":
        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tro is not None:
            canvas.create_text(310,100,text=company_tro[1],fill='black',font=("Helvetica", 12), justify='left')            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_pl_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4"), show='headings', height=55, style='mystyle.Treeview')
            rp_pl_tree.column("# 1", anchor=E, stretch=NO, width=150)
            rp_pl_tree.heading("# 1", text="Product ID")
            rp_pl_tree.column("# 2", anchor=E, stretch=NO, width=200)
            rp_pl_tree.heading("# 2", text="Product/Service Name")
            rp_pl_tree.column("# 3", anchor=E, stretch=NO, width=200)
            rp_pl_tree.heading("# 3", text="Description")
            rp_pl_tree.column("# 4", anchor=E, stretch=NO, width=150)
            rp_pl_tree.heading("# 4", text="Unit Price")
            
            # Insert the data in Treeview widget
            rp_pl_tree.insert('', 'end',text="1",values=('','','',''))


            # Insert the data in Treeview widget
            for record in rp_pl_tree.get_children():
                rp_pl_tree.delete(record)
            count=0
            fbcursor.execute('SELECT * from productservice WHERE category="Products"')
            for i in fbcursor:
                rp_pl_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[4], i[5], i[7]))
                count += 1
            window = canvas.create_window(280, 130, anchor="nw", window=rp_pl_tree)
        
        
        else:

            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')


            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=150)
            tree.heading("# 1", text="Product ID")
            tree.column("# 2", anchor=E, stretch=NO, width=200)
            tree.heading("# 2", text="Product/Service Name")
            tree.column("# 3", anchor=E, stretch=NO, width=200)
            tree.heading("# 3", text="Description")
            tree.column("# 4", anchor=E, stretch=NO, width=150)
            tree.heading("# 4", text="Unit Price")
            
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','',''))

            window = canvas.create_window(280, 130, anchor="nw", window=tree)
        canvas.create_text(930,100,text="Price List",fill='black',font=("Helvetica", 16), justify='right')


        
        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
        #===============================================================================================
    elif rth=="All Service":
        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tro is not None:
            canvas.create_text(310,100,text=company_tro[1],fill='black',font=("Helvetica", 12), justify='left')            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_pl_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4"), show='headings', height=55, style='mystyle.Treeview')
            rp_pl_tree.column("# 1", anchor=E, stretch=NO, width=150)
            rp_pl_tree.heading("# 1", text="Product ID")
            rp_pl_tree.column("# 2", anchor=E, stretch=NO, width=200)
            rp_pl_tree.heading("# 2", text="Product/Service Name")
            rp_pl_tree.column("# 3", anchor=E, stretch=NO, width=200)
            rp_pl_tree.heading("# 3", text="Description")
            rp_pl_tree.column("# 4", anchor=E, stretch=NO, width=150)
            rp_pl_tree.heading("# 4", text="Unit Price")
            
            # Insert the data in Treeview widget
            rp_pl_tree.insert('', 'end',text="1",values=('','','',''))


            # Insert the data in Treeview widget
            for record in rp_pl_tree.get_children():
                rp_pl_tree.delete(record)
            count=0
            fbcursor.execute('SELECT * from productservice WHERE category="Service"')
            for i in fbcursor:
                rp_pl_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[4], i[5], i[7]))
                count += 1
            window = canvas.create_window(280, 130, anchor="nw", window=rp_pl_tree)
        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=150)
            tree.heading("# 1", text="Product ID")
            tree.column("# 2", anchor=E, stretch=NO, width=200)
            tree.heading("# 2", text="Product/Service Name")
            tree.column("# 3", anchor=E, stretch=NO, width=200)
            tree.heading("# 3", text="Description")
            tree.column("# 4", anchor=E, stretch=NO, width=150)
            tree.heading("# 4", text="Unit Price")
            
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','',''))

            window = canvas.create_window(280, 130, anchor="nw", window=tree)

        canvas.create_text(930,100,text="Price List",fill='black',font=("Helvetica", 16), justify='right')

        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
    #==============================================================================================================
    elif rth=="Default":
        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tro is not None:
            canvas.create_text(310,100,text=company_tro[1],fill='black',font=("Helvetica", 12), justify='left')            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_pl_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4"), show='headings', height=55, style='mystyle.Treeview')
            rp_pl_tree.column("# 1", anchor=E, stretch=NO, width=150)
            rp_pl_tree.heading("# 1", text="Product ID")
            rp_pl_tree.column("# 2", anchor=E, stretch=NO, width=200)
            rp_pl_tree.heading("# 2", text="Product/Service Name")
            rp_pl_tree.column("# 3", anchor=E, stretch=NO, width=200)
            rp_pl_tree.heading("# 3", text="Description")
            rp_pl_tree.column("# 4", anchor=E, stretch=NO, width=150)
            rp_pl_tree.heading("# 4", text="Unit Price")
            
            # Insert the data in Treeview widget
            rp_pl_tree.insert('', 'end',text="1",values=('','','',''))


            # Insert the data in Treeview widget
            for record in rp_pl_tree.get_children():
                rp_pl_tree.delete(record)
            count=0
            fbcursor.execute('SELECT * from productservice WHERE category="Default"')
            for i in fbcursor:
                rp_pl_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[4], i[5], i[7]))
                count += 1
            window = canvas.create_window(280, 130, anchor="nw", window=rp_pl_tree)
        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=150)
            tree.heading("# 1", text="Product ID")
            tree.column("# 2", anchor=E, stretch=NO, width=200)
            tree.heading("# 2", text="Product/Service Name")
            tree.column("# 3", anchor=E, stretch=NO, width=200)
            tree.heading("# 3", text="Description")
            tree.column("# 4", anchor=E, stretch=NO, width=150)
            tree.heading("# 4", text="Unit Price")
            
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','',''))

            window = canvas.create_window(280, 130, anchor="nw", window=tree)

        canvas.create_text(930,100,text="Price List",fill='black',font=("Helvetica", 16), justify='right')

        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)
    else:
        pass

#-------------------------product low stock report---------------------
def category_plsr():
        tro_company = "SELECT * from company"
        fbcursor.execute(tro_company)
        company_tro= fbcursor.fetchone()

        global canvas

        frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
        frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
        frame.place(x=20,y=115)
        canvas=Canvas(
            frame,
            bg='grey',
            width=1400,
            height=1200,
            scrollregion=(0,0,1500, 1500)
            )

        vertibar=Scrollbar(
            frame,
            orient=VERTICAL
            )
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=1310,height=600)

        canvas.config(
            yscrollcommand=vertibar.set
            )
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
        if company_tro is not None:
            canvas.create_text(310,100,text=company_tro[1],fill='black',font=("Helvetica", 12), justify='left')
            
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_plsr_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_plsr_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rp_plsr_tree.heading("# 1", text="Product Id")
            rp_plsr_tree.column("# 2", anchor=E, stretch=NO, width=100)
            rp_plsr_tree.heading("# 2", text="Category")
            rp_plsr_tree.column("# 3", anchor=E, stretch=NO, width=150)
            rp_plsr_tree.heading("# 3", text="Product Name")
            rp_plsr_tree.column("# 4", anchor=E, stretch=NO, width=130)
            rp_plsr_tree.heading("# 4", text="Warehouse")
            rp_plsr_tree.column("# 5", anchor=E, stretch=NO, width=130)
            rp_plsr_tree.heading("# 5", text="Low Stock Limit")
            rp_plsr_tree.column("# 6", anchor=E, stretch=NO, width=70)
            rp_plsr_tree.heading("# 6", text="Stock")
            # Insert the data in Treeview widget
            rp_plsr_tree.insert('', 'end',text="1",values=('','','','','',''))
            # Insert the data in Treeview widget
            for record in rp_plsr_tree.get_children():
                rp_plsr_tree.delete(record)
            count=0
            fbcursor.execute('SELECT * from storingproduct WHERE stock < stocklimit')
            for i in fbcursor:
                rp_plsr_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[5], i[6], i[17], i[16], i[15]))
                count += 1
            
            window = canvas.create_window(290, 130, anchor="nw", window=rp_plsr_tree)

            
        else:
            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=100)
            tree.heading("# 1", text="Product Id")
            tree.column("# 2", anchor=E, stretch=NO, width=100)
            tree.heading("# 2", text="Category")
            tree.column("# 3", anchor=E, stretch=NO, width=150)
            tree.heading("# 3", text="Product Name")
            tree.column("# 4", anchor=E, stretch=NO, width=130)
            tree.heading("# 4", text="Warehouse")
            tree.column("# 5", anchor=E, stretch=NO, width=130)
            tree.heading("# 5", text="Low Stock Limit")
            tree.column("# 6", anchor=E, stretch=NO, width=70)
            tree.heading("# 6", text="Stock")
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','',''))

            window = canvas.create_window(290, 130, anchor="nw", window=tree)
        canvas.create_text(840,100,text="Product Low Stock Report",fill='black',font=("Helvetica", 16), justify='right')

        def emailrp():
            rpmailDetail=Toplevel()
            rpmailDetail.title("E-Mail")
            p2 = PhotoImage(file = "images/fbicon.png")
            rpmailDetail.iconphoto(False, p2)
            rpmailDetail.geometry("1030x550+150+120")
            
            def myrp_SMTP():
                if True:
                    em_ser_conbtn.destroy()
                    mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                    mysmtpservercon.place(x=610, y=110)
                    lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                    hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                    lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                    portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                    lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                    unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                    lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                    pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                    ssl_chkvar=IntVar()
                    ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                    ssl_chkbtn.place(x=50, y=110)
                    em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                else:
                    pass
            
            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(rpmailDetail)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=495, width=730)
            messagelbframe.place(x=5, y=5)
            lbl_emailtoaddr=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            emailtoent=Entry(messagelbframe, width=50).place(x=120, y=5)
            sendemail_btn=Button(messagelbframe, text="Send Email", width=10, height=1).place(x=600, y=10)
            lbl_carcopyto=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carcopyent=Entry(messagelbframe, width=50).place(x=120, y=32)
            stopemail_btn=Button(messagelbframe, text="Stop sending", width=10, height=1).place(x=600, y=40)
            lbl_subject=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subent=Entry(messagelbframe, width=50).place(x=120, y=59)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook, height=350, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=350, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            btn1=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)  
            btn2=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            btn5=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo).place(x=140, y=1)
            btn6=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo).place(x=175, y=1)
            btn7=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold).place(x=210, y=1)
            btn8=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics).place(x=245, y=1)
            btn9=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline).place(x=280, y=1)
            btn10=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left).place(x=315, y=1)
            btn11=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right).place(x=350, y=1)
            btn12=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center).place(x=385, y=1)
            btn13=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink).place(x=420, y=1)
            btn14=Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove).place(x=455, y=1)

            dropcomp = ttk.Combobox(emailmessage_Frame, width=12, height=3).place(x=500, y=5)
            dropcompo = ttk.Combobox(emailmessage_Frame, width=6, height=3).place(x=600, y=5)
            mframe=Frame(emailmessage_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            mframe=Frame(htmlsourse_Frame, height=350, width=710, bg="white")
            mframe.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=280)
            attachlbframe.place(x=740, y=5)
            htcodeframe=Frame(attachlbframe, height=220, width=265, bg="white").place(x=5, y=5)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...").place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment").place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(rpmailDetail, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe=LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            lbl_sendermail=Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            sentent=Entry(sendatalbframe, width=40).place(x=195, y=30)
            lbl_orcompanyname=Label(sendatalbframe, text="Your name or company name").place(x=5, y=60)
            nament=Entry(sendatalbframe, width=40).place(x=195, y=60)
            lbl_reply=Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
            replyent=Entry(sendatalbframe, width=40).place(x=195, y=90)
            lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
            signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
            confirm_chkvar=IntVar()
            confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
            confirm_chkbtn.place(x=200, y=215)
            btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

            sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
            sendatalbframe.place(x=610, y=5)
            servar=IntVar()
            SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
            SMTP_rbtn.place(x=10, y=10)
            MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=myrp_SMTP)
            MySMTP_rbtn.place(x=10, y=40)
            em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
            em_ser_conbtn.place(x=710, y=110)
        
        def my_popup(event):
            my_menu.tk_popup(event.x_root, event.y_root)
            
        my_menu= Menu(canvas, tearoff=False)
        my_menu.add_command(label="Run Report", command="run")
        my_menu.add_separator()
        my_menu.add_command(label="Print Report", command="pr")
        my_menu.add_command(label="Email Report", command=emailrp)

        my_menu.add_separator()
        my_menu.add_command(label="Export Report To Excel", command="excel")
        my_menu.add_command(label="Export Report To PDF", command="pdf")


        canvas.bind("<Button-3>", my_popup)

######################################################################################################################


######################################################################################################################


canvas=StringVar()
scrfilter=StringVar()
scrfrm=StringVar()
scrto=StringVar()
#it is for invoice report
invfilter = StringVar()# veriable for store category filter
invfrm=StringVar()
invto=StringVar()

#it is for invoice report(With cust)
irwcfilter = StringVar()
irwcfrm=StringVar()
irwcto=StringVar()

#it is for Order report
orfilter = StringVar()
orfrm=StringVar()
orto=StringVar()

#Tax report Invoice
trifilter = StringVar()
trifrm=StringVar()
trito=StringVar()

#Tax report order
trofilter = StringVar()
trofrm=StringVar()
troto=StringVar()

#Tax report order
srgdfilter = StringVar()
srgdfrm=StringVar()
srgdto=StringVar()

#invoice report by date
irdfilter = StringVar()
irdfrm=StringVar()
irdto=StringVar()

#daily invoice report by date

dirdate=StringVar()

#purchase order report 
porfilter = StringVar()
porfrm=StringVar()
porto=StringVar()

#expense report
expfilter = StringVar()
expfrm=StringVar()
expto=StringVar()

#payment report
pyrfilter = StringVar()
pyrfrm=StringVar()
pyrto=StringVar()
#customer list
clfilter = StringVar()
#customer list Detaild
cldfilter = StringVar()

#Purchase/ service list
pslfilter = StringVar()

#price list
prlfilter = StringVar()

#function For chkbox     
checkvar1 = BooleanVar()
checkvar2 = BooleanVar()
checkvar3 = BooleanVar()

rpcheckvar1_ir = BooleanVar()
rpcheckvar2_ir = BooleanVar()
rpcheckvar3_ir = BooleanVar()

rpcheckvar1_irwc = BooleanVar()
rpcheckvar2_irwc = BooleanVar()
rpcheckvar3_irwc = BooleanVar()

rpcheckvar1_tri = BooleanVar()
rpcheckvar2_tri = BooleanVar()
rpcheckvar3_tri = BooleanVar()


rpcheckvar1_plr = BooleanVar()
rpcheckvar2_plr = BooleanVar()


rpcheckvar1_psl = BooleanVar()
rpcheckvar2_psl = BooleanVar()


rpcheckvar1_pl = BooleanVar()
rpcheckvar2_pl = BooleanVar()


rpcheckvar1_por= BooleanVar()
rpcheckvar2_por= BooleanVar()

rpcheckvar1_exp= BooleanVar()
rpcheckvar2_exp= BooleanVar()

rpcheckvar1_cl= BooleanVar()
rpcheckvar2_cl= BooleanVar()

rpcheckvar1_cld= BooleanVar()
rpcheckvar2_cld= BooleanVar()


#####################################(Drop down Function)##################################################
def maindropmenu(event):
  menuvar=menu1.get()
  if menuvar== "Screen Charts":
        rprefreshlebel = Button(midFrame,compound="top", text="Refresh",relief=RAISED, image=photo8,bg="#f5f3f2", fg="black", height=55, bd=1, width=55, command=screen_flt)
        rprefreshlebel.place(x=22,y=12)


        rpprintlabel = Button(midFrame,compound="top", text="Print Chart",relief=RAISED, image=photo5,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command=print)
        rpprintlabel.place(x=95,y=12)
    


        rpsaveLabel = Button(midFrame,compound="top", text="Save Chart\nimage",relief=RAISED, image=photo3,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command=lambda:image())
        rpsaveLabel.place(x=168,y=12)

        rpcopyLabel = Button(midFrame,compound="top", text="Copy Chart\n to Clipboard",relief=RAISED, image=copy,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command="convert")
        rpcopyLabel.place(x=240,y=12)
        
        iruw1 = Label(midFrame,text="                                    ", bg="#f8f8f2")
        iruw1.place(x=415,y=9)
        iruw2 = Label(midFrame,text="                                                                                                             \n                                                                                                                                                  \n                                                              \n                                                            ", bg="#f8f8f2")
        iruw2.place(x=530,y=9)

        global rp_scr_frm
        global rp_sc_to


        lbl_ir =Label(midFrame, text="From:" , bg="#f8f8f2")
        lbl_ir.place(x=676,y=10)

        exir=DateEntry(midFrame,textvariable=scrfrm)
        exir.place(x=721,y=10)

        lbl_ir =Label(midFrame, text="To:", bg="#f8f8f2")
        lbl_ir.place(x=690,y=50)

        exir=DateEntry(midFrame,textvariable=scrto)
        exir.place(x=721,y=50)

        lbl_ir = Label(midFrame, text="Category:", bg="#f8f8f2")
        lbl_ir.place(x=470,y=10)

        menuir = StringVar()
        drop1ir=ttk.Combobox(midFrame, textvariable=menuir)
        drop1ir.place(x=530,y=10)
        drop1ir["values"]=("Java","Php", "POP")
        drop1ir.current(0)

        
        drop2=ttk.Combobox(midFrame, textvariable=scrfilter)
        drop2.place(x=530,y=50)
        drop2["values"]=("Year To Date","Current year","Last 3 Month","Last 6 Month", "Last 12 Month", "Last 18 Month", "Last 24 Month","Previous Year", "Before Previous Year", "Custom Range" )
        drop2.current(0)



        #--------------------------------check box-------------------------------------
        

        # checkvar1 = BooleanVar()
        rp_1_chkbtn1 = Checkbutton(midFrame, text = "Invoice", variable = checkvar1, onvalue = 1, offvalue = 0, height = 2, width = 8, bg="#f8f8f2",command=lambda:chek_function())
        rp_1_chkbtn1.place(x=815,y=2)
        rp_1_chkbtn1.select()

        # checkvar2 = BooleanVar()
        rp_2_chkbtn2 = Checkbutton(midFrame, text = "Outstanding", variable = checkvar2, onvalue = 1, offvalue = 0, height = 2, width = 8, bg="#f8f8f2", command=lambda:chek_function())
        rp_2_chkbtn2.place(x=830,y=40)
        rp_2_chkbtn2.select()

        # checkvar3 = BooleanVar()
        rp_3_chkbtn3 = Checkbutton(midFrame, text = "Paid", variable = checkvar3, onvalue = 1, offvalue = 0, height = 2, width = 8, bg="#f8f8f2", command=lambda:chek_function())
        rp_3_chkbtn3.place(x=883,y=2)
        rp_3_chkbtn3.select()

        mainchartframe2 =Frame(reportframe,height=1500, width=200)
        mainchartframe2.pack(side="top", padx=0, pady=0)

        irwcuw1 = Label(reportframe,text="                                                                                                                                                               \n", bg="white")
        irwcuw1.place(x=2,y=90)


        lbl_invdtt2 =Label(reportframe, text="Report Result Preview", bg="white" , font=("arial", 16))
        lbl_invdtt2.place(x=2, y=87)
        irwcuw1 = Label(reportframe,text="                                                                                               ", bg="white")
        irwcuw1.place(x=1135, y=97)
        lbl_invdtt2 =Label(reportframe, text="Right Click on Preview For More Options", bg="white" , font=("arial",8 ))
        lbl_invdtt2.place(x=1140, y=97)

        ######################################################################################################################


        #########################################(Graph Section)#############################################################
        sql_paid = "SELECT SUM(invoicetot)from invoice"
        fbcursor.execute(sql_paid)
        invoice= fbcursor.fetchone()

        x_axis = "SELECT invodate from invoice WHERE invoicetot=(SELECT MAX(invoicetot) from invoice)"
        fbcursor.execute(x_axis)
        axis_x= fbcursor.fetchone()



        sql_company = "SELECT SUM(totpaid)from invoice"
        fbcursor.execute(sql_company)
        paid= fbcursor.fetchone()



        sql_outstanding = "SELECT SUM(balance)from invoice"
        fbcursor.execute(sql_outstanding)
        outstanding= fbcursor.fetchone()


        frame = Frame(
                reportframe,
                width=1380,
                height=1000,
                bg='#b3b3b3',
                )
        frame.pack(expand=True, fill=BOTH,  padx=0, pady=0)
            
        frame.pack()


        x=datetime.today()

        y=invoice

        x=axis_x
        figfirst = plt.figure(figsize=(17, 3.58), dpi=80)
        plt.bar(x,y, label="Invoice", color="orange")
        plt.legend()
        plt.xlabel("x-axis")
        plt.ylabel("y-label")
        axes=plt.gca()
        axes.yaxis.grid()

        # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)




        #**************add dates********

        dates=axis_x[0]+timedelta(days=2)

        y=outstanding
        x=dates
        plt.bar(x,y, label="Outstanding", color="blue")
        plt.legend()
        plt.xlabel("x-axis")
        plt.ylabel("y-label")
        axes=plt.gca()
        axes.yaxis.grid()
        # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)


        dates3=axis_x[0]-timedelta(days=2)
        y=paid
        x=dates3
        plt.bar(x,y, label="Paid", color="green") 
        plt.legend()
        plt.xlabel("x-axis")
        plt.ylabel("y-label")
        axes=plt.gca()
        axes.yaxis.grid()
        # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)

        #used to display chart in our frame
        canvasbar = FigureCanvasTkAgg(figfirst, master=reportframe)
        canvasbar.draw()
        canvasbar.get_tk_widget().place(x=0, y=85) # show the barchart on the ouput window

        #second graph

        sec_paid = "SELECT invoicetot from invoice  GROUP BY businessname ORDER by COUNT(businessname) DESC LIMIT 1"
        fbcursor.execute(sec_paid)
        paid_sec_x= fbcursor.fetchone()

        
        sec_paid_y = "SELECT businessname from invoice  GROUP BY businessname  ORDER by COUNT(businessname) DESC LIMIT 1"
        fbcursor.execute(sec_paid_y)

        paid_sec_y= fbcursor.fetchone()


        figsecond = plt.figure(figsize=(9, 4), dpi=80)

        x=paid_sec_y
        y=paid_sec_x
        plt.barh(x,y, label="Top Billed Customer", color="orange") 
        plt.legend()
        plt.xlabel("x-axis")
        plt.ylabel("y-label")
        axes=plt.gca()
        axes.xaxis.grid()


        canvasbar = FigureCanvasTkAgg(figsecond, master=reportframe)
        canvasbar.draw()
        canvasbar.get_tk_widget().place(x=0, y=370)

        # #second graph

        thrd_paid = "SELECT invoicetot from invoice GROUP BY Productserviceid ORDER by COUNT(Productserviceid) DESC LIMIT 1"
        fbcursor.execute(thrd_paid)
        paid_thrd_x= fbcursor.fetchone()


        thrd_paid_y = "select name from productservice where Productserviceid=(SELECT Productserviceid from invoice GROUP BY Productserviceid ORDER by COUNT(Productserviceid) DESC LIMIT 1)"

        fbcursor.execute(thrd_paid_y)

        paid_thrd_y= fbcursor.fetchone()

        figlast = plt.figure(figsize=(9, 4), dpi=80)

        x=paid_thrd_y
        y=paid_thrd_x   
        plt.barh(x,y, label="Top Product Sale", color="blue") 
        plt.legend()
        plt.xlabel("x-axis")
        plt.ylabel("y-label")
        axes=plt.gca()
        axes.xaxis.grid()
        

        canvasbar = FigureCanvasTkAgg(figlast, master=reportframe)
        canvasbar.draw()
        canvasbar.get_tk_widget().place(x=650, y=370)

        lbl_ir = Label(reportframe, text="Right Click On Each Chart For More Options", bg="white" , font=("arial", 8))
        lbl_ir.place(x=1115,y=85)

        lbl_invdtt2 =Label(reportframe, text="Screen Charts", bg="white" , font=("arial", 16))
        lbl_invdtt2.place(x=2, y=85)

  elif menuvar== "Invoice Report":
#frame for display data to a a4 sheet

    rprefreshlebel = Button(midFrame,compound="top", text="Refresh",relief=RAISED, image=photo8,bg="#f5f3f2", fg="black", height=55, bd=1, width=55, command=category)
    rprefreshlebel.place(x=22,y=12)

    
    lbl_ir = Label(reportframe, text="                                                                                     ", bg="white" , font=("arial", 8))
    lbl_ir.place(x=1110,y=85)


    rpprintlabel = Button(midFrame,compound="top", text="Print",relief=RAISED, image=photo5,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command=lambda:cn_pr(canvas))
    rpprintlabel.place(x=95,y=12)
  


    rpsaveLabel = Button(midFrame,compound="top", text="Export Report\n to Excel",relief=RAISED, image=photo3,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command=lambda:exportcanvas())
    rpsaveLabel.place(x=168,y=12)

    rpcopyLabel = Button(midFrame,compound="top", text="Export Report\n to PDF",relief=RAISED, image=copy,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command=lambda:pdf_exp(canvas))
    rpcopyLabel.place(x=240,y=12)
    
    iruw1 = Label(midFrame,text="                                    ", bg="#f8f8f2")
    iruw1.place(x=415,y=9)
    iruw2 = Label(midFrame,text="                                                                                                             \n                                                                                                                                                  \n                                                              \n                                                            ", bg="#f8f8f2")
    iruw2.place(x=530,y=9)
    lbl_ir =Label(midFrame, text="From:" , bg="#f8f8f2")
    lbl_ir.place(x=676,y=10)

    global rp_exir
    rp_exir=DateEntry(midFrame, textvariable=invfrm)
    rp_exir.place(x=721,y=10)

    lbl_ir =Label(midFrame, text="To:", bg="#f8f8f2")
    lbl_ir.place(x=690,y=50)

    global rp_exir1
    rp_exir1=DateEntry(midFrame,textvariable=invto)
    rp_exir1.place(x=721,y=50)

    lbl_ir = Label(midFrame, text="Category:", bg="#f8f8f2")
    lbl_ir.place(x=470,y=10)

    menuir = StringVar()
    drop1ir=ttk.Combobox(midFrame, textvariable=menuir)
    drop1ir.place(x=530,y=10)
    drop1ir["values"]=("Java","Php", "POP")
    drop1ir.current(0)

    lbl_ir = Label(reportframe, text="    \n   \n   \n   \n   \n  ", bg="#f8f8f2")
    lbl_ir.place(x=0,y=500)

    
    rpdrop2_ir=ttk.Combobox(midFrame, textvariable=invfilter)
    rpdrop2_ir["values"]=("Month to date","Year To Date","Current year","Current month","Current days", "Last 30 days", "Last 60 days", "Last 90 days","Previous month", "Previous year", "Custom Range")
    rpdrop2_ir.place(x=530,y=50)
    rpdrop2_ir.current(0)



    #--------------------------------check box-------------------------------------
    
    rpchkbtn1_ir= Checkbutton(midFrame, text = "Paid", variable = rpcheckvar1_ir, onvalue = 1, offvalue = 0, height = 2, width = 8, bg="#f8f8f2",command=lambda:check_inv())
    rpchkbtn1_ir.place(x=815,y=2)
    rpchkbtn1_ir.select()

    
    rpchkbtn1_ir = Checkbutton(midFrame, text = "Void", variable = rpcheckvar2_ir, onvalue = 1, offvalue = 0, height = 2, width = 8, bg="#f8f8f2", command=lambda:check_inv())
    rpchkbtn1_ir.place(x=815,y=40)
    rpchkbtn1_ir.select()
    
    rpchkbtn1_ir= Checkbutton(midFrame, text = "Unpaid", variable = rpcheckvar3_ir, onvalue = 1, offvalue = 0, height = 2, width = 8, bg="#f8f8f2", command=lambda:check_inv())
    rpchkbtn1_ir.place(x=883,y=2)
    rpchkbtn1_ir.select()
    
    mainchartframe2 =Frame(reportframe,height=1500, width=200)
    mainchartframe2.pack(side="top", padx=0, pady=0)

    irwcuw1 = Label(reportframe,text="                                                                                                                                                               \n", bg="white")
    irwcuw1.place(x=2,y=90)


    lbl_invdtt2 =Label(reportframe, text="Report Result Preview", bg="white" , font=("arial", 16))
    lbl_invdtt2.place(x=2, y=87)
    irwcuw1 = Label(reportframe,text="                                                                                               ", bg="white")
    irwcuw1.place(x=1135, y=97)
    lbl_invdtt2 =Label(reportframe, text="Right Click on Preview For More Options", bg="white" , font=("arial",8 ))
    lbl_invdtt2.place(x=1140, y=97)

    frame = Frame(
        reportframe,
        width=1500,
        height=1200,
        bg="#f8f8f2"
        )
    frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
    frame.place(x=20,y=115)
    canvas=Canvas(
        frame,
        bg='grey',
        width=1400,
        height=1000,
        scrollregion=(0,0,1500, 1500)
        )

    vertibar=Scrollbar(
        frame,
        orient=VERTICAL
        )
    vertibar.pack(side=RIGHT,fill=Y)
    vertibar.config(command=canvas.yview)
    canvas.config(width=1310,height=600)

    canvas.config(
        yscrollcommand=vertibar.set
        )
    canvas.pack(expand=True,side=LEFT,fill=BOTH)
    
    global id_inv1
    global id_inv2
    global id_inv
    
    canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
    
    id_inv=canvas.create_text(620,300,text="No Data To Display",fill='black',font=("arial", 14), justify='center')
    

    id_inv1=canvas.create_text(625,350,text="Please sdelect the report type from the list above\nAfter you can set the date period or other parameters",fill='blue',font=("arial", 12), justify='center')

    id_inv2=canvas.create_text(620,400,text="Click on 'Run Report' button for the report result",fill='blue',font=("arial", 12), justify='center')

    # midFrame2=LabelFrame(frame, bg="red", width=100, height=60)
    # midFrame2.place(x=20, y=100)
    #----------------------------------------------------------------------------------------------------
  elif menuvar=="Invoice Report(With Customer)":

    #frame for display data to a a4 sheet

    rprefreshlebel_cst = Button(midFrame,compound="top", text="Refresh",relief=RAISED, image=photo8,bg="#f5f3f2", fg="black", height=55, bd=1, width=55,command=category_irwc)
    rprefreshlebel_cst.place(x=22,y=12)
    lbl_ir = Label(reportframe, text="                                                                                     ", bg="white" , font=("arial", 8))
    lbl_ir.place(x=1110,y=85)
    rpprintlabel_cst = Button(midFrame,compound="top", text="Print Chart",relief=RAISED, image=photo5,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command="create")
    rpprintlabel_cst.place(x=95,y=12)
  
    rpsaveLabel_cst = Button(midFrame,compound="top", text="Export Report\n to Excel",relief=RAISED, image=photo3,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command=lambda:exportcanvas2())
    rpsaveLabel_cst.place(x=168,y=12)

    rpcopyLabel_cst = Button(midFrame,compound="top", text="Export Report\n to PDF",relief=RAISED, image=copy,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command="convert")
    rpcopyLabel_cst.place(x=240,y=12)

    irwcuw1 = Label(midFrame,text="                                    ", bg="#f8f8f2")
    irwcuw1.place(x=415,y=9)
    irwcuw2 = Label(midFrame,text="                                                                                                             \n                                                                                                                                                  \n                                                              \n                                                            ", bg="#f8f8f2")
    irwcuw2.place(x=530,y=9)
    lbl_irwc =Label(midFrame, text="From:" , bg="#f8f8f2")
    lbl_irwc.place(x=676,y=10)

    lbl_ir = Label(reportframe, text="    \n   \n   \n   \n   \n  ", bg="#f8f8f2")
    lbl_ir.place(x=0,y=500)

    global irwcfrm1
    irwcfrm1=DateEntry(midFrame, textvariable=irwcfrm)
    irwcfrm1.place(x=721,y=10)

    lbl_irwc =Label(midFrame, text="To:", bg="#f8f8f2")
    lbl_irwc.place(x=690,y=50)

    global irwcto1
    irwcto1=DateEntry(midFrame, textvariable=irwcto)
    irwcto1.place(x=721,y=50)

    lbl_irwc = Label(midFrame, text="Category:", bg="#f8f8f2")
    lbl_irwc.place(x=470,y=10)

    menuirwc = StringVar()
    drop1irwc=ttk.Combobox(midFrame, textvariable=menuirwc)
    drop1irwc.place(x=530,y=10)
    drop1irwc["values"]=("Java","Php", "POP")
    drop1irwc.current(0)

    
    rpdrop2_irwc=ttk.Combobox(midFrame, textvariable=irwcfilter)
    rpdrop2_irwc["values"]=("Month to date","Year To Date","Current year","Current month","Current days", "Last 30 days", "Last 60 days", "Last 90 days","Previous month", "Previous year", "Custom Range")
    rpdrop2_irwc.place(x=530,y=50)
    rpdrop2_irwc.current(0)



    #--------------------------------check box-------------------------------------
    
    rpchkbtn1_irwc= Checkbutton(midFrame, text = "Paid", variable = rpcheckvar1_irwc, onvalue = 1, offvalue = 0, height = 2, width = 8, bg="#f8f8f2",command=lambda:check_irwc())
    rpchkbtn1_irwc.place(x=815,y=2)
    rpchkbtn1_irwc.select()
   
    rpchkbtn1_irwc = Checkbutton(midFrame, text = "Void", variable = rpcheckvar2_irwc, onvalue = 1, offvalue = 0, height = 2, width = 8, bg="#f8f8f2", command=lambda:check_irwc())
    rpchkbtn1_irwc.place(x=815,y=40)
    rpchkbtn1_irwc.select()
    
    rpchkbtn1_irwc = Checkbutton(midFrame, text = "Unpaid", variable = rpcheckvar3_irwc, onvalue = 1, offvalue = 0, height = 2, width = 8, bg="#f8f8f2", command=lambda:check_irwc())
    rpchkbtn1_irwc.place(x=883,y=2)
    rpchkbtn1_irwc.select()

    mainchartframe3 =Frame(reportframe,height=1500, width=200)
    mainchartframe3.pack(side="top", padx=0, pady=0)

    irwcuw1 = Label(reportframe,text="                                                                                                                                                               \n", bg="white")
    irwcuw1.place(x=2,y=90)


    lbl_invdtt2 =Label(reportframe, text="Report Result Preview", bg="white" , font=("arial", 16))
    lbl_invdtt2.place(x=2, y=87)
    irwcuw1 = Label(reportframe,text="                                                                                               ", bg="white")
    irwcuw1.place(x=1135, y=97)
    lbl_invdtt2 =Label(reportframe, text="Right Click on Preview For More Options", bg="white" , font=("arial",8 ))
    lbl_invdtt2.place(x=1140, y=97)

    frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
    frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
    frame.place(x=20,y=115)
    canvas=Canvas(
        frame,
        bg='grey',
        width=1400,
        height=1200,
        scrollregion=(0,0,1500, 1500)
        )

    vertibar=Scrollbar(
        frame,
        orient=VERTICAL
        )
    vertibar.pack(side=RIGHT,fill=Y)
    vertibar.config(command=canvas.yview)
    canvas.config(width=1310,height=600)

    canvas.config(
        yscrollcommand=vertibar.set
        )
    canvas.pack(expand=True,side=LEFT,fill=BOTH)
    canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
    
    canvas.create_text(620,300,text="No Data To Display",fill='black',font=("arial", 14), justify='center')

    canvas.create_text(625,350,text="Please sdelect the report type from the list above\nAfter you can set the date period or other parameters",fill='blue',font=("arial", 12), justify='center')

    canvas.create_text(620,400,text="Click on 'Run Report' button for the report result",fill='blue',font=("arial", 12), justify='center')
    #----------------------------------------------------------------------------------------------------
  elif menuvar=="Order Report":
    #frame for display data to a a4 sheet


    rprefreshlebel = Button(midFrame,compound="top", text="Refresh",relief=RAISED, image=photo8,bg="#f5f3f2", fg="black", height=55, bd=1, width=55,command=category_or)
    rprefreshlebel.place(x=22,y=12)
    lbl_ir = Label(reportframe, text="                                                                                     ", bg="white" , font=("arial", 8))
    lbl_ir.place(x=1110,y=85)
    rpprintlabel = Button(midFrame,compound="top", text="Print Chart",relief=RAISED, image=photo5,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command="create")
    rpprintlabel.place(x=95,y=12)
  

    rpsaveLabel = Button(midFrame,compound="top", text="Export Report\n to Excel",relief=RAISED, image=photo3,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command=lambda:exportcanvas3())
    rpsaveLabel.place(x=168,y=12)

    lbl_ir = Label(reportframe, text="    \n   \n   \n   \n   \n  ", bg="#f8f8f2")
    lbl_ir.place(x=0,y=500)

    rpcopyLabel = Button(midFrame,compound="top", text="Export Report\n to PDF",relief=RAISED, image=copy,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command="convert")
    rpcopyLabel.place(x=240,y=12)
    
    oruw1 = Label(midFrame,text="                                    ", bg="#f8f8f2")
    oruw1.place(x=415,y=9)
    oruw2 = Label(midFrame,text="                                                                                                             \n                                                                                                                                                  \n                                                              \n                                                            ", bg="#f8f8f2")
    oruw2.place(x=530,y=9)

    lbl_or =Label(midFrame, text="From:" , bg="#f8f8f2")
    lbl_or.place(x=676,y=10)
    
    global orfrm1
    orfrm1=DateEntry(midFrame, textvariable=orfrm)
    orfrm1.place(x=721,y=10)

    lbl_or =Label(midFrame, text="To:", bg="#f8f8f2")
    lbl_or.place(x=690,y=50)
    global orto1
    orto1=DateEntry(midFrame, textvariable=orto)
    orto1.place(x=721,y=50)

    lbl_or = Label(midFrame, text="Category:", bg="#f8f8f2")
    lbl_or.place(x=470,y=10)

    menuor = StringVar()
    drop1or=ttk.Combobox(midFrame, textvariable=menuor)
    drop1or.place(x=530,y=10)
    drop1or["values"]=("Java","Php", "POP")
    drop1or.current(0)


    rpdrop2_or=ttk.Combobox(midFrame, textvariable=orfilter)
    rpdrop2_or["values"]=("Month to date","Year To Date","Current year","Current month","Current days", "Last 30 days", "Last 60 days", "Last 90 days","Previous month", "Previous year", "Custom Range")
    rpdrop2_or.place(x=530,y=50)
    rpdrop2_or.current(0)
    
    mainchartframe4 =Frame(reportframe,height=1500, width=200)
    mainchartframe4.pack(side="top", padx=0, pady=0)

    irwcuw1 = Label(reportframe,text="                                                                                                                                                               \n", bg="white")
    irwcuw1.place(x=2,y=90)


    lbl_invdtt2 =Label(reportframe, text="Report Result Preview", bg="white" , font=("arial", 16))
    lbl_invdtt2.place(x=2, y=87)
    irwcuw1 = Label(reportframe,text="                                                                                               ", bg="white")
    irwcuw1.place(x=1135, y=97)
    lbl_invdtt2 =Label(reportframe, text="Right Click on Preview For More Options", bg="white" , font=("arial",8 ))
    lbl_invdtt2.place(x=1140, y=97)

    frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
    frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
    frame.place(x=20,y=115)
    canvas=Canvas(
        frame,
        bg='grey',
        width=1400,
        height=1200,
        scrollregion=(0,0,1500, 1500)
        )

    vertibar=Scrollbar(
        frame,
        orient=VERTICAL
        )
    vertibar.pack(side=RIGHT,fill=Y)
    vertibar.config(command=canvas.yview)
    canvas.config(width=1310,height=600)

    canvas.config(
        yscrollcommand=vertibar.set
        )
    canvas.pack(expand=True,side=LEFT,fill=BOTH)
    canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
    
    canvas.create_text(620,300,text="No Data To Display",fill='black',font=("arial", 14), justify='center')

    canvas.create_text(625,350,text="Please sdelect the report type from the list above\nAfter you can set the date period or other parameters",fill='blue',font=("arial", 12), justify='center')

    canvas.create_text(620,400,text="Click on 'Run Report' button for the report result",fill='blue',font=("arial", 12), justify='center')
  
      #----------------------------------------------------------------------------------------------------
  elif menuvar=="Recurring Invoice Report":
    rprefreshlebel = Button(midFrame,compound="top", text="Refresh",relief=RAISED, image=photo8,bg="#f5f3f2", fg="black", height=55, bd=1, width=55,command=category_rir)
    rprefreshlebel.place(x=22,y=12)

    lbl_ir = Label(reportframe, text="    \n   \n   \n   \n   \n  ", bg="#f8f8f2")
    lbl_ir.place(x=0,y=500)
    lbl_ir = Label(reportframe, text="                                                                                     ", bg="white" , font=("arial", 8))
    lbl_ir.place(x=1110,y=85)
    rpprintlabel = Button(midFrame,compound="top", text="Print Chart",relief=RAISED, image=photo5,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command="create")
    rpprintlabel.place(x=95,y=12)
  

    rpsaveLabel = Button(midFrame,compound="top", text="Export Report\n to Excel",relief=RAISED, image=photo3,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command=lambda:exportcanvas4())
    rpsaveLabel.place(x=168,y=12)

    rpcopyLabel = Button(midFrame,compound="top", text="Export Report\n to PDF",relief=RAISED, image=copy,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command="convert")
    rpcopyLabel.place(x=240,y=12)

    
    pruw1 = Label(midFrame,text="                                    ", bg="#f8f8f2")
    pruw1.place(x=415,y=9)
    pruw2 = Label(midFrame,text="                                                                                                             \n                                                                                                                                                  \n                                                              \n                                                            ", bg="#f8f8f2")
    pruw2.place(x=530,y=9)

    mainchartframe5 =Frame(reportframe,height=1500, width=200)
    mainchartframe5.pack(side="top", padx=0, pady=0)

    irwcuw1 = Label(reportframe,text="                                                                                                                                                               \n", bg="white")
    irwcuw1.place(x=2,y=90)


    lbl_invdtt2 =Label(reportframe, text="Report Result Preview", bg="white" , font=("arial", 16))
    lbl_invdtt2.place(x=2, y=87)
    irwcuw1 = Label(reportframe,text="                                                                                               ", bg="white")
    irwcuw1.place(x=1135, y=97)
    lbl_invdtt2 =Label(reportframe, text="Right Click on Preview For More Options", bg="white" , font=("arial",8 ))
    lbl_invdtt2.place(x=1140, y=97)

    frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
    frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
    frame.place(x=20,y=115)
    canvas=Canvas(
        frame,
        bg='grey',
        width=1400,
        height=1200,
        scrollregion=(0,0,1500, 1500)
        )

    vertibar=Scrollbar(
        frame,
        orient=VERTICAL
        )
    vertibar.pack(side=RIGHT,fill=Y)
    vertibar.config(command=canvas.yview)
    canvas.config(width=1310,height=600)

    canvas.config(
        yscrollcommand=vertibar.set
        )
    canvas.pack(expand=True,side=LEFT,fill=BOTH)
    canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
    
    canvas.create_text(620,300,text="No Data To Display",fill='black',font=("arial", 14), justify='center')

    canvas.create_text(625,350,text="Please sdelect the report type from the list above\nAfter you can set the date period or other parameters",fill='blue',font=("arial", 12), justify='center')

    canvas.create_text(620,400,text="Click on 'Run Report' button for the report result",fill='blue',font=("arial", 12), justify='center')

      #----------------------------------------------------------------------------------------------------
  elif menuvar=="Past Due Invoices":

    rprefreshlebelpdi = Button(midFrame,compound="top", text="Refresh",relief=RAISED, image=photo8,bg="#f5f3f2", fg="black", height=55, bd=1, width=55,command=category_pdi)
    rprefreshlebelpdi.place(x=22,y=12)

    lbl_ir = Label(reportframe, text="    \n   \n   \n   \n   \n  ", bg="#f8f8f2")
    lbl_ir.place(x=0,y=500)
    lbl_ir = Label(reportframe, text="                                                                                     ", bg="white" , font=("arial", 8))
    lbl_ir.place(x=1110,y=85)
    rpprintlabelpdi = Button(midFrame,compound="top", text="Print Chart",relief=RAISED, image=photo5,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command="create")
    rpprintlabelpdi.place(x=95,y=12)
  

    rpsaveLabelpdi = Button(midFrame,compound="top", text="Export Report\n to Excel",relief=RAISED, image=photo3,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command=lambda:exportcanvas5())
    rpsaveLabelpdi.place(x=168,y=12)

    rpcopyLabelpdi = Button(midFrame,compound="top", text="Export Report\n to PDF",relief=RAISED, image=copy,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command="convert")
    rpcopyLabelpdi.place(x=240,y=12)
    
    pdiuw1 = Label(midFrame,text="                                    ", bg="#f8f8f2")
    pdiuw1.place(x=415,y=9)
    pdiuw2 = Label(midFrame,text="                                                                                                             \n                                                                                                                                                  \n                                                              \n                                                            ", bg="#f8f8f2")
    pdiuw2.place(x=530,y=9)


    lbl_pdi = Label(midFrame, text="Category:", bg="#f8f8f2")
    lbl_pdi.place(x=530,y=9)
    
    menupdi = StringVar()
    drop1pdi=ttk.Combobox(midFrame, textvariable=menupdi, width=30)
    drop1pdi.place(x=530,y=50)
    drop1pdi["values"]=("Java","Php", "POP")
    drop1pdi.current(0)

    mainchartframe6 =Frame(reportframe,height=1500, width=200)
    mainchartframe6.pack(side="top", padx=0, pady=0)

    irwcuw1 = Label(reportframe,text="                                                                                                                                                               \n", bg="white")
    irwcuw1.place(x=2,y=90)


    lbl_invdtt2 =Label(reportframe, text="Report Result Preview", bg="white" , font=("arial", 16))
    lbl_invdtt2.place(x=2, y=87)
    irwcuw1 = Label(reportframe,text="                                                                                               ", bg="white")
    irwcuw1.place(x=1135, y=97)
    lbl_invdtt2 =Label(reportframe, text="Right Click on Preview For More Options", bg="white" , font=("arial",8 ))
    lbl_invdtt2.place(x=1140, y=97)

    frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
    frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
    frame.place(x=20,y=115)
    canvas=Canvas(
        frame,
        bg='grey',
        width=1400,
        height=1200,
        scrollregion=(0,0,1500, 1500)
        )

    vertibar=Scrollbar(
        frame,
        orient=VERTICAL
        )
    vertibar.pack(side=RIGHT,fill=Y)
    vertibar.config(command=canvas.yview)
    canvas.config(width=1310,height=600)

    canvas.config(
        yscrollcommand=vertibar.set
        )
    canvas.pack(expand=True,side=LEFT,fill=BOTH)
    canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
    
    canvas.create_text(620,300,text="No Data To Display",fill='black',font=("arial", 14), justify='center')

    canvas.create_text(625,350,text="Please sdelect the report type from the list above\nAfter you can set the date period or other parameters",fill='blue',font=("arial", 12), justify='center')

    canvas.create_text(620,400,text="Click on 'Run Report' button for the report result",fill='blue',font=("arial", 12), justify='center')
    #----------------------------------------------------------------------------------------------------
  
  elif menuvar=="Customers List":
    rprefreshlebel = Button(midFrame,compound="top", text="Refresh",relief=RAISED, image=photo8,bg="#f5f3f2", fg="black", height=55, bd=1, width=55,command=category_cl)
    rprefreshlebel.place(x=22,y=12)
    lbl_ir = Label(reportframe, text="                                                                                     ", bg="white" , font=("arial", 8))
    lbl_ir.place(x=1110,y=85)
    rpprintlabel = Button(midFrame,compound="top", text="Print Chart",relief=RAISED, image=photo5,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command="create")
    rpprintlabel.place(x=95,y=12)
  

    rpsaveLabel = Button(midFrame,compound="top", text="Export Report\n to Excel",relief=RAISED, image=photo3,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command=lambda:exportcanvas6())
    rpsaveLabel.place(x=168,y=12)

    rpcopyLabel = Button(midFrame,compound="top", text="Export Report\n to PDF",relief=RAISED, image=copy,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command="convert")
    rpcopyLabel.place(x=240,y=12)


    pdiuw1 = Label(midFrame,text="                                    ", bg="#f8f8f2")
    pdiuw1.place(x=415,y=9)

    cluw2 = Label(midFrame,text="                                                                                                             \n                                                                                                                                                  \n                                                              \n                                                            ", bg="#f8f8f2")
    cluw2.place(x=530,y=9)


    lbl_cl = Label(midFrame, text=" Select Customer Category:", bg="#f8f8f2")
    lbl_cl.place(x=530,y=9)
    

    drop1cl=ttk.Combobox(midFrame, textvariable=clfilter, width=30)
    drop1cl.place(x=530,y=50)
    drop1cl["values"]=("All Customers ","Default")
    drop1cl.current(0)

    
    rpchkbtn1_cl = Checkbutton(midFrame, text = "Active", variable = rpcheckvar1_cl, onvalue = 1, offvalue = 0, height = 2, width = 8, bg="#f8f8f2",command=lambda:check_cl())
    rpchkbtn1_cl.place(x=725,y=2)
    rpchkbtn1_cl.select()

    
    rpchkbtn1_cl = Checkbutton(midFrame, text = "Inactive", variable = rpcheckvar2_cl, onvalue = 1, offvalue = 0, height = 2, width = 8, bg="#f8f8f2", command=lambda:check_cl())
    rpchkbtn1_cl.place(x=730,y=40)
    rpchkbtn1_cl.select()
    
    mainchartframe7 =Frame(reportframe,height=1500, width=200)
    mainchartframe7.pack(side="top", padx=0, pady=0)

    irwcuw1 = Label(reportframe,text="                                                                                                                                                               \n", bg="white")
    irwcuw1.place(x=2,y=90)


    lbl_invdtt2 =Label(reportframe, text="Report Result Preview", bg="white" , font=("arial", 16))
    lbl_invdtt2.place(x=2, y=87)
    irwcuw1 = Label(reportframe,text="                                                                                               ", bg="white")
    irwcuw1.place(x=1135, y=97)
    lbl_invdtt2 =Label(reportframe, text="Right Click on Preview For More Options", bg="white" , font=("arial",8 ))
    lbl_invdtt2.place(x=1140, y=97)

    frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
    frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
    frame.place(x=20,y=115)
    canvas=Canvas(
        frame,
        bg='grey',
        width=1400,
        height=1200,
        scrollregion=(0,0,1500, 1500)
        )

    vertibar=Scrollbar(
        frame,
        orient=VERTICAL
        )
    vertibar.pack(side=RIGHT,fill=Y)
    vertibar.config(command=canvas.yview)
    canvas.config(width=1310,height=600)

    canvas.config(
        yscrollcommand=vertibar.set
        )
    canvas.pack(expand=True,side=LEFT,fill=BOTH)
    canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
    
    canvas.create_text(620,300,text="No Data To Display",fill='black',font=("arial", 14), justify='center')

    canvas.create_text(625,350,text="Please sdelect the report type from the list above\nAfter you can set the date period or other parameters",fill='blue',font=("arial", 12), justify='center')

    canvas.create_text(620,400,text="Click on 'Run Report' button for the report result",fill='blue',font=("arial", 12), justify='center')
    #----------------------------------------------------------------------------------------------------
  
  elif menuvar=="Customers List(Detailed)":
    lbl_ir = Label(reportframe, text="    \n   \n   \n   \n   \n  ", bg="#f8f8f2")
    lbl_ir.place(x=0,y=500)
    lbl_ir = Label(reportframe, text="                                                                                     ", bg="white" , font=("arial", 8))
    lbl_ir.place(x=1110,y=85)
    rprefreshlebel = Button(midFrame,compound="top", text="Refresh",relief=RAISED, image=photo8,bg="#f5f3f2", fg="black", height=55, bd=1, width=55,command=category_cld)
    rprefreshlebel.place(x=22,y=12)


    rpprintlabel = Button(midFrame,compound="top", text="Print Chart",relief=RAISED, image=photo5,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command="create")
    rpprintlabel.place(x=95,y=12)
  

    rpsaveLabel = Button(midFrame,compound="top", text="Export Report\n to Excel",relief=RAISED, image=photo3,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command=lambda:exportcanvas7())
    rpsaveLabel.place(x=168,y=12)

    rpcopyLabel = Button(midFrame,compound="top", text="Export Report\n to PDF",relief=RAISED, image=copy,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command="convert")
    rpcopyLabel.place(x=240,y=12)

    cluw2 = Label(midFrame,text="                                                                                                             \n                                                                                                                                                  \n                                                              \n                                                            ", bg="#f8f8f2")
    cluw2.place(x=530,y=9)


    lbl_cl = Label(midFrame, text=" Select Customer Category:", bg="#f8f8f2")
    lbl_cl.place(x=530,y=9)
    
    menucl = StringVar()
    drop1cl=ttk.Combobox(midFrame, textvariable=cldfilter, width=30)
    drop1cl.place(x=530,y=50)
    drop1cl["values"]=("All Customers ","Default")
    drop1cl.current(0)

    rpchkbtn1_cl = Checkbutton(midFrame, text = "Active", variable = rpcheckvar1_cld, onvalue = 1, offvalue = 0, height = 2, width = 8, bg="#f8f8f2",command=lambda:check_cld())
    rpchkbtn1_cl.place(x=725,y=2)
    rpchkbtn1_cl.select()

    rpchkbtn1_cl = Checkbutton(midFrame, text = "Inactive", variable = rpcheckvar2_cld, onvalue = 1, offvalue = 0, height = 2, width = 8, bg="#f8f8f2", command=lambda:check_cld())
    rpchkbtn1_cl.place(x=730,y=40)
    rpchkbtn1_cl.select()

    mainchartframe8 =Frame(reportframe,height=1500, width=200)
    mainchartframe8.pack(side="top", padx=0, pady=0)

    irwcuw1 = Label(reportframe,text="                                                                                                                                                               \n", bg="white")
    irwcuw1.place(x=2,y=90)


    lbl_invdtt2 =Label(reportframe, text="Report Result Preview", bg="white" , font=("arial", 16))
    lbl_invdtt2.place(x=2, y=87)
    irwcuw1 = Label(reportframe,text="                                                                                               ", bg="white")
    irwcuw1.place(x=1135, y=97)
    lbl_invdtt2 =Label(reportframe, text="Right Click on Preview For More Options", bg="white" , font=("arial",8 ))
    lbl_invdtt2.place(x=1140, y=97)

    frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
    frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
    frame.place(x=20,y=115)
    canvas=Canvas(
        frame,
        bg='grey',
        width=1400,
        height=1200,
        scrollregion=(0,0,1500, 1500)
        )

    vertibar=Scrollbar(
        frame,
        orient=VERTICAL
        )
    vertibar.pack(side=RIGHT,fill=Y)
    vertibar.config(command=canvas.yview)
    canvas.config(width=1310,height=600)

    canvas.config(
        yscrollcommand=vertibar.set
        )
    canvas.pack(expand=True,side=LEFT,fill=BOTH)
    canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
    
    canvas.create_text(620,300,text="No Data To Display",fill='black',font=("arial", 14), justify='center')

    canvas.create_text(625,350,text="Please sdelect the report type from the list above\nAfter you can set the date period or other parameters",fill='blue',font=("arial", 12), justify='center')

    canvas.create_text(620,400,text="Click on 'Run Report' button for the report result",fill='blue',font=("arial", 12), justify='center')
    #----------------------------------------------------------------------------------------------------
  
  elif menuvar=="Product/Service List":
    lbl_ir = Label(reportframe, text="    \n   \n   \n   \n   \n  ", bg="#f8f8f2")
    lbl_ir.place(x=0,y=500)

    rprefreshlebel = Button(midFrame,compound="top", text="Refresh",relief=RAISED, image=photo8,bg="#f5f3f2", fg="black", height=55, bd=1, width=55,command=category_psl)
    rprefreshlebel.place(x=22,y=12)
    lbl_ir = Label(reportframe, text="                                                                                     ", bg="white" , font=("arial", 8))
    lbl_ir.place(x=1110,y=85)
    rpprintlabel = Button(midFrame,compound="top", text="Print Chart",relief=RAISED, image=photo5,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command="create")
    rpprintlabel.place(x=95,y=12)
  

    rpsaveLabel = Button(midFrame,compound="top", text="Export Report\n to Excel",relief=RAISED, image=photo3,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command=lambda:exportcanvas8())
    rpsaveLabel.place(x=168,y=12)

    rpcopyLabel = Button(midFrame,compound="top", text="Export Report\n to PDF",relief=RAISED, image=copy,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command="convert")
    rpcopyLabel.place(x=240,y=12) 

    psluw1 = Label(midFrame,text="                                    ", bg="#f8f8f2")
    psluw1.place(x=415,y=9)

    psluw2 = Label(midFrame,text="                                                                                                             \n                                                                                                                                                  \n                                                              \n                                                            ", bg="#f8f8f2")
    psluw2.place(x=530,y=9)


    lbl_psl = Label(midFrame, text=" Select Product Category:", bg="#f8f8f2")
    lbl_psl.place(x=530,y=9)
    
    menupsl = StringVar()
    drop1psl=ttk.Combobox(midFrame, textvariable=pslfilter, width=30)
    drop1psl.place(x=530,y=50)
    drop1psl["values"]=("All product and Services ", "All products", "All Service","Default")
    drop1psl.current(0)

    
    rpchkbtn1_psl = Checkbutton(midFrame, text = "Active", variable = rpcheckvar1_psl, onvalue = 1, offvalue = 0, height = 2, width = 8, bg="#f8f8f2",command=lambda:check_psl())
    rpchkbtn1_psl.place(x=725,y=2)
    rpchkbtn1_psl.select()
    
    rpchkbtn1_psl = Checkbutton(midFrame, text = "Inactive", variable = rpcheckvar2_psl, onvalue = 1, offvalue = 0, height = 2, width = 8, bg="#f8f8f2", command=lambda:check_psl())
    rpchkbtn1_psl.place(x=730,y=40)
    rpchkbtn1_psl.select()
    mainchartframe9 =Frame(reportframe,height=1500, width=200)
    mainchartframe9.pack(side="top", padx=0, pady=0)

    irwcuw1 = Label(reportframe,text="                                                                                                                                                               \n", bg="white")
    irwcuw1.place(x=2,y=90)


    lbl_invdtt2 =Label(reportframe, text="Report Result Preview", bg="white" , font=("arial", 16))
    lbl_invdtt2.place(x=2, y=87)
    irwcuw1 = Label(reportframe,text="                                                                                               ", bg="white")
    irwcuw1.place(x=1135, y=97)
    lbl_invdtt2 =Label(reportframe, text="Right Click on Preview For More Options", bg="white" , font=("arial",8 ))
    lbl_invdtt2.place(x=1140, y=97)

    frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
    frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
    frame.place(x=20,y=115)
    canvas=Canvas(
        frame,
        bg='grey',
        width=1400,
        height=1200,
        scrollregion=(0,0,1500, 1500)
        )

    vertibar=Scrollbar(
        frame,
        orient=VERTICAL
        )
    vertibar.pack(side=RIGHT,fill=Y)
    vertibar.config(command=canvas.yview)
    canvas.config(width=1310,height=600)

    canvas.config(
        yscrollcommand=vertibar.set
        )
    canvas.pack(expand=True,side=LEFT,fill=BOTH)
    canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
    
    canvas.create_text(620,300,text="No Data To Display",fill='black',font=("arial", 14), justify='center')

    canvas.create_text(625,350,text="Please sdelect the report type from the list above\nAfter you can set the date period or other parameters",fill='blue',font=("arial", 12), justify='center')

    canvas.create_text(620,400,text="Click on 'Run Report' button for the report result",fill='blue',font=("arial", 12), justify='center')

      #----------------------------------------------------------------------------------------------------

  elif menuvar=="Price List":
    rprefreshlebel = Button(midFrame,compound="top", text="Refresh",relief=RAISED, image=photo8,bg="#f5f3f2", fg="black", height=55, bd=1, width=55,command=category_prl)
    rprefreshlebel.place(x=22,y=12)

    lbl_ir = Label(reportframe, text="    \n   \n   \n   \n   \n  ", bg="#f8f8f2")
    lbl_ir.place(x=0,y=500)
    lbl_ir = Label(reportframe, text="                                                                                     ", bg="white" , font=("arial", 8))
    lbl_ir.place(x=1110,y=85)

    rpprintlabel = Button(midFrame,compound="top", text="Print Chart",relief=RAISED, image=photo5,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command="create")
    rpprintlabel.place(x=95,y=12)
  

    rpsaveLabel = Button(midFrame,compound="top", text="Export Report\n to Excel",relief=RAISED, image=photo3,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command=lambda:exportcanvas9())
    rpsaveLabel.place(x=168,y=12)

    rpcopyLabel = Button(midFrame,compound="top", text="Export Report\n to PDF",relief=RAISED, image=copy,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command="convert")
    rpcopyLabel.place(x=240,y=12)

    pluw1 = Label(midFrame,text="                                    ", bg="#f8f8f2")
    pluw1.place(x=415,y=9)

    pluw2 = Label(midFrame,text="                                                                                                             \n                                                                                                                                                  \n                                                              \n                                                            ", bg="#f8f8f2")
    pluw2.place(x=530,y=9)


    lbl_pl = Label(midFrame, text=" Select Product Category:", bg="#f8f8f2")
    lbl_pl.place(x=530,y=9)
    
    menupl = StringVar()
    drop1pl=ttk.Combobox(midFrame, textvariable=prlfilter, width=30)
    drop1pl.place(x=530,y=50)
    drop1pl["values"]=("All product and Services ", "All products", "All Service","Default")
    drop1pl.current(0)

    
    rpchkbtn1_pl = Checkbutton(midFrame, text = "Active", variable = rpcheckvar1_pl, onvalue = 1, offvalue = 0, height = 2, width = 8, bg="#f8f8f2",command=lambda:check_pl())
    rpchkbtn1_pl.place(x=725,y=2)
    rpchkbtn1_pl.select()

    
    rpchkbtn1_pl = Checkbutton(midFrame, text = "Inactive", variable = rpcheckvar2_pl, onvalue = 1, offvalue = 0, height = 2, width = 8, bg="#f8f8f2", command=lambda:check_pl())
    rpchkbtn1_pl.place(x=730,y=40)
    rpchkbtn1_pl.select()

    mainchartframe10 =Frame(reportframe,height=1500, width=200)
    mainchartframe10.pack(side="top", padx=0, pady=0)

    irwcuw1 = Label(reportframe,text="                                                                                                                                                               \n", bg="white")
    irwcuw1.place(x=2,y=90)


    lbl_invdtt2 =Label(reportframe, text="Report Result Preview", bg="white" , font=("arial", 16))
    lbl_invdtt2.place(x=2, y=87)
    irwcuw1 = Label(reportframe,text="                                                                                               ", bg="white")
    irwcuw1.place(x=1135, y=97)
    lbl_invdtt2 =Label(reportframe, text="Right Click on Preview For More Options", bg="white" , font=("arial",8 ))
    lbl_invdtt2.place(x=1140, y=97)

    frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
    frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
    frame.place(x=20,y=115)
    canvas=Canvas(
        frame,
        bg='grey',
        width=1400,
        height=1200,
        scrollregion=(0,0,1500, 1500)
        )

    vertibar=Scrollbar(
        frame,
        orient=VERTICAL
        )
    vertibar.pack(side=RIGHT,fill=Y)
    vertibar.config(command=canvas.yview)
    canvas.config(width=1310,height=600)

    canvas.config(
        yscrollcommand=vertibar.set
        )
    canvas.pack(expand=True,side=LEFT,fill=BOTH)
    canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
    
    canvas.create_text(620,300,text="No Data To Display",fill='black',font=("arial", 14), justify='center')

    canvas.create_text(625,350,text="Please sdelect the report type from the list above\nAfter you can set the date period or other parameters",fill='blue',font=("arial", 12), justify='center')

    canvas.create_text(620,400,text="Click on 'Run Report' button for the report result",fill='blue',font=("arial", 12), justify='center')
    #----------------------------------------------------------------------------------------------------
  
  elif menuvar=="Products Low Stock Report":
    rprefreshlebel = Button(midFrame,compound="top", text="Refresh",relief=RAISED, image=photo8,bg="#f5f3f2", fg="black", height=55, bd=1, width=55,command=category_plsr)
    rprefreshlebel.place(x=22,y=12)
    lbl_ir = Label(reportframe, text="    \n   \n   \n   \n   \n  ", bg="#f8f8f2")
    lbl_ir.place(x=0,y=500)
    lbl_ir = Label(reportframe, text="                                                                                     ", bg="white" , font=("arial", 8))
    lbl_ir.place(x=1110,y=85)
    rpprintlabel = Button(midFrame,compound="top", text="Print Chart",relief=RAISED, image=photo5,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command="create")
    rpprintlabel.place(x=95,y=12)
  

    rpsaveLabel = Button(midFrame,compound="top", text="Export Report\n to Excel",relief=RAISED, image=photo3,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command=lambda:exportcanvas10())
    rpsaveLabel.place(x=168,y=12)

    rpcopyLabel = Button(midFrame,compound="top", text="Export Report\n to PDF",relief=RAISED, image=copy,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command="convert")
    rpcopyLabel.place(x=240,y=12)

    plruw1 = Label(midFrame,text="                                    ", bg="#f8f8f2")
    plruw1.place(x=415,y=9)

    plruw2 = Label(midFrame,text="                                                                                                             \n                                                                                                                                                  \n                                                              \n                                                            ", bg="#f8f8f2")
    plruw2.place(x=530,y=9)


    
    rpchkbtn1_plr = Checkbutton(midFrame, text = "Active", variable = rpcheckvar1_plr, onvalue = 1, offvalue = 0, height = 2, width = 8, bg="#f8f8f2",command=lambda:check_plsr())
    rpchkbtn1_plr.place(x=530,y=2)
    rpchkbtn1_plr.select()
 
    rpchkbtn1_plr = Checkbutton(midFrame, text = "Inactive", variable = rpcheckvar2_plr, onvalue = 1, offvalue = 0, height = 2, width = 8, bg="#f8f8f2", command=lambda:check_plsr())
    rpchkbtn1_plr.place(x=535,y=40)
    rpchkbtn1_plr.select()

    mainchartframe11 =Frame(reportframe,height=1500, width=200)
    mainchartframe11.pack(side="top", padx=0, pady=0)

    irwcuw1 = Label(reportframe,text="                                                                                                                                                               \n", bg="white")
    irwcuw1.place(x=2,y=90)


    lbl_invdtt2 =Label(reportframe, text="Report Result Preview", bg="white" , font=("arial", 16))
    lbl_invdtt2.place(x=2, y=87)
    irwcuw1 = Label(reportframe,text="                                                                                               ", bg="white")
    irwcuw1.place(x=1135, y=97)
    lbl_invdtt2 =Label(reportframe, text="Right Click on Preview For More Options", bg="white" , font=("arial",8 ))
    lbl_invdtt2.place(x=1140, y=97)

    frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
    frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
    frame.place(x=20,y=115)
    canvas=Canvas(
        frame,
        bg='grey',
        width=1400,
        height=1200,
        scrollregion=(0,0,1500, 1500)
        )

    vertibar=Scrollbar(
        frame,
        orient=VERTICAL
        )
    vertibar.pack(side=RIGHT,fill=Y)
    vertibar.config(command=canvas.yview)
    canvas.config(width=1310,height=600)

    canvas.config(
        yscrollcommand=vertibar.set
        )
    canvas.pack(expand=True,side=LEFT,fill=BOTH)
    canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
    
    canvas.create_text(620,300,text="No Data To Display",fill='black',font=("arial", 14), justify='center')

    canvas.create_text(625,350,text="Please sdelect the report type from the list above\nAfter you can set the date period or other parameters",fill='blue',font=("arial", 12), justify='center')

    canvas.create_text(620,400,text="Click on 'Run Report' button for the report result",fill='blue',font=("arial", 12), justify='center')
   
    #----------------------------------------------------------------------------------------------------
  elif menuvar=="Tax Report(Invoices)":
    rprefreshlebel = Button(midFrame,compound="top", text="Refresh",relief=RAISED, image=photo8,bg="#f5f3f2", fg="black", height=55, bd=1, width=55,command=category_tri)
    rprefreshlebel.place(x=22,y=12)

    lbl_ir = Label(reportframe, text="    \n   \n   \n   \n   \n  ", bg="#f8f8f2")
    lbl_ir.place(x=0,y=500)
    lbl_ir = Label(reportframe, text="                                                                                     ", bg="white" , font=("arial", 8))
    lbl_ir.place(x=1110,y=85)
    rpprintlabel = Button(midFrame,compound="top", text="Print Chart",relief=RAISED, image=photo5,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command="create")
    rpprintlabel.place(x=95,y=12)
  

    rpsaveLabel = Button(midFrame,compound="top", text="Export Report\n to Excel",relief=RAISED, image=photo3,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command=lambda:exportcanvas11())
    rpsaveLabel.place(x=168,y=12)

    rpcopyLabel = Button(midFrame,compound="top", text="Export Report\n to PDF",relief=RAISED, image=copy,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command="convert")
    rpcopyLabel.place(x=240,y=12)

    triuw1 = Label(midFrame,text="                                    ", bg="#f8f8f2")
    triuw1.place(x=415,y=9)

    triuw2 = Label(midFrame,text="                                                                                                             \n                                                                                                                                                  \n                                                              \n                                                            ", bg="#f8f8f2")
    triuw2.place(x=530,y=9)

    lbl_tri =Label(midFrame, text="From:" , bg="#f8f8f2")
    lbl_tri.place(x=676,y=10)

    global trifrm1
    global trito1
    trifrm1=DateEntry(midFrame, textvariable=trifrm)
    trifrm1.place(x=721,y=10)

    lbl_tri =Label(midFrame, text="To:", bg="#f8f8f2")
    lbl_tri.place(x=690,y=50)

    trito1=DateEntry(midFrame, textvariable=trito)
    trito1.place(x=721,y=50)

    lbl_tri = Label(midFrame, text="Category:", bg="#f8f8f2")
    lbl_tri.place(x=470,y=10)

    menutri = StringVar()
    drop1tri=ttk.Combobox(midFrame, textvariable=menutri)
    drop1tri.place(x=530,y=10)
    drop1tri["values"]=("Java","Php", "POP")
    drop1tri.current(0)


    rpdrop2_tri=ttk.Combobox(midFrame, textvariable=trifilter)
    rpdrop2_tri["values"]=("Month to date","Year To Date","Current year","Current month","Current days", "Last 30 days", "Last 60 days", "Last 90 days","Previous month", "Previous year", "Custom Range")
    rpdrop2_tri.place(x=530,y=50)
    rpdrop2_tri.current(0)
      

    
    rpchkbtn1_tri= Checkbutton(midFrame, text = "Paid", variable = rpcheckvar1_tri, onvalue = 1, offvalue = 0, height = 2, width = 8, bg="#f8f8f2",command=lambda:check_tri())
    rpchkbtn1_tri.place(x=815,y=2)
    rpchkbtn1_tri.select()
    
    rpchkbtn1_tri = Checkbutton(midFrame, text = "Void", variable = rpcheckvar2_tri, onvalue = 1, offvalue = 0, height = 2, width = 8, bg="#f8f8f2", command=lambda:check_tri())
    rpchkbtn1_tri.place(x=815,y=40)
    rpchkbtn1_tri.select()

    rpchkbtn1_tri = Checkbutton(midFrame, text = "Unpaid", variable = rpcheckvar3_tri, onvalue = 1, offvalue = 0, height = 2, width = 8, bg="#f8f8f2", command=lambda:check_tri())
    rpchkbtn1_tri.place(x=883,y=2)
    rpchkbtn1_tri.select()
    
    mainchartframe12 =Frame(reportframe,height=1500, width=200)
    mainchartframe12.pack(side="top", padx=0, pady=0)

    irwcuw1 = Label(reportframe,text="                                                                                                                                                               \n", bg="white")
    irwcuw1.place(x=2,y=90)


    lbl_invdtt2 =Label(reportframe, text="Report Result Preview", bg="white" , font=("arial", 16))
    lbl_invdtt2.place(x=2, y=87)
    irwcuw1 = Label(reportframe,text="                                                                                               ", bg="white")
    irwcuw1.place(x=1135, y=97)
    lbl_invdtt2 =Label(reportframe, text="Right Click on Preview For More Options", bg="white" , font=("arial",8 ))
    lbl_invdtt2.place(x=1140, y=97)

    frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
    frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
    frame.place(x=20,y=115)
    canvas=Canvas(
        frame,
        bg='grey',
        width=1400,
        height=1200,
        scrollregion=(0,0,1500, 1500)
        )

    vertibar=Scrollbar(
        frame,
        orient=VERTICAL
        )
    vertibar.pack(side=RIGHT,fill=Y)
    vertibar.config(command=canvas.yview)
    canvas.config(width=1310,height=600)

    canvas.config(
        yscrollcommand=vertibar.set
        )
    canvas.pack(expand=True,side=LEFT,fill=BOTH)
    canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
    
    canvas.create_text(620,300,text="No Data To Display",fill='black',font=("arial", 14), justify='center')

    canvas.create_text(625,350,text="Please sdelect the report type from the list above\nAfter you can set the date period or other parameters",fill='blue',font=("arial", 12), justify='center')

    canvas.create_text(620,400,text="Click on 'Run Report' button for the report result",fill='blue',font=("arial", 12), justify='center')

    #----------------------------------------------------------------------------------------------------
  elif menuvar=="Tax Report(Orders)":
    rprefreshlebel = Button(midFrame,compound="top", text="Refresh",relief=RAISED, image=photo8,bg="#f5f3f2", fg="black", height=55, bd=1, width=55,command=category_tro)
    rprefreshlebel.place(x=22,y=12)

    lbl_ir = Label(reportframe, text="    \n   \n   \n   \n   \n  ", bg="#f8f8f2")
    lbl_ir.place(x=0,y=500)
    lbl_ir = Label(reportframe, text="                                                                                     ", bg="white" , font=("arial", 8))
    lbl_ir.place(x=1110,y=85)
    rpprintlabel = Button(midFrame,compound="top", text="Print Chart",relief=RAISED, image=photo5,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command="create")
    rpprintlabel.place(x=95,y=12)
  

    rpsaveLabel = Button(midFrame,compound="top", text="Export Report\n to Excel",relief=RAISED, image=photo3,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command=lambda:exportcanvas12())
    rpsaveLabel.place(x=168,y=12)

    rpcopyLabel = Button(midFrame,compound="top", text="Export Report\n to PDF",relief=RAISED, image=copy,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command="convert")
    rpcopyLabel.place(x=240,y=12)


    trouw1 = Label(midFrame,text="                                    ", bg="#f8f8f2")
    trouw1.place(x=415,y=9)

    trouw2 = Label(midFrame,text="                                                                                                             \n                                                                                                                                                  \n                                                              \n                                                            ", bg="#f8f8f2")
    trouw2.place(x=530,y=9)

    lbl_tro =Label(midFrame, text="From:" , bg="#f8f8f2")
    lbl_tro.place(x=676,y=10)
    global trofrm1
    global troto1
    trofrm1=DateEntry(midFrame, textvariable=trofrm)
    trofrm1.place(x=721,y=10)

    lbl_tro =Label(midFrame, text="To:", bg="#f8f8f2")
    lbl_tro.place(x=690,y=50)

    troto1=DateEntry(midFrame, textvariable=troto)
    troto1.place(x=721,y=50)

    lbl_tro = Label(midFrame, text="Category:", bg="#f8f8f2")
    lbl_tro.place(x=470,y=10)

    menutro = StringVar()
    drop1tro=ttk.Combobox(midFrame, textvariable=menutro)
    drop1tro.place(x=530,y=10)
    drop1tro["values"]=("Java","Php", "POP")
    drop1tro.current(0)
  
 
    rpdrop2_tro=ttk.Combobox(midFrame, textvariable=trofilter,)
    rpdrop2_tro["values"]=("Month to date","Year To Date","Current year","Current month","Current days", "Last 30 days", "Last 60 days", "Last 90 days","Previous month", "Previous year", "Custom Range")
    rpdrop2_tro.place(x=530,y=50)
    rpdrop2_tro.current(0)
    
    mainchartframe13 =Frame(reportframe,height=1500, width=200)
    mainchartframe13.pack(side="top", padx=0, pady=0)

    irwcuw1 = Label(reportframe,text="                                                                                                                                                               \n", bg="white")
    irwcuw1.place(x=2,y=90)


    lbl_invdtt2 =Label(reportframe, text="Report Result Preview", bg="white" , font=("arial", 16))
    lbl_invdtt2.place(x=2, y=87)
    irwcuw1 = Label(reportframe,text="                                                                                               ", bg="white")
    irwcuw1.place(x=1135, y=97)
    lbl_invdtt2 =Label(reportframe, text="Right Click on Preview For More Options", bg="white" , font=("arial",8 ))
    lbl_invdtt2.place(x=1140, y=97)

    frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
    frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
    frame.place(x=20,y=115)
    canvas=Canvas(
        frame,
        bg='grey',
        width=1400,
        height=1200,
        scrollregion=(0,0,1500, 1500)
        )

    vertibar=Scrollbar(
        frame,
        orient=VERTICAL
        )
    vertibar.pack(side=RIGHT,fill=Y)
    vertibar.config(command=canvas.yview)
    canvas.config(width=1310,height=600)

    canvas.config(
        yscrollcommand=vertibar.set
        )
    canvas.pack(expand=True,side=LEFT,fill=BOTH)
    canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
    
    canvas.create_text(620,300,text="No Data To Display",fill='black',font=("arial", 14), justify='center')

    canvas.create_text(625,350,text="Please sdelect the report type from the list above\nAfter you can set the date period or other parameters",fill='blue',font=("arial", 12), justify='center')

    canvas.create_text(620,400,text="Click on 'Run Report' button for the report result",fill='blue',font=("arial", 12), justify='center')
    #----------------------------------------------------------------------------------------------------
  
  elif menuvar=="Sales Report(group by date)":
    rprefreshlebel = Button(midFrame,compound="top", text="Refresh",relief=RAISED, image=photo8,bg="#f5f3f2", fg="black", height=55, bd=1, width=55,command=category_srgd)
    rprefreshlebel.place(x=22,y=12)

    lbl_ir = Label(reportframe, text="    \n   \n   \n   \n   \n  ", bg="#f8f8f2")
    lbl_ir.place(x=0,y=500)
    lbl_ir = Label(reportframe, text="                                                                                     ", bg="white" , font=("arial", 8))
    lbl_ir.place(x=1110,y=85)
    rpprintlabel = Button(midFrame,compound="top", text="Print Chart",relief=RAISED, image=photo5,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command="create")
    rpprintlabel.place(x=95,y=12)
  

    rpsaveLabel = Button(midFrame,compound="top", text="Export Report\n to Excel",relief=RAISED, image=photo3,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command=lambda:exportcanvas13())
    rpsaveLabel.place(x=168,y=12)

    rpcopyLabel = Button(midFrame,compound="top", text="Export Report\n to PDF",relief=RAISED, image=copy,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command="convert")
    rpcopyLabel.place(x=240,y=12)

    sruw1 = Label(midFrame,text="                                    ", bg="#f8f8f2")
    sruw1.place(x=415,y=9)

    sruw2 = Label(midFrame,text="                                                                                                             \n                                                                                                                                                  \n                                                              \n                                                            ", bg="#f8f8f2")
    sruw2.place(x=530,y=9)

    lbl_sr =Label(midFrame, text="From:" , bg="#f8f8f2")
    lbl_sr.place(x=728,y=10)

    global srgd_frm
    global srgd_to
    srgd_frm=DateEntry(midFrame, textvariable=srgdfrm)
    srgd_frm.place(x=773,y=10)

    lbl_sr =Label(midFrame, text="To:", bg="#f8f8f2")
    lbl_sr.place(x=743,y=50)

    srgd_to=DateEntry(midFrame, textvariable=srgdto)
    srgd_to.place(x=773,y=50)

    lbl_sr = Label(midFrame, text="Category:", bg="#f8f8f2")
    lbl_sr.place(x=470,y=10)

    menusr = StringVar()
    drop1sr=ttk.Combobox(midFrame, textvariable=menusr, width=30)
    drop1sr.place(x=530,y=10)
    drop1sr["values"]=("0")
    drop1sr.current(0)

    rpdrop2_sr=ttk.Combobox(midFrame, textvariable=srgdfilter,width=30)
    
            
    sql_inv_dt='SELECT name from productservice'
    
    fbcursor.execute(sql_inv_dt)
    tre=fbcursor.fetchall()
    
      
    
    rpdrop2_sr["values"]=tre
        

    rpdrop2_sr.place(x=530,y=50)
    rpdrop2_sr.current(0)


    mainchartframe14 =Frame(reportframe,height=1500, width=200)
    mainchartframe14.pack(side="top", padx=0, pady=0)

    irwcuw1 = Label(reportframe,text="                                                                                                                                                               \n", bg="white")
    irwcuw1.place(x=2,y=90)


    lbl_invdtt2 =Label(reportframe, text="Report Result Preview", bg="white" , font=("arial", 16))
    lbl_invdtt2.place(x=2, y=87)
    irwcuw1 = Label(reportframe,text="                                                                                               ", bg="white")
    irwcuw1.place(x=1135, y=97)
    lbl_invdtt2 =Label(reportframe, text="Right Click on Preview For More Options", bg="white" , font=("arial",8 ))
    lbl_invdtt2.place(x=1140, y=97)

    frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
    frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
    frame.place(x=20,y=115)
    canvas=Canvas(
        frame,
        bg='grey',
        width=1400,
        height=1200,
        scrollregion=(0,0,1500, 1500)
        )

    vertibar=Scrollbar(
        frame,
        orient=VERTICAL
        )
    vertibar.pack(side=RIGHT,fill=Y)
    vertibar.config(command=canvas.yview)
    canvas.config(width=1310,height=600)

    canvas.config(
        yscrollcommand=vertibar.set
        )
    canvas.pack(expand=True,side=LEFT,fill=BOTH)
    canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
    
    canvas.create_text(620,300,text="No Data To Display",fill='black',font=("arial", 14), justify='center')

    canvas.create_text(625,350,text="Please sdelect the report type from the list above\nAfter you can set the date period or other parameters",fill='blue',font=("arial", 12), justify='center')

    canvas.create_text(620,400,text="Click on 'Run Report' button for the report result",fill='blue',font=("arial", 12), justify='center')

      #----------------------------------------------------------------------------------------------------
  elif menuvar=="Invoice Report(Detailed)":
    rprefreshlebel = Button(midFrame,compound="top", text="Refresh",relief=RAISED, image=photo8,bg="#f5f3f2", fg="black", height=55, bd=1, width=55,command=category_ird)
    rprefreshlebel.place(x=22,y=12)

    lbl_ir = Label(reportframe, text="    \n   \n   \n   \n   \n  ", bg="#f8f8f2")
    lbl_ir.place(x=0,y=500)
    lbl_ir = Label(reportframe, text="                                                                                     ", bg="white" , font=("arial", 8))
    lbl_ir.place(x=1110,y=85)
    rpprintlabel = Button(midFrame,compound="top", text="Print Chart",relief=RAISED, image=photo5,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command="create")
    rpprintlabel.place(x=95,y=12)
  

    rpsaveLabel = Button(midFrame,compound="top", text="Export Report\n to Excel",relief=RAISED, image=photo3,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command=lambda:exportcanvas14())
    rpsaveLabel.place(x=168,y=12)

    rpcopyLabel = Button(midFrame,compound="top", text="Export Report\n to PDF",relief=RAISED, image=copy,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command="convert")
    rpcopyLabel.place(x=240,y=12)
    plruw1 = Label(midFrame,text="                                    ", bg="#f8f8f2")
    plruw1.place(x=415,y=9)

    irduw2 = Label(midFrame,text="                                                                                                             \n                                                                                                                                                  \n                                                              \n                                                            ", bg="#f8f8f2")
    irduw2.place(x=530,y=9)

    lbl_ird =Label(midFrame, text="From:" , bg="#f8f8f2")
    lbl_ird.place(x=728,y=10)
     
    global irdfrm1
    global irdfrm2 
    irdfrm1=DateEntry(midFrame, textvariable=irdfrm)
    irdfrm1.place(x=773,y=10)

    lbl_ird =Label(midFrame, text="To:", bg="#f8f8f2")
    lbl_ird.place(x=743,y=50)

    irdfrm2=DateEntry(midFrame, textvariable=irdto)
    irdfrm2.place(x=773,y=50)

    lbl_ird = Label(midFrame, text="Category:", bg="#f8f8f2")
    lbl_ird.place(x=470,y=10)

    menuird = StringVar()
    drop1ird=ttk.Combobox(midFrame, textvariable=menuird, width=30)
    drop1ird.place(x=530,y=10)
    drop1ird["values"]=("Java","Php", "POP")
    drop1ird.current(0) 

    rpdrop2_ird=ttk.Combobox(midFrame, textvariable=irdfilter,width=30)
    rpdrop2_ird["values"]=("All")
    rpdrop2_ird.place(x=530,y=50)
    rpdrop2_ird.current(0)


    
    mainchartframe15 =Frame(reportframe,height=1500, width=200)
    mainchartframe15.pack(side="top", padx=0, pady=0)

    irwcuw1 = Label(reportframe,text="                                                                                                                                                               \n", bg="white")
    irwcuw1.place(x=2,y=90)


    lbl_invdtt2 =Label(reportframe, text="Report Result Preview", bg="white" , font=("arial", 16))
    lbl_invdtt2.place(x=2, y=87)
    irwcuw1 = Label(reportframe,text="                                                                                               ", bg="white")
    irwcuw1.place(x=1135, y=97)
    lbl_invdtt2 =Label(reportframe, text="Right Click on Preview For More Options", bg="white" , font=("arial",8 ))
    lbl_invdtt2.place(x=1140, y=97)

    frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
    frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
    frame.place(x=20,y=115)
    canvas=Canvas(
        frame,
        bg='grey',
        width=1400,
        height=1200,
        scrollregion=(0,0,1500, 1500)
        )

    vertibar=Scrollbar(
        frame,
        orient=VERTICAL
        )
    vertibar.pack(side=RIGHT,fill=Y)
    vertibar.config(command=canvas.yview)
    canvas.config(width=1310,height=600)

    canvas.config(
        yscrollcommand=vertibar.set
        )
    canvas.pack(expand=True,side=LEFT,fill=BOTH)
    canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
    
    canvas.create_text(620,300,text="No Data To Display",fill='black',font=("arial", 14), justify='center')

    canvas.create_text(625,350,text="Please sdelect the report type from the list above\nAfter you can set the date period or other parameters",fill='blue',font=("arial", 12), justify='center')

    canvas.create_text(620,400,text="Click on 'Run Report' button for the report result",fill='blue',font=("arial", 12), justify='center')
    #----------------------------------------------------------------------------------------------------
  elif menuvar=="Daily Invoices Report":
    rprefreshlebel = Button(midFrame,compound="top", text="Refresh",relief=RAISED, image=photo8,bg="#f5f3f2", fg="black", height=55, bd=1, width=55,command=category_dir)
    rprefreshlebel.place(x=22,y=12)

    lbl_ir = Label(reportframe, text="    \n   \n   \n   \n   \n  ", bg="#f8f8f2")
    lbl_ir.place(x=0,y=500)
    lbl_ir = Label(reportframe, text="                                                                                     ", bg="white" , font=("arial", 8))
    lbl_ir.place(x=1110,y=85)
    rpprintlabel = Button(midFrame,compound="top", text="Print Chart",relief=RAISED, image=photo5,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command="create")
    rpprintlabel.place(x=95,y=12)
  

    rpsaveLabel = Button(midFrame,compound="top", text="Export Report\n to Excel",relief=RAISED, image=photo3,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command=lambda:exportcanvas15())
    rpsaveLabel.place(x=168,y=12)

    rpcopyLabel = Button(midFrame,compound="top", text="Export Report\n to PDF",relief=RAISED, image=copy,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command="convert")
    rpcopyLabel.place(x=240,y=12)\

    diruw1 = Label(midFrame,text="                                    ", bg="#f8f8f2")
    diruw1.place(x=415,y=9)

    diruw2 = Label(midFrame,text="                                                                                                             \n                                                                                                                                                  \n                                                              \n                                                            ", bg="#f8f8f2")
    diruw2.place(x=530,y=9)


    lbl_dir = Label(midFrame, text=" Day:", bg="#f8f8f2")
    lbl_dir.place(x=526,y=9)
    
    global dir_frm
    dir_frm=DateEntry(midFrame, textvariable=dirdate)
    dir_frm.place(x=530,y=50)

   
    mainchartframe16 =Frame(reportframe,height=1500, width=200)
    mainchartframe16.pack(side="top", padx=0, pady=0)

    irwcuw1 = Label(reportframe,text="                                                                                                                                                               \n", bg="white")
    irwcuw1.place(x=2,y=90)


    lbl_invdtt2 =Label(reportframe, text="Report Result Preview", bg="white" , font=("arial", 16))
    lbl_invdtt2.place(x=2, y=87)
    irwcuw1 = Label(reportframe,text="                                                                                               ", bg="white")
    irwcuw1.place(x=1135, y=97)
    lbl_invdtt2 =Label(reportframe, text="Right Click on Preview For More Options", bg="white" , font=("arial",8 ))
    lbl_invdtt2.place(x=1140, y=97)

    frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
    frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
    frame.place(x=20,y=115)
    canvas=Canvas(
        frame,
        bg='grey',
        width=1400,
        height=1200,
        scrollregion=(0,0,1500, 1500)
        )

    vertibar=Scrollbar(
        frame,
        orient=VERTICAL
        )
    vertibar.pack(side=RIGHT,fill=Y)
    vertibar.config(command=canvas.yview)
    canvas.config(width=1310,height=600)

    canvas.config(
        yscrollcommand=vertibar.set
        )
    canvas.pack(expand=True,side=LEFT,fill=BOTH)
    canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
    
    canvas.create_text(620,300,text="No Data To Display",fill='black',font=("arial", 14), justify='center')

    canvas.create_text(625,350,text="Please sdelect the report type from the list above\nAfter you can set the date period or other parameters",fill='blue',font=("arial", 12), justify='center')

    canvas.create_text(620,400,text="Click on 'Run Report' button for the report result",fill='blue',font=("arial", 12), justify='center')
    #----------------------------------------------------------------------------------------------------  
  elif menuvar=="Purchase orders Report":
    rprefreshlebel = Button(midFrame,compound="top", text="Refresh",relief=RAISED, image=photo8,bg="#f5f3f2", fg="black", height=55, bd=1, width=55,command=category_por)
    rprefreshlebel.place(x=22,y=12)
    lbl_ir = Label(reportframe, text="    \n   \n   \n   \n   \n  ", bg="#f8f8f2")
    lbl_ir.place(x=0,y=500)
    lbl_ir = Label(reportframe, text="                                                                                     ", bg="white" , font=("arial", 8))
    lbl_ir.place(x=1110,y=85)
    rpprintlabel = Button(midFrame,compound="top", text="Print Chart",relief=RAISED, image=photo5,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command="create")
    rpprintlabel.place(x=95,y=12)
  

    rpsaveLabel = Button(midFrame,compound="top", text="Export Report\n to Excel",relief=RAISED, image=photo3,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command=lambda:exportcanvas16())
    rpsaveLabel.place(x=168,y=12)

    rpcopyLabel = Button(midFrame,compound="top", text="Export Report\n to PDF",relief=RAISED, image=copy,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command="convert")
    rpcopyLabel.place(x=240,y=12)

    poruw1 = Label(midFrame,text="                                    ", bg="#f8f8f2")
    poruw1.place(x=415,y=9)

    poruw2 = Label(midFrame,text="                                                                                                             \n                                                                                                                                                  \n                                                              \n                                                            ", bg="#f8f8f2")
    poruw2.place(x=530,y=9)

    lbl_por =Label(midFrame, text="From:" , bg="#f8f8f2")
    lbl_por.place(x=676,y=10)
    global porfrm1
    global porto1
    porfrm1=DateEntry(midFrame, textvariable=porfrm)
    porfrm1.place(x=721,y=10)

    lbl_por =Label(midFrame, text="To:", bg="#f8f8f2")
    lbl_por.place(x=690,y=50)

    porto1=DateEntry(midFrame, textvariable=porto)
    porto1.place(x=721,y=50)

    lbl_por = Label(midFrame, text="Category:", bg="#f8f8f2")
    lbl_por.place(x=470,y=10)

    menupor = StringVar()
    drop1por=ttk.Combobox(midFrame, textvariable=menupor)
    drop1por.place(x=530,y=10)
    drop1por["values"]=("Java","Php", "POP")
    drop1por.current(0)

    rpdrop2_por=ttk.Combobox(midFrame, textvariable=porfilter)
    rpdrop2_por["values"]=("Month to date","Year To Date","Current year","Current month","Current days", "Last 30 days", "Last 60 days", "Last 90 days","Previous month", "Previous year", "Custom Range")
    rpdrop2_por.place(x=530,y=50)
    rpdrop2_por.current(0)
      

    
    rpchkbtn1_por= Checkbutton(midFrame, text = "Complete", variable = rpcheckvar1_por, onvalue = 1, offvalue = 0, height = 2, width = 8, bg="#f8f8f2",command=lambda:check_function_por())
    rpchkbtn1_por.place(x=820,y=2)
    rpchkbtn1_por.select()
    
    rpchkbtn1_por = Checkbutton(midFrame, text = "Draft", variable = rpcheckvar2_por, onvalue = 1, offvalue = 0, height = 2, width = 8, bg="#f8f8f2", command=lambda:check_function_por())
    rpchkbtn1_por.place(x=810,y=40)
    rpchkbtn1_por.select()


    mainchartframe17 =Frame(reportframe,height=1500, width=200)
    mainchartframe17.pack(side="top", padx=0, pady=0)

    irwcuw1 = Label(reportframe,text="                                                                                                                                                               \n", bg="white")
    irwcuw1.place(x=2,y=90)


    lbl_invdtt2 =Label(reportframe, text="Report Result Preview", bg="white" , font=("arial", 16))
    lbl_invdtt2.place(x=2, y=87)
    irwcuw1 = Label(reportframe,text="                                                                                               ", bg="white")
    irwcuw1.place(x=1135, y=97)
    lbl_invdtt2 =Label(reportframe, text="Right Click on Preview For More Options", bg="white" , font=("arial",8 ))
    lbl_invdtt2.place(x=1140, y=97)

    frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="red"
        )
    frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
    frame.place(x=20,y=115)
    canvas=Canvas(
        frame,
        bg='grey',
        width=1400,
        height=1200,
        scrollregion=(0,0,1500, 1500)
        )

    vertibar=Scrollbar(
        frame,
        orient=VERTICAL
        )
    vertibar.pack(side=RIGHT,fill=Y)
    vertibar.config(command=canvas.yview)
    canvas.config(width=1310,height=600)

    canvas.config(
        yscrollcommand=vertibar.set
        )
    canvas.pack(expand=True,side=LEFT,fill=BOTH)
    canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
    
    canvas.create_text(620,300,text="No Data To Display",fill='black',font=("arial", 14), justify='center')

    canvas.create_text(625,350,text="Please sdelect the report type from the list above\nAfter you can set the date period or other parameters",fill='blue',font=("arial", 12), justify='center')

    canvas.create_text(620,400,text="Click on 'Run Report' button for the report result",fill='blue',font=("arial", 12), justify='center')
    #----------------------------------------------------------------------------------------------------
  elif menuvar=="Expenses Report":
    rprefreshlebel = Button(midFrame,compound="top", text="Refresh",relief=RAISED, image=photo8,bg="#f5f3f2", fg="black", height=55, bd=1, width=55,command=category_exp)
    rprefreshlebel.place(x=22,y=12)
    lbl_ir = Label(reportframe, text="    \n   \n   \n   \n   \n  ", bg="#f8f8f2")
    lbl_ir.place(x=0,y=500)
    lbl_ir = Label(reportframe, text="                                                                                     ", bg="white" , font=("arial", 8))
    lbl_ir.place(x=1110,y=85)
    rpprintlabel = Button(midFrame,compound="top", text="Print Chart",relief=RAISED, image=photo5,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command="create")
    rpprintlabel.place(x=95,y=12)
  

    rpsaveLabel = Button(midFrame,compound="top", text="Export Report\n to Excel",relief=RAISED, image=photo3,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command=lambda:exportcanvas17())
    rpsaveLabel.place(x=168,y=12)

    rpcopyLabel = Button(midFrame,compound="top", text="Export Report\n to PDF",relief=RAISED, image=copy,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command="convert")
    rpcopyLabel.place(x=240,y=12)
    sruw1 = Label(midFrame,text="                                    ", bg="#f8f8f2")
    sruw1.place(x=415,y=9)

    sruw2 = Label(midFrame,text="                                                                                                             \n                                                                                                                                                  \n                                                              \n                                                            ", bg="#f8f8f2")
    sruw2.place(x=530,y=9)

    lbl_er =Label(midFrame, text="From:" , bg="#f8f8f2")
    lbl_er.place(x=728,y=10)
    global exp_frm
    global exp_to
    exp_frm=DateEntry(midFrame, textvariable=expfrm)
    exp_frm.place(x=773,y=10)

    lbl_er =Label(midFrame, text="To:", bg="#f8f8f2")
    lbl_er.place(x=743,y=50)

    exp_to=DateEntry(midFrame, textvariable=expto)
    exp_to.place(x=773,y=50)

    lbl_er = Label(midFrame, text="Category:", bg="#f8f8f2")
    lbl_er.place(x=470,y=10)

    menuer = StringVar()
    drop1er=ttk.Combobox(midFrame, textvariable=menuer, width=30)
    drop1er.place(x=530,y=10)
    drop1er["values"]=("")
    

    rpdrop2_er=ttk.Combobox(midFrame, textvariable=expfilter,width=30)
    rpdrop2_er["values"]=("All","Internal")
    rpdrop2_er.place(x=530,y=50)
    rpdrop2_er.current(0)

 
    rpchkbtn1_er= Checkbutton(midFrame, text = "Invoiced", variable = rpcheckvar1_exp, onvalue = 1, offvalue = 0, height = 2, width = 8, bg="#f8f8f2",command=lambda:check_exp())
    rpchkbtn1_er.place(x=868,y=2)
    rpchkbtn1_er.select()

   
    rpchkbtn1_er = Checkbutton(midFrame, text = "Rebilable", variable = rpcheckvar2_exp, onvalue = 1, offvalue = 0, height = 2, width = 8, bg="#f8f8f2", command=lambda:check_exp())
    rpchkbtn1_er.place(x=868,y=40)
    rpchkbtn1_er.select()

    mainchartframe19 =Frame(reportframe,height=1500, width=200)
    mainchartframe19.pack(side="top", padx=0, pady=0)

    irwcuw1 = Label(reportframe,text="                                                                                                                                                               \n", bg="white")
    irwcuw1.place(x=2,y=90)


    lbl_invdtt2 =Label(reportframe, text="Report Result Preview", bg="white" , font=("arial", 16))
    lbl_invdtt2.place(x=2, y=87)
    irwcuw1 = Label(reportframe,text="                                                                                               ", bg="white")
    irwcuw1.place(x=1135, y=97)
    lbl_invdtt2 =Label(reportframe, text="Right Click on Preview For More Options", bg="white" , font=("arial",8 ))
    lbl_invdtt2.place(x=1140, y=97)

    frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
    frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
    frame.place(x=20,y=115)
    canvas=Canvas(
        frame,
        bg='grey',
        width=1400,
        height=1200,
        scrollregion=(0,0,1500, 1500)
        )

    vertibar=Scrollbar(
        frame,
        orient=VERTICAL
        )
    vertibar.pack(side=RIGHT,fill=Y)
    vertibar.config(command=canvas.yview)
    canvas.config(width=1310,height=600)

    canvas.config(
        yscrollcommand=vertibar.set
        )
    canvas.pack(expand=True,side=LEFT,fill=BOTH)
    canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
    
    canvas.create_text(620,300,text="No Data To Display",fill='black',font=("arial", 14), justify='center')

    canvas.create_text(625,350,text="Please sdelect the report type from the list above\nAfter you can set the date period or other parameters",fill='blue',font=("arial", 12), justify='center')

    canvas.create_text(620,400,text="Click on 'Run Report' button for the report result",fill='blue',font=("arial", 12), justify='center')

    #----------------------------------------------------------------------------------------------------
  elif menuvar=="Payment Reports":
    rprefreshlebel = Button(midFrame,compound="top", text="Refresh",relief=RAISED, image=photo8,bg="#f5f3f2", fg="black", height=55, bd=1, width=55,command=category_pyr)
    rprefreshlebel.place(x=22,y=12)

    lbl_ir = Label(reportframe, text="    \n   \n   \n   \n   \n  ", bg="#f8f8f2")
    lbl_ir.place(x=0,y=500)
    lbl_ir = Label(reportframe, text="                                                                                     ", bg="white" , font=("arial", 8))
    lbl_ir.place(x=1110,y=85)
    rpprintlabel = Button(midFrame,compound="top", text="Print Chart",relief=RAISED, image=photo5,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command="create")
    rpprintlabel.place(x=95,y=12)
  

    rpsaveLabel = Button(midFrame,compound="top", text="Export Report\n to Excel",relief=RAISED, image=photo3,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command=lambda:exportcanvas18())
    rpsaveLabel.place(x=168,y=12)

    rpcopyLabel = Button(midFrame,compound="top", text="Export Report\n to PDF",relief=RAISED, image=copy,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command="convert")
    rpcopyLabel.place(x=240,y=12)

    pruw1 = Label(midFrame,text="                                    ", bg="#f8f8f2")
    pruw1.place(x=415,y=9)
    pruw2 = Label(midFrame,text="                                                                                                             \n                                                                                                                                                  \n                                                              \n                                                            ", bg="#f8f8f2")
    pruw2.place(x=530,y=9)


    lbl_pr = Label(midFrame, text="Date Period:", bg="#f8f8f2")
    lbl_pr.place(x=530,y=9)
    
    menupr = StringVar()
    drop1pr=ttk.Combobox(midFrame, textvariable=pyrfilter, width=30)
    drop1pr.place(x=530,y=50)
    drop1pr["values"]=("Month to date","Year To Date","Current year","Current month","Current days", "Last 30 days", "Last 60 days", "Last 90 days","Previous month", "Previous year", "Custom Range")
    drop1pr.current(0)

    lbl_pr =Label(midFrame, text="From:" , bg="#f8f8f2")
    lbl_pr.place(x=725,y=10)
    global pyrfrm1
    global pyrto1
    pyrfrm1=DateEntry(midFrame, textvariable=pyrfrm)
    pyrfrm1.place(x=770,y=10)

    lbl_pr =Label(midFrame, text="To:", bg="#f8f8f2")
    lbl_pr.place(x=740,y=50)

    pyrto1=DateEntry(midFrame, textvariable=pyrto)
    pyrto1.place(x=770,y=50)


    mainchartframe18 =Frame(reportframe,height=1500, width=200)
    mainchartframe18.pack(side="top", padx=0, pady=0)

    irwcuw1 = Label(reportframe,text="                                                                                                                                                               \n", bg="white")
    irwcuw1.place(x=2,y=90)


    lbl_invdtt2 =Label(reportframe, text="Report Result Preview", bg="white" , font=("arial", 16))
    lbl_invdtt2.place(x=2, y=87)
    irwcuw1 = Label(reportframe,text="                                                                                               ", bg="white")
    irwcuw1.place(x=1135, y=97)
    lbl_invdtt2 =Label(reportframe, text="Right Click on Preview For More Options", bg="white" , font=("arial",8 ))
    lbl_invdtt2.place(x=1140, y=97)

    frame = Frame(
        reportframe,
        width=1500,
        height=1000,
        bg="#f8f8f2"
        )
    frame.pack(expand=True, fill=BOTH,  padx=10, pady=20)
    frame.place(x=20,y=115)
    canvas=Canvas(
        frame,
        bg='grey',
        width=1400,
        height=1200,
        scrollregion=(0,0,1500, 1500)
        )

    vertibar=Scrollbar(
        frame,
        orient=VERTICAL
        )
    vertibar.pack(side=RIGHT,fill=Y)
    vertibar.config(command=canvas.yview)
    canvas.config(width=1310,height=600)

    canvas.config(
        yscrollcommand=vertibar.set
        )
    canvas.pack(expand=True,side=LEFT,fill=BOTH)
    canvas.create_rectangle(235,25,1025,1430,  outline='yellow',fill='white')
    
    canvas.create_text(620,300,text="No Data To Display",fill='black',font=("arial", 14), justify='center')

    canvas.create_text(625,350,text="Please sdelect the report type from the list above\nAfter you can set the date period or other parameters",fill='blue',font=("arial", 12), justify='center')

    canvas.create_text(620,400,text="Click on 'Run Report' button for the report result",fill='blue',font=("arial", 12), justify='center')

  
  else:
    pass

#############################################################################################################


#***************************************************(Three Check Box)**************************************

def chek_function():
   
        
    if checkvar1.get()==0 and checkvar2.get()==1 and checkvar3.get()==1:
            global canvasbar_ch
            global lbl_invdtt2
            sql_paid = "SELECT SUM(invoicetot)from invoice"
            fbcursor.execute(sql_paid)
            invoice= fbcursor.fetchone()

            x_axis = "SELECT invodate from invoice WHERE invoicetot=(SELECT MAX(invoicetot) from invoice)"
            fbcursor.execute(x_axis)
            axis_x= fbcursor.fetchone()



            sql_company = "SELECT SUM(totpaid)from invoice"
            fbcursor.execute(sql_company)
            paid= fbcursor.fetchone()



            sql_outstanding = "SELECT SUM(balance)from invoice"
            fbcursor.execute(sql_outstanding)
            outstanding= fbcursor.fetchone()


            x=datetime.today()

            y=0

            x=axis_x
            figfirst = plt.figure(figsize=(17, 3.58), dpi=80)
            plt.bar(x,y, label="Invoice", color="orange")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()

            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)
         



            #**************add dates********

            dates=axis_x[0]+timedelta(days=2)
           
            y=outstanding
            x=dates
            plt.bar(x,y, label="Outstanding", color="blue")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)


            dates3=axis_x[0]-timedelta(days=2)
            y=paid
            x=dates3
            plt.bar(x,y, label="Paid", color="green") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)

            #used to display chart in our frame
            canvasbar_ch = FigureCanvasTkAgg(figfirst, master=reportframe)
            canvasbar_ch.draw()
            canvasbar_ch.get_tk_widget().place(x=0, y=85) # show the barchart on the ouput window
            lbl_ir = Label(reportframe, text="Right Click On Each Chart For More Options", bg="white" , font=("arial", 8))
            lbl_ir.place(x=1115,y=85)

            lbl_invdtt2 =Label(reportframe, text="Screen Charts", bg="white" , font=("arial", 16))
            lbl_invdtt2.place(x=2, y=85)

    elif checkvar1.get()==0 and checkvar2.get()==0 and checkvar3.get()==1:
            sql_paid = "SELECT SUM(invoicetot)from invoice"
            fbcursor.execute(sql_paid)
            invoice= fbcursor.fetchone()

            x_axis = "SELECT invodate from invoice WHERE invoicetot=(SELECT MAX(invoicetot) from invoice)"
            fbcursor.execute(x_axis)
            axis_x= fbcursor.fetchone()



            sql_company = "SELECT SUM(totpaid)from invoice"
            fbcursor.execute(sql_company)
            paid= fbcursor.fetchone()



            sql_outstanding = "SELECT SUM(balance)from invoice"
            fbcursor.execute(sql_outstanding)
            outstanding= fbcursor.fetchone()


            x=datetime.today()

            y=0

            x=axis_x
            figfirst = plt.figure(figsize=(17, 3.58), dpi=80)
            plt.bar(x,y, label="Invoice", color="orange")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()

            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)
            



            #**************add dates********

            dates=axis_x[0]+timedelta(days=2)
           
            y=0
            x=dates
            plt.bar(x,y, label="Outstanding", color="blue")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)


            dates3=axis_x[0]-timedelta(days=2)
            y=paid
            x=dates3
            plt.bar(x,y, label="Paid", color="green") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)

            #used to display chart in our frame
            canvasbar_ch = FigureCanvasTkAgg(figfirst, master=reportframe)
            canvasbar_ch.draw()
            canvasbar_ch.get_tk_widget().place(x=0, y=85) # show the barchart on the ouput window
            lbl_ir = Label(reportframe, text="Right Click On Each Chart For More Options", bg="white" , font=("arial", 8))
            lbl_ir.place(x=1115,y=85)

            lbl_invdtt2 =Label(reportframe, text="Screen Charts", bg="white" , font=("arial", 16))
            lbl_invdtt2.place(x=2, y=85)

    elif checkvar1.get()==0 and checkvar2.get()==1 and checkvar3.get()==0:
            sql_paid = "SELECT SUM(invoicetot)from invoice"
            fbcursor.execute(sql_paid)
            invoice= fbcursor.fetchone()

            x_axis = "SELECT invodate from invoice WHERE invoicetot=(SELECT MAX(invoicetot) from invoice)"
            fbcursor.execute(x_axis)
            axis_x= fbcursor.fetchone()



            sql_company = "SELECT SUM(totpaid)from invoice"
            fbcursor.execute(sql_company)
            paid= fbcursor.fetchone()



            sql_outstanding = "SELECT SUM(balance)from invoice"
            fbcursor.execute(sql_outstanding)
            outstanding= fbcursor.fetchone()


            x=datetime.today()

            y=0

            x=axis_x
            figfirst = plt.figure(figsize=(17, 3.58), dpi=80)
            plt.bar(x,y, label="Invoice", color="orange")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()

            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)
            


            #**************add dates********

            dates=axis_x[0]+timedelta(days=2)
            
            y=outstanding
            x=dates
            plt.bar(x,y, label="Outstanding", color="blue")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)


            dates3=axis_x[0]-timedelta(days=2)
            y=0
            x=dates3
            plt.bar(x,y, label="Paid", color="green") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)

            #used to display chart in our frame
            canvasbar_ch = FigureCanvasTkAgg(figfirst, master=reportframe)
            canvasbar_ch.draw()
            canvasbar_ch.get_tk_widget().place(x=0, y=85) # show the barchart on the ouput window
            
            lbl_ir = Label(reportframe, text="Right Click On Each Chart For More Options", bg="white" , font=("arial", 8))
            lbl_ir.place(x=1115,y=85)

            lbl_invdtt2 =Label(reportframe, text="Screen Charts", bg="white" , font=("arial", 16))
            lbl_invdtt2.place(x=2, y=85)
    
    elif checkvar1.get()==1 and checkvar2.get()==1 and checkvar3.get()==1:
            sql_paid = "SELECT SUM(invoicetot)from invoice"
            fbcursor.execute(sql_paid)
            invoice= fbcursor.fetchone()

            x_axis = "SELECT invodate from invoice WHERE invoicetot=(SELECT MAX(invoicetot) from invoice)"
            fbcursor.execute(x_axis)
            axis_x= fbcursor.fetchone()



            sql_company = "SELECT SUM(totpaid)from invoice"
            fbcursor.execute(sql_company)
            paid= fbcursor.fetchone()



            sql_outstanding = "SELECT SUM(balance)from invoice"
            fbcursor.execute(sql_outstanding)
            outstanding= fbcursor.fetchone()


            x=datetime.today()

            y=invoice

            x=axis_x
            figfirst = plt.figure(figsize=(17, 3.58), dpi=80)
            plt.bar(x,y, label="Invoice", color="orange")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()

            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)
            



            #**************add dates********

            dates=axis_x[0]+timedelta(days=2)
            
            y=outstanding
            x=dates
            plt.bar(x,y, label="Outstanding", color="blue")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)


            dates3=axis_x[0]-timedelta(days=2)
            y=paid
            x=dates3
            plt.bar(x,y, label="Paid", color="green") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)

            #used to display chart in our frame
            canvasbar_ch = FigureCanvasTkAgg(figfirst, master=reportframe)
            canvasbar_ch.draw()
            canvasbar_ch.get_tk_widget().place(x=0, y=85) # show the barchart on the ouput window

            lbl_ir = Label(reportframe, text="Right Click On Each Chart For More Options", bg="white" , font=("arial", 8))
            lbl_ir.place(x=1115,y=85)

            lbl_invdtt2 =Label(reportframe, text="Screen Charts", bg="white" , font=("arial", 16))
            lbl_invdtt2.place(x=2, y=85)
    elif checkvar1.get()==1 and checkvar2.get()==0 and checkvar3.get()==1:
            sql_paid = "SELECT SUM(invoicetot)from invoice"
            fbcursor.execute(sql_paid)
            invoice= fbcursor.fetchone()

            x_axis = "SELECT invodate from invoice WHERE invoicetot=(SELECT MAX(invoicetot) from invoice)"
            fbcursor.execute(x_axis)
            axis_x= fbcursor.fetchone()



            sql_company = "SELECT SUM(totpaid)from invoice"
            fbcursor.execute(sql_company)
            paid= fbcursor.fetchone()



            sql_outstanding = "SELECT SUM(balance)from invoice"
            fbcursor.execute(sql_outstanding)
            outstanding= fbcursor.fetchone()


            x=datetime.today()

            y=invoice

            x=axis_x
            figfirst = plt.figure(figsize=(17, 3.58), dpi=80)
            plt.bar(x,y, label="Invoice", color="orange")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()

            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)
            



            #**************add dates********

            dates=axis_x[0]+timedelta(days=2)
            
            y=0
            x=dates
            plt.bar(x,y, label="Outstanding", color="blue")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)


            dates3=axis_x[0]-timedelta(days=2)
            y=paid
            x=dates3
            plt.bar(x,y, label="Paid", color="green") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)

            #used to display chart in our frame
            canvasbar_ch = FigureCanvasTkAgg(figfirst, master=reportframe)
            canvasbar_ch.draw()
            canvasbar_ch.get_tk_widget().place(x=0, y=85) # show the barchart on the ouput window
            lbl_ir = Label(reportframe, text="Right Click On Each Chart For More Options", bg="white" , font=("arial", 8))
            lbl_ir.place(x=1115,y=85)

            lbl_invdtt2 =Label(reportframe, text="Screen Charts", bg="white" , font=("arial", 16))
            lbl_invdtt2.place(x=2, y=85)

    elif checkvar1.get()==1 and checkvar2.get()==1 and checkvar3.get()==0:
            sql_paid = "SELECT SUM(invoicetot)from invoice"
            fbcursor.execute(sql_paid)
            invoice= fbcursor.fetchone()

            x_axis = "SELECT invodate from invoice WHERE invoicetot=(SELECT MAX(invoicetot) from invoice)"
            fbcursor.execute(x_axis)
            axis_x= fbcursor.fetchone()



            sql_company = "SELECT SUM(totpaid)from invoice"
            fbcursor.execute(sql_company)
            paid= fbcursor.fetchone()



            sql_outstanding = "SELECT SUM(balance)from invoice"
            fbcursor.execute(sql_outstanding)
            outstanding= fbcursor.fetchone()


            x=datetime.today()

            y=invoice

            x=axis_x
            figfirst = plt.figure(figsize=(17, 3.58), dpi=80)
            plt.bar(x,y, label="Invoice", color="orange")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()

            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)
            


            #**************add dates********

            dates=axis_x[0]+timedelta(days=2)
            
            y=outstanding
            x=dates
            plt.bar(x,y, label="Outstanding", color="blue")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)


            dates3=axis_x[0]-timedelta(days=2)
            y=0
            x=dates3
            plt.bar(x,y, label="Paid", color="green") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)

            #used to display chart in our frame
            canvasbar_ch = FigureCanvasTkAgg(figfirst, master=reportframe)
            canvasbar_ch.draw()
            canvasbar_ch.get_tk_widget().place(x=0, y=85) # show the barchart on the ouput window
            lbl_ir = Label(reportframe, text="Right Click On Each Chart For More Options", bg="white" , font=("arial", 8))
            lbl_ir.place(x=1115,y=85)

            lbl_invdtt2 =Label(reportframe, text="Screen Charts", bg="white" , font=("arial", 16))
            lbl_invdtt2.place(x=2, y=85)

    elif checkvar1.get()==1 and checkvar2.get()==0 and checkvar3.get()==0:
            sql_paid = "SELECT SUM(invoicetot)from invoice"
            fbcursor.execute(sql_paid)
            invoice= fbcursor.fetchone()

            x_axis = "SELECT invodate from invoice WHERE invoicetot=(SELECT MAX(invoicetot) from invoice)"
            fbcursor.execute(x_axis)
            axis_x= fbcursor.fetchone()



            sql_company = "SELECT SUM(totpaid)from invoice"
            fbcursor.execute(sql_company)
            paid= fbcursor.fetchone()



            sql_outstanding = "SELECT SUM(balance)from invoice"
            fbcursor.execute(sql_outstanding)
            outstanding= fbcursor.fetchone()


            x=datetime.today()

            y=invoice

            x=axis_x
            figfirst = plt.figure(figsize=(17, 3.58), dpi=80)
            plt.bar(x,y, label="Invoice", color="orange")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()

            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)
            



            #**************add dates********

            dates=axis_x[0]+timedelta(days=2)
            
            y=0
            x=dates
            plt.bar(x,y, label="Outstanding", color="blue")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)


            dates3=axis_x[0]-timedelta(days=2)
            y=0
            x=dates3
            plt.bar(x,y, label="Paid", color="green") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)

            #used to display chart in our frame
            canvasbar_ch = FigureCanvasTkAgg(figfirst, master=reportframe)
            canvasbar_ch.draw()
            canvasbar_ch.get_tk_widget().place(x=0, y=85) # show the barchart on the ouput window
            lbl_ir = Label(reportframe, text="Right Click On Each Chart For More Options", bg="white" , font=("arial", 8))
            lbl_ir.place(x=1115,y=85)

            lbl_invdtt2 =Label(reportframe, text="Screen Charts", bg="white" , font=("arial", 16))
            lbl_invdtt2.place(x=2, y=85)
    elif checkvar1.get()==0 and checkvar2.get()==0 and checkvar3.get()==0:
            sql_paid = "SELECT SUM(invoicetot)from invoice"
            fbcursor.execute(sql_paid)
            invoice= fbcursor.fetchone()

            x_axis = "SELECT invodate from invoice WHERE invoicetot=(SELECT MAX(invoicetot) from invoice)"
            fbcursor.execute(x_axis)
            axis_x= fbcursor.fetchone()



            sql_company = "SELECT SUM(totpaid)from invoice"
            fbcursor.execute(sql_company)
            paid= fbcursor.fetchone()



            sql_outstanding = "SELECT SUM(balance)from invoice"
            fbcursor.execute(sql_outstanding)
            outstanding= fbcursor.fetchone()


            x=datetime.today()

            y=0

            x=axis_x
            figfirst = plt.figure(figsize=(17, 3.58), dpi=80)
            plt.bar(x,y, label="Invoice", color="orange")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()

            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)
            



            #**************add dates********

            dates=axis_x[0]+timedelta(days=2)
            
            y=0
            x=dates
            plt.bar(x,y, label="Outstanding", color="blue")
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)


            dates3=axis_x[0]-timedelta(days=2)
            y=0
            x=dates3
            plt.bar(x,y, label="Paid", color="green") 
            plt.legend()
            plt.xlabel("x-axis")
            plt.ylabel("y-label")
            axes=plt.gca()
            axes.yaxis.grid()
            # # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)

            #used to display chart in our frame
            canvasbar_ch = FigureCanvasTkAgg(figfirst, master=reportframe)
            canvasbar_ch.draw()
            canvasbar_ch.get_tk_widget().place(x=0, y=85) # show the barchart on the ouput window

            lbl_ir = Label(reportframe, text="Right Click On Each Chart For More Options", bg="white" , font=("arial", 8))
            lbl_ir.place(x=1115,y=85)

            lbl_invdtt2 =Label(reportframe, text="Screen Charts", bg="white" , font=("arial", 16))
            lbl_invdtt2.place(x=2, y=85)


    else:
        
        pass
       

def check_function_por():
    if rpcheckvar1_por.get()==1 and rpcheckvar2_por.get()==0:
        
        in_dat=porfrm.get()
        cr=porto.get()
        or_company = "SELECT * from company"
        fbcursor.execute(or_company)
        company_or= fbcursor.fetchone()
        if company_or is not None:
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_por_tree=ttk.Treeview(canvaspor, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_por_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rp_por_tree.heading("# 1", text="No")
            rp_por_tree.column("# 2", anchor=E, stretch=NO, width=90)
            rp_por_tree.heading("# 2", text="Date")
            rp_por_tree.column("# 3", anchor=E, stretch=NO, width=150)
            rp_por_tree.heading("# 3", text="Due Date")
            rp_por_tree.column("# 4", anchor=E, stretch=NO, width=150)
            rp_por_tree.heading("# 4", text="Vendor")
            rp_por_tree.column("# 5", anchor=E, stretch=NO, width=115)
            rp_por_tree.heading("# 5", text="Status")
            rp_por_tree.column("# 6", anchor=E, stretch=NO, width=115)
            rp_por_tree.heading("# 6", text="P.Order Total")

            # Insert the data in Treeview widget
            rp_por_tree.insert('', 'end',text="1",values=('','','','','','P.Order Total'))
            for record in rp_por_tree.get_children():
                rp_por_tree.delete(record)
            count=0
            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM porder WHERE (porderdate BETWEEN %s and %s AND status="Complete")'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:
        
                rp_por_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[2], i[3], i[26], i[5], i[10]))
                count += 1
            # total_tri='SELECT SUM(total) from porder'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            
            
            # rp_por_tree.insert('', 'end',text="1",values=('','','','','','P.Order Total'))
            # rp_por_tree.insert('', 'end',text="1",values=('','','','','',tot_tri))

            window = canvaspor.create_window(270, 260, anchor="nw", window=rp_por_tree)
        else:
            tree=ttk.Treeview(canvaspor, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=80)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=150)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=150)
            tree.heading("# 4", text="Vendor")
            tree.column("# 5", anchor=E, stretch=NO, width=115)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=115)
            tree.heading("# 6", text="P.Order Total")
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','P.Order Total'))

            window = canvaspor.create_window(290, 260, anchor="nw", window=tree)


    elif rpcheckvar1_por.get()==0 and rpcheckvar2_por.get()==0:
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            tree=ttk.Treeview(canvaspor, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=80)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=150)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=150)
            tree.heading("# 4", text="Vendor")
            tree.column("# 5", anchor=E, stretch=NO, width=115)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=115)
            tree.heading("# 6", text="P.Order Total")
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','P.Order Total'))

            window = canvaspor.create_window(290, 260, anchor="nw", window=tree)
    elif rpcheckvar1_por.get()==0 and rpcheckvar2_por.get()==1:
        
        in_dat=porfrm.get()
        cr=porto.get()
        or_company = "SELECT * from company"
        fbcursor.execute(or_company)
        company_or= fbcursor.fetchone()
        if company_or is not None:
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_por_tree=ttk.Treeview(canvaspor, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_por_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rp_por_tree.heading("# 1", text="No")
            rp_por_tree.column("# 2", anchor=E, stretch=NO, width=90)
            rp_por_tree.heading("# 2", text="Date")
            rp_por_tree.column("# 3", anchor=E, stretch=NO, width=150)
            rp_por_tree.heading("# 3", text="Due Date")
            rp_por_tree.column("# 4", anchor=E, stretch=NO, width=150)
            rp_por_tree.heading("# 4", text="Vendor")
            rp_por_tree.column("# 5", anchor=E, stretch=NO, width=115)
            rp_por_tree.heading("# 5", text="Status")
            rp_por_tree.column("# 6", anchor=E, stretch=NO, width=115)
            rp_por_tree.heading("# 6", text="P.Order Total")

            # Insert the data in Treeview widget
            rp_por_tree.insert('', 'end',text="1",values=('','','','','','P.Order Total'))
            for record in rp_por_tree.get_children():
                rp_por_tree.delete(record)
            count=0
            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM porder WHERE (porderdate BETWEEN %s and %s AND status="Draft")'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:
        
                rp_por_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[2], i[3], i[26], i[5], i[10]))
                count += 1
            # total_tri='SELECT SUM(total) from porder'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            
            
            # rp_por_tree.insert('', 'end',text="1",values=('','','','','','P.Order Total'))
            # rp_por_tree.insert('', 'end',text="1",values=('','','','','',tot_tri))

            window = canvaspor.create_window(270, 260, anchor="nw", window=rp_por_tree)
        else:
            tree=ttk.Treeview(canvaspor, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=80)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=150)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=150)
            tree.heading("# 4", text="Vendor")
            tree.column("# 5", anchor=E, stretch=NO, width=115)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=115)
            tree.heading("# 6", text="P.Order Total")
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','P.Order Total'))

            window = canvaspor.create_window(290, 260, anchor="nw", window=tree)
    elif rpcheckvar1_por.get()==1 and rpcheckvar2_por.get()==1:
        
        in_dat=porfrm.get()
        cr=porto.get()
        or_company = "SELECT * from company"
        fbcursor.execute(or_company)
        company_or= fbcursor.fetchone()
        if company_or is not None:
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_por_tree=ttk.Treeview(canvaspor, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_por_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rp_por_tree.heading("# 1", text="No")
            rp_por_tree.column("# 2", anchor=E, stretch=NO, width=90)
            rp_por_tree.heading("# 2", text="Date")
            rp_por_tree.column("# 3", anchor=E, stretch=NO, width=150)
            rp_por_tree.heading("# 3", text="Due Date")
            rp_por_tree.column("# 4", anchor=E, stretch=NO, width=150)
            rp_por_tree.heading("# 4", text="Vendor")
            rp_por_tree.column("# 5", anchor=E, stretch=NO, width=115)
            rp_por_tree.heading("# 5", text="Status")
            rp_por_tree.column("# 6", anchor=E, stretch=NO, width=115)
            rp_por_tree.heading("# 6", text="P.Order Total")

            # Insert the data in Treeview widget
            rp_por_tree.insert('', 'end',text="1",values=('','','','','','P.Order Total'))
            for record in rp_por_tree.get_children():
                rp_por_tree.delete(record)
            count=0
            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM porder WHERE porderdate BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()

            for i in tre:
        
                rp_por_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[2], i[3], i[26], i[5], i[10]))
                count += 1
            # total_tri='SELECT SUM(total) from porder'
            # fbcursor.execute(total_tri)
            # tot_tri= fbcursor.fetchone()
            
            
            # rp_por_tree.insert('', 'end',text="1",values=('','','','','','P.Order Total'))
            # rp_por_tree.insert('', 'end',text="1",values=('','','','','',tot_tri))

            window = canvaspor.create_window(270, 260, anchor="nw", window=rp_por_tree)
        else:
            tree=ttk.Treeview(canvaspor, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=80)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=150)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=150)
            tree.heading("# 4", text="Vendor")
            tree.column("# 5", anchor=E, stretch=NO, width=115)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=115)
            tree.heading("# 6", text="P.Order Total")
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','P.Order Total'))

            window = canvaspor.create_window(290, 260, anchor="nw", window=tree)
    else:
        pass

def check_inv():
    in_dat=invfrm.get()
    cr=invto.get()
    sql_company = "SELECT * from company"
    fbcursor.execute(sql_company)
    company= fbcursor.fetchone()

    if rpcheckvar1_ir.get()==0 and rpcheckvar2_ir.get()==0 and rpcheckvar3_ir.get()==0:

            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders
            
            rp_inv_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            rp_inv_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_inv_tree.heading("# 1", text="No")
            rp_inv_tree.column("# 2", anchor=E, stretch=NO, width=70)
            rp_inv_tree.heading("# 2", text="Date")
            rp_inv_tree.column("# 3", anchor=E, stretch=NO, width=70)
            rp_inv_tree.heading("# 3", text="Due Date")
            rp_inv_tree.column("# 4", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 4", text="Terms")
            rp_inv_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 5", text="Status")
            rp_inv_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 6", text="Invoice Total")
            rp_inv_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 7", text="Invoice Paid")
            rp_inv_tree.column("# 8", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 8", text="Balance")
            # Insert the data in Treeview widget
            rp_inv_tree.insert('', 'end',text="1",values=('','','-No Data-','','','Invoice Total','Total Paid','Balance'))

            window = canvas.create_window(290, 260, anchor="nw", window=rp_inv_tree)
        
    elif rpcheckvar1_ir.get()==0 and rpcheckvar2_ir.get()==1 and rpcheckvar3_ir.get()==0:
        if company is not None:

            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders
            rp_inv_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            rp_inv_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_inv_tree.heading("# 1", text="No")
            rp_inv_tree.column("# 2", anchor=E, stretch=NO, width=80)
            rp_inv_tree.heading("# 2", text="Date")
            rp_inv_tree.column("# 3", anchor=E, stretch=NO, width=80)
            rp_inv_tree.heading("# 3", text="Due Date")
            rp_inv_tree.column("# 4", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 4", text="Terms")
            rp_inv_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 5", text="Status")
            rp_inv_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 6", text="Invoice Total")
            rp_inv_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 7", text="Invoice Paid")
            rp_inv_tree.column("# 8", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 8", text="Balance")
            # Insert the data in Treeview widget
            
            rp_inv_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total','Total Paid','Balance'))
            
            for record in rp_inv_tree.get_children():
                rp_inv_tree.delete(record)
            count=0

            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE(invodate BETWEEN %s and %s AND 	invoicetot="0")'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()
            
            
            for i in tre:
                rp_inv_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[35], i[4], i[8], i[9],i[10]))
                count += 1
            
            window = canvas.create_window(270, 260, anchor="nw", window=rp_inv_tree)

        else:
            rp_inv_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            rp_inv_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_inv_tree.heading("# 1", text="No")
            rp_inv_tree.column("# 2", anchor=E, stretch=NO, width=70)
            rp_inv_tree.heading("# 2", text="Date")
            rp_inv_tree.column("# 3", anchor=E, stretch=NO, width=70)
            rp_inv_tree.heading("# 3", text="Due Date")
            rp_inv_tree.column("# 4", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 4", text="Terms")
            rp_inv_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 5", text="Status")
            rp_inv_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 6", text="Invoice Total")
            rp_inv_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 7", text="Invoice Paid")
            rp_inv_tree.column("# 8", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 8", text="Balance")
            # Insert the data in Treeview widget
            rp_inv_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total','Total Paid','Balance'))

            window = canvas.create_window(290, 260, anchor="nw", window=rp_inv_tree)
       
       

    elif rpcheckvar1_ir.get()==1 and rpcheckvar2_ir.get()==0 and rpcheckvar3_ir.get()==1:
        if company is not None:

            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders
            rp_inv_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            rp_inv_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_inv_tree.heading("# 1", text="No")
            rp_inv_tree.column("# 2", anchor=E, stretch=NO, width=80)
            rp_inv_tree.heading("# 2", text="Date")
            rp_inv_tree.column("# 3", anchor=E, stretch=NO, width=80)
            rp_inv_tree.heading("# 3", text="Due Date")
            rp_inv_tree.column("# 4", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 4", text="Terms")
            rp_inv_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 5", text="Status")
            rp_inv_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 6", text="Invoice Total")
            rp_inv_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 7", text="Invoice Paid")
            rp_inv_tree.column("# 8", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 8", text="Balance")
            # Insert the data in Treeview widget
            
            rp_inv_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total','Total Paid','Balance'))
            
            for record in rp_inv_tree.get_children():
                rp_inv_tree.delete(record)
            count=0

            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE(invodate BETWEEN %s and %s and totpaid="0" or balance="0")'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()
            
            
            for i in tre:
                rp_inv_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[35], i[4], i[8], i[9],i[10]))
                count += 1
            
            window = canvas.create_window(270, 260, anchor="nw", window=rp_inv_tree)

        else:
            rp_inv_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            rp_inv_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_inv_tree.heading("# 1", text="No")
            rp_inv_tree.column("# 2", anchor=E, stretch=NO, width=70)
            rp_inv_tree.heading("# 2", text="Date")
            rp_inv_tree.column("# 3", anchor=E, stretch=NO, width=70)
            rp_inv_tree.heading("# 3", text="Due Date")
            rp_inv_tree.column("# 4", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 4", text="Terms")
            rp_inv_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 5", text="Status")
            rp_inv_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 6", text="Invoice Total")
            rp_inv_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 7", text="Invoice Paid")
            rp_inv_tree.column("# 8", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 8", text="Balance")
            # Insert the data in Treeview widget
            rp_inv_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total','Total Paid','Balance'))

            window = canvas.create_window(290, 260, anchor="nw", window=rp_inv_tree)

    elif rpcheckvar1_ir.get()==0 and rpcheckvar2_ir.get()==0 and rpcheckvar3_ir.get()==1:
        if company is not None:

            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders
            rp_inv_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            rp_inv_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_inv_tree.heading("# 1", text="No")
            rp_inv_tree.column("# 2", anchor=E, stretch=NO, width=80)
            rp_inv_tree.heading("# 2", text="Date")
            rp_inv_tree.column("# 3", anchor=E, stretch=NO, width=80)
            rp_inv_tree.heading("# 3", text="Due Date")
            rp_inv_tree.column("# 4", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 4", text="Terms")
            rp_inv_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 5", text="Status")
            rp_inv_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 6", text="Invoice Total")
            rp_inv_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 7", text="Invoice Paid")
            rp_inv_tree.column("# 8", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 8", text="Balance")
            # Insert the data in Treeview widget
            
            rp_inv_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total','Total Paid','Balance'))
            
            for record in rp_inv_tree.get_children():
                rp_inv_tree.delete(record)
            count=0

            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE(invodate BETWEEN %s and %s and totpaid="0")'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()
            
            
            for i in tre:
                rp_inv_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[35], i[4], i[8], i[9],i[10]))
                count += 1
            
            window = canvas.create_window(270, 260, anchor="nw", window=rp_inv_tree)

        else:
            rp_inv_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            rp_inv_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_inv_tree.heading("# 1", text="No")
            rp_inv_tree.column("# 2", anchor=E, stretch=NO, width=70)
            rp_inv_tree.heading("# 2", text="Date")
            rp_inv_tree.column("# 3", anchor=E, stretch=NO, width=70)
            rp_inv_tree.heading("# 3", text="Due Date")
            rp_inv_tree.column("# 4", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 4", text="Terms")
            rp_inv_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 5", text="Status")
            rp_inv_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 6", text="Invoice Total")
            rp_inv_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 7", text="Invoice Paid")
            rp_inv_tree.column("# 8", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 8", text="Balance")
            # Insert the data in Treeview widget
            rp_inv_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total','Total Paid','Balance'))

            window = canvas.create_window(290, 260, anchor="nw", window=rp_inv_tree)

    elif rpcheckvar1_ir.get()==1 and rpcheckvar2_ir.get()==0 and rpcheckvar3_ir.get()==0:
        if company is not None:

            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders
            rp_inv_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            rp_inv_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_inv_tree.heading("# 1", text="No")
            rp_inv_tree.column("# 2", anchor=E, stretch=NO, width=80)
            rp_inv_tree.heading("# 2", text="Date")
            rp_inv_tree.column("# 3", anchor=E, stretch=NO, width=80)
            rp_inv_tree.heading("# 3", text="Due Date")
            rp_inv_tree.column("# 4", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 4", text="Terms")
            rp_inv_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 5", text="Status")
            rp_inv_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 6", text="Invoice Total")
            rp_inv_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 7", text="Invoice Paid")
            rp_inv_tree.column("# 8", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 8", text="Balance")
            # Insert the data in Treeview widget
            
            rp_inv_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total','Total Paid','Balance'))
            
            for record in rp_inv_tree.get_children():
                rp_inv_tree.delete(record)
            count=0

            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE(invodate BETWEEN %s and %s and totpaid != "0")'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()
            
            
            for i in tre:
                rp_inv_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[35], i[4], i[8], i[9],i[10]))
                count += 1
            
            window = canvas.create_window(270, 260, anchor="nw", window=rp_inv_tree)

        else:
            rp_inv_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            rp_inv_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_inv_tree.heading("# 1", text="No")
            rp_inv_tree.column("# 2", anchor=E, stretch=NO, width=70)
            rp_inv_tree.heading("# 2", text="Date")
            rp_inv_tree.column("# 3", anchor=E, stretch=NO, width=70)
            rp_inv_tree.heading("# 3", text="Due Date")
            rp_inv_tree.column("# 4", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 4", text="Terms")
            rp_inv_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 5", text="Status")
            rp_inv_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 6", text="Invoice Total")
            rp_inv_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 7", text="Invoice Paid")
            rp_inv_tree.column("# 8", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 8", text="Balance")
            # Insert the data in Treeview widget
            rp_inv_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total','Total Paid','Balance'))

            window = canvas.create_window(290, 260, anchor="nw", window=rp_inv_tree)

    elif rpcheckvar1_ir.get()==1 and rpcheckvar2_ir.get()==1 and rpcheckvar3_ir.get()==1:
        if company is not None:

            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders
            rp_inv_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            rp_inv_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_inv_tree.heading("# 1", text="No")
            rp_inv_tree.column("# 2", anchor=E, stretch=NO, width=80)
            rp_inv_tree.heading("# 2", text="Date")
            rp_inv_tree.column("# 3", anchor=E, stretch=NO, width=80)
            rp_inv_tree.heading("# 3", text="Due Date")
            rp_inv_tree.column("# 4", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 4", text="Terms")
            rp_inv_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 5", text="Status")
            rp_inv_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 6", text="Invoice Total")
            rp_inv_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 7", text="Invoice Paid")
            rp_inv_tree.column("# 8", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 8", text="Balance")
            # Insert the data in Treeview widget
            
            rp_inv_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total','Total Paid','Balance'))
            
            for record in rp_inv_tree.get_children():
                rp_inv_tree.delete(record)
            count=0

            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE invodate BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()
            
            
            for i in tre:
                rp_inv_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[35], i[4], i[8], i[9],i[10]))
                count += 1
            
            window = canvas.create_window(270, 260, anchor="nw", window=rp_inv_tree)

        else:
            rp_inv_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            rp_inv_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_inv_tree.heading("# 1", text="No")
            rp_inv_tree.column("# 2", anchor=E, stretch=NO, width=70)
            rp_inv_tree.heading("# 2", text="Date")
            rp_inv_tree.column("# 3", anchor=E, stretch=NO, width=70)
            rp_inv_tree.heading("# 3", text="Due Date")
            rp_inv_tree.column("# 4", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 4", text="Terms")
            rp_inv_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 5", text="Status")
            rp_inv_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 6", text="Invoice Total")
            rp_inv_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 7", text="Invoice Paid")
            rp_inv_tree.column("# 8", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 8", text="Balance")
            # Insert the data in Treeview widget
            rp_inv_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total','Total Paid','Balance'))

            window = canvas.create_window(290, 260, anchor="nw", window=rp_inv_tree)

    elif rpcheckvar1_ir.get()==0 and rpcheckvar2_ir.get()==1 and rpcheckvar3_ir.get()==1:
        if company is not None:

            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders
            rp_inv_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            rp_inv_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_inv_tree.heading("# 1", text="No")
            rp_inv_tree.column("# 2", anchor=E, stretch=NO, width=80)
            rp_inv_tree.heading("# 2", text="Date")
            rp_inv_tree.column("# 3", anchor=E, stretch=NO, width=80)
            rp_inv_tree.heading("# 3", text="Due Date")
            rp_inv_tree.column("# 4", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 4", text="Terms")
            rp_inv_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 5", text="Status")
            rp_inv_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 6", text="Invoice Total")
            rp_inv_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 7", text="Invoice Paid")
            rp_inv_tree.column("# 8", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 8", text="Balance")
            # Insert the data in Treeview widget
            
            rp_inv_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total','Total Paid','Balance'))
            
            for record in rp_inv_tree.get_children():
                rp_inv_tree.delete(record)
            count=0

            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE(invodate BETWEEN %s and %s and totpaid="0" or invoicetot="0")'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()
            
            
            for i in tre:
                rp_inv_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[35], i[4], i[8], i[9],i[10]))
                count += 1
            
            window = canvas.create_window(270, 260, anchor="nw", window=rp_inv_tree)

        else:
            rp_inv_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            rp_inv_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_inv_tree.heading("# 1", text="No")
            rp_inv_tree.column("# 2", anchor=E, stretch=NO, width=70)
            rp_inv_tree.heading("# 2", text="Date")
            rp_inv_tree.column("# 3", anchor=E, stretch=NO, width=70)
            rp_inv_tree.heading("# 3", text="Due Date")
            rp_inv_tree.column("# 4", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 4", text="Terms")
            rp_inv_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 5", text="Status")
            rp_inv_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 6", text="Invoice Total")
            rp_inv_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 7", text="Invoice Paid")
            rp_inv_tree.column("# 8", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 8", text="Balance")
            # Insert the data in Treeview widget
            rp_inv_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total','Total Paid','Balance'))

            window = canvas.create_window(290, 260, anchor="nw", window=rp_inv_tree)

    elif rpcheckvar1_ir.get()==1 and rpcheckvar2_ir.get()==1 and rpcheckvar3_ir.get()==0:
        if company is not None:

            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders
            rp_inv_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            rp_inv_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_inv_tree.heading("# 1", text="No")
            rp_inv_tree.column("# 2", anchor=E, stretch=NO, width=80)
            rp_inv_tree.heading("# 2", text="Date")
            rp_inv_tree.column("# 3", anchor=E, stretch=NO, width=80)
            rp_inv_tree.heading("# 3", text="Due Date")
            rp_inv_tree.column("# 4", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 4", text="Terms")
            rp_inv_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 5", text="Status")
            rp_inv_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 6", text="Invoice Total")
            rp_inv_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 7", text="Invoice Paid")
            rp_inv_tree.column("# 8", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 8", text="Balance")
            # Insert the data in Treeview widget
            
            rp_inv_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total','Total Paid','Balance'))
            
            for record in rp_inv_tree.get_children():
                rp_inv_tree.delete(record)
            count=0

            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE(invodate BETWEEN %s and %s and totpaid is not null or invoicetot="0")'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()
            
            
            for i in tre:
                rp_inv_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[35], i[4], i[8], i[9],i[10]))
                count += 1
            
            window = canvas.create_window(270, 260, anchor="nw", window=rp_inv_tree)

        else:
            rp_inv_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            rp_inv_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_inv_tree.heading("# 1", text="No")
            rp_inv_tree.column("# 2", anchor=E, stretch=NO, width=70)
            rp_inv_tree.heading("# 2", text="Date")
            rp_inv_tree.column("# 3", anchor=E, stretch=NO, width=70)
            rp_inv_tree.heading("# 3", text="Due Date")
            rp_inv_tree.column("# 4", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 4", text="Terms")
            rp_inv_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 5", text="Status")
            rp_inv_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 6", text="Invoice Total")
            rp_inv_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 7", text="Invoice Paid")
            rp_inv_tree.column("# 8", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 8", text="Balance")
            # Insert the data in Treeview widget
            rp_inv_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total','Total Paid','Balance'))

            window = canvas.create_window(290, 260, anchor="nw", window=rp_inv_tree)

    elif rpcheckvar1_ir.get()==1 and rpcheckvar2_ir.get()==0 and rpcheckvar3_ir.get()==1:
        if company is not None:

            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders
            rp_inv_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            rp_inv_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_inv_tree.heading("# 1", text="No")
            rp_inv_tree.column("# 2", anchor=E, stretch=NO, width=80)
            rp_inv_tree.heading("# 2", text="Date")
            rp_inv_tree.column("# 3", anchor=E, stretch=NO, width=80)
            rp_inv_tree.heading("# 3", text="Due Date")
            rp_inv_tree.column("# 4", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 4", text="Terms")
            rp_inv_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 5", text="Status")
            rp_inv_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 6", text="Invoice Total")
            rp_inv_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 7", text="Invoice Paid")
            rp_inv_tree.column("# 8", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 8", text="Balance")
            # Insert the data in Treeview widget
            
            rp_inv_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total','Total Paid','Balance'))
            
            for record in rp_inv_tree.get_children():
                rp_inv_tree.delete(record)
            count=0

            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE(invodate BETWEEN %s and %s and totpaid="0" or balance!="0")'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()
            
            
            for i in tre:
                rp_inv_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[35], i[4], i[8], i[9],i[10]))
                count += 1
            
            window = canvas.create_window(270, 260, anchor="nw", window=rp_inv_tree)

        else:
            rp_inv_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            rp_inv_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_inv_tree.heading("# 1", text="No")
            rp_inv_tree.column("# 2", anchor=E, stretch=NO, width=70)
            rp_inv_tree.heading("# 2", text="Date")
            rp_inv_tree.column("# 3", anchor=E, stretch=NO, width=70)
            rp_inv_tree.heading("# 3", text="Due Date")
            rp_inv_tree.column("# 4", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 4", text="Terms")
            rp_inv_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 5", text="Status")
            rp_inv_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 6", text="Invoice Total")
            rp_inv_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 7", text="Invoice Paid")
            rp_inv_tree.column("# 8", anchor=E, stretch=NO, width=100)
            rp_inv_tree.heading("# 8", text="Balance")
            # Insert the data in Treeview widget
            rp_inv_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total','Total Paid','Balance'))

            window = canvas.create_window(290, 260, anchor="nw", window=rp_inv_tree)
    else:
        pass

def check_irwc():
    in_dat=irwcfrm.get()
    cr=irwcto.get()
    sql_company = "SELECT * from company"
    fbcursor.execute(sql_company)
    company= fbcursor.fetchone()

    if rpcheckvar1_irwc.get()==0 and rpcheckvar2_irwc.get()==0 and rpcheckvar3_irwc.get()==0:

            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders
            
            rp_irwc_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_irwc_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_irwc_tree.heading("# 1", text="No")
            rp_irwc_tree.column("# 2", anchor=E, stretch=NO, width=90)
            rp_irwc_tree.heading("# 2", text="Date")
            rp_irwc_tree.column("# 3", anchor=E, stretch=NO, width=90)
            rp_irwc_tree.heading("# 3", text="Due Date")
            rp_irwc_tree.column("# 4", anchor=E, stretch=NO, width=300)
            rp_irwc_tree.heading("# 4", text="Customer")
            rp_irwc_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_irwc_tree.heading("# 5", text="Status")
            rp_irwc_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_irwc_tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            rp_irwc_tree.insert('', 'end',text="1",values=('','','','-No Data-','','Invoice Total'))

            window = canvas.create_window(270, 260, anchor="nw", window=rp_irwc_tree)
        
    elif rpcheckvar1_irwc.get()==0 and rpcheckvar2_irwc.get()==1 and rpcheckvar3_irwc.get()==0:
        if company is not None:

            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders
            rp_inv_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            rp_irwc_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_irwc_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_irwc_tree.heading("# 1", text="No")
            rp_irwc_tree.column("# 2", anchor=E, stretch=NO, width=90)
            rp_irwc_tree.heading("# 2", text="Date")
            rp_irwc_tree.column("# 3", anchor=E, stretch=NO, width=90)
            rp_irwc_tree.heading("# 3", text="Due Date")
            rp_irwc_tree.column("# 4", anchor=E, stretch=NO, width=300)
            rp_irwc_tree.heading("# 4", text="Customer")
            rp_irwc_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_irwc_tree.heading("# 5", text="Status")
            rp_irwc_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_irwc_tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            rp_irwc_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))
            
            for record in rp_irwc_tree.get_children():
                rp_irwc_tree.delete(record)
            count=0

            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE(invodate BETWEEN %s and %s AND 	invoicetot="0")'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()
            
            
            for i in tre:
                rp_irwc_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[18], i[4], i[8]))
                count+=1
            
            window = canvas.create_window(270, 260, anchor="nw", window=rp_irwc_tree)

        else:
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=50)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=300)
            tree.heading("# 4", text="Customer")
            tree.column("# 5", anchor=E, stretch=NO, width=100)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=100)
            tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)
       
       

    elif rpcheckvar1_irwc.get()==1 and rpcheckvar2_irwc.get()==0 and rpcheckvar3_irwc.get()==1:
        if company is not None:

            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders
            rp_inv_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
            rp_irwc_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_irwc_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_irwc_tree.heading("# 1", text="No")
            rp_irwc_tree.column("# 2", anchor=E, stretch=NO, width=90)
            rp_irwc_tree.heading("# 2", text="Date")
            rp_irwc_tree.column("# 3", anchor=E, stretch=NO, width=90)
            rp_irwc_tree.heading("# 3", text="Due Date")
            rp_irwc_tree.column("# 4", anchor=E, stretch=NO, width=300)
            rp_irwc_tree.heading("# 4", text="Customer")
            rp_irwc_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_irwc_tree.heading("# 5", text="Status")
            rp_irwc_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_irwc_tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            rp_irwc_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))
            
            for record in rp_irwc_tree.get_children():
                rp_irwc_tree.delete(record)
            count=0

            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE(invodate BETWEEN %s and %s and totpaid="0" or balance="0")'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()
            
            
            for i in tre:
                rp_irwc_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[18], i[4], i[8]))                
                count += 1
            
            window = canvas.create_window(270, 260, anchor="nw", window=rp_irwc_tree)

        else:
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=50)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=300)
            tree.heading("# 4", text="Customer")
            tree.column("# 5", anchor=E, stretch=NO, width=100)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=100)
            tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)

    elif rpcheckvar1_irwc.get()==0 and rpcheckvar2_irwc.get()==0 and rpcheckvar3_irwc.get()==1:
        if company is not None:

            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders
            rp_irwc_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_irwc_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_irwc_tree.heading("# 1", text="No")
            rp_irwc_tree.column("# 2", anchor=E, stretch=NO, width=90)
            rp_irwc_tree.heading("# 2", text="Date")
            rp_irwc_tree.column("# 3", anchor=E, stretch=NO, width=90)
            rp_irwc_tree.heading("# 3", text="Due Date")
            rp_irwc_tree.column("# 4", anchor=E, stretch=NO, width=300)
            rp_irwc_tree.heading("# 4", text="Customer")
            rp_irwc_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_irwc_tree.heading("# 5", text="Status")
            rp_irwc_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_irwc_tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            rp_irwc_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))
            
            for record in rp_irwc_tree.get_children():
                rp_irwc_tree.delete(record)
            count=0

            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE(invodate BETWEEN %s and %s and totpaid="0")'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()
            
            
            for i in tre:
                rp_irwc_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[18], i[4], i[8]))                
                count += 1
            
            window = canvas.create_window(270, 260, anchor="nw", window=rp_irwc_tree)

        else:
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=50)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=300)
            tree.heading("# 4", text="Customer")
            tree.column("# 5", anchor=E, stretch=NO, width=100)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=100)
            tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)

    elif rpcheckvar1_irwc.get()==1 and rpcheckvar2_ir.get()==0 and rpcheckvar3_irwc.get()==0:
        if company is not None:

            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders
            rp_irwc_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_irwc_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_irwc_tree.heading("# 1", text="No")
            rp_irwc_tree.column("# 2", anchor=E, stretch=NO, width=90)
            rp_irwc_tree.heading("# 2", text="Date")
            rp_irwc_tree.column("# 3", anchor=E, stretch=NO, width=90)
            rp_irwc_tree.heading("# 3", text="Due Date")
            rp_irwc_tree.column("# 4", anchor=E, stretch=NO, width=300)
            rp_irwc_tree.heading("# 4", text="Customer")
            rp_irwc_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_irwc_tree.heading("# 5", text="Status")
            rp_irwc_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_irwc_tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            rp_irwc_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))
            
            for record in rp_irwc_tree.get_children():
                rp_irwc_tree.delete(record)
            count=0

            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE(invodate BETWEEN %s and %s and totpaid != "0")'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()
            
            
            for i in tre:
                rp_irwc_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[18], i[4], i[8]))                
                count += 1
            
            window = canvas.create_window(270, 260, anchor="nw", window=rp_irwc_tree)

        else:
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=50)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=300)
            tree.heading("# 4", text="Customer")
            tree.column("# 5", anchor=E, stretch=NO, width=100)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=100)
            tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)

    elif rpcheckvar1_irwc.get()==1 and rpcheckvar2_irwc.get()==1 and rpcheckvar3_irwc.get()==1:
        if company is not None:

            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders
            rp_irwc_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_irwc_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_irwc_tree.heading("# 1", text="No")
            rp_irwc_tree.column("# 2", anchor=E, stretch=NO, width=90)
            rp_irwc_tree.heading("# 2", text="Date")
            rp_irwc_tree.column("# 3", anchor=E, stretch=NO, width=90)
            rp_irwc_tree.heading("# 3", text="Due Date")
            rp_irwc_tree.column("# 4", anchor=E, stretch=NO, width=300)
            rp_irwc_tree.heading("# 4", text="Customer")
            rp_irwc_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_irwc_tree.heading("# 5", text="Status")
            rp_irwc_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_irwc_tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            rp_irwc_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))
            
            for record in rp_irwc_tree.get_children():
                rp_irwc_tree.delete(record)
            count=0

            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE invodate BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()
            
            
            for i in tre:
                rp_irwc_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[18], i[4], i[8]))                
                count += 1
            
            window = canvas.create_window(270, 260, anchor="nw", window=rp_irwc_tree)

        else:
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=50)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=300)
            tree.heading("# 4", text="Customer")
            tree.column("# 5", anchor=E, stretch=NO, width=100)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=100)
            tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)

    elif rpcheckvar1_irwc.get()==0 and rpcheckvar2_irwc.get()==1 and rpcheckvar3_irwc.get()==1:
        if company is not None:

            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders
            rp_irwc_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_irwc_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_irwc_tree.heading("# 1", text="No")
            rp_irwc_tree.column("# 2", anchor=E, stretch=NO, width=90)
            rp_irwc_tree.heading("# 2", text="Date")
            rp_irwc_tree.column("# 3", anchor=E, stretch=NO, width=90)
            rp_irwc_tree.heading("# 3", text="Due Date")
            rp_irwc_tree.column("# 4", anchor=E, stretch=NO, width=300)
            rp_irwc_tree.heading("# 4", text="Customer")
            rp_irwc_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_irwc_tree.heading("# 5", text="Status")
            rp_irwc_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_irwc_tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            rp_irwc_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))
            
            for record in rp_irwc_tree.get_children():
                rp_irwc_tree.delete(record)
            count=0

            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE(invodate BETWEEN %s and %s and totpaid="0" or invoicetot="0")'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()
            
            
            for i in tre:
                rp_irwc_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[18], i[4], i[8]))                
                count += 1
            
            window = canvas.create_window(270, 260, anchor="nw", window=rp_irwc_tree)

        else:
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=50)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=300)
            tree.heading("# 4", text="Customer")
            tree.column("# 5", anchor=E, stretch=NO, width=100)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=100)
            tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)

            

    elif rpcheckvar1_irwc.get()==1 and rpcheckvar2_irwc.get()==1 and rpcheckvar3_irwc.get()==0:
        if company is not None:

            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders
            rp_irwc_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_irwc_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_irwc_tree.heading("# 1", text="No")
            rp_irwc_tree.column("# 2", anchor=E, stretch=NO, width=90)
            rp_irwc_tree.heading("# 2", text="Date")
            rp_irwc_tree.column("# 3", anchor=E, stretch=NO, width=90)
            rp_irwc_tree.heading("# 3", text="Due Date")
            rp_irwc_tree.column("# 4", anchor=E, stretch=NO, width=300)
            rp_irwc_tree.heading("# 4", text="Customer")
            rp_irwc_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_irwc_tree.heading("# 5", text="Status")
            rp_irwc_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_irwc_tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            rp_irwc_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))
            
            for record in rp_irwc_tree.get_children():
                rp_irwc_tree.delete(record)
            count=0

            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE(invodate BETWEEN %s and %s and totpaid is not null or invoicetot="0")'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()
            
            
            for i in tre:
                rp_irwc_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[18], i[4], i[8]))                
                count += 1
            
            window = canvas.create_window(270, 260, anchor="nw", window=rp_irwc_tree)

        else:
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=50)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=300)
            tree.heading("# 4", text="Customer")
            tree.column("# 5", anchor=E, stretch=NO, width=100)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=100)
            tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)

    elif rpcheckvar1_irwc.get()==1 and rpcheckvar2_irwc.get()==0 and rpcheckvar3_irwc.get()==1:
        if company is not None:

            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders
            rp_irwc_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_irwc_tree.column("# 1", anchor=E, stretch=NO, width=50)
            rp_irwc_tree.heading("# 1", text="No")
            rp_irwc_tree.column("# 2", anchor=E, stretch=NO, width=90)
            rp_irwc_tree.heading("# 2", text="Date")
            rp_irwc_tree.column("# 3", anchor=E, stretch=NO, width=90)
            rp_irwc_tree.heading("# 3", text="Due Date")
            rp_irwc_tree.column("# 4", anchor=E, stretch=NO, width=300)
            rp_irwc_tree.heading("# 4", text="Customer")
            rp_irwc_tree.column("# 5", anchor=E, stretch=NO, width=100)
            rp_irwc_tree.heading("# 5", text="Status")
            rp_irwc_tree.column("# 6", anchor=E, stretch=NO, width=100)
            rp_irwc_tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            rp_irwc_tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))
            
            for record in rp_irwc_tree.get_children():
                rp_irwc_tree.delete(record)
            count=0

            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE(invodate BETWEEN %s and %s and totpaid="0" or balance!="0")'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()
            
            
            for i in tre:
                rp_irwc_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[18], i[4], i[8]))                
                count += 1
            
            window = canvas.create_window(270, 260, anchor="nw", window=rp_irwc_tree)

        else:
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=50)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=300)
            tree.heading("# 4", text="Customer")
            tree.column("# 5", anchor=E, stretch=NO, width=100)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=100)
            tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)
    else:
        pass


def check_tri():
    in_dat=trifrm.get()
    cr=trito.get()
    sql_company = "SELECT * from company"
    fbcursor.execute(sql_company)
    company= fbcursor.fetchone()

    if rpcheckvar1_tri.get()==0 and rpcheckvar2_tri.get()==0 and rpcheckvar3_tri.get()==0:

            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rep_tri_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rep_tri_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rep_tri_tree.heading("# 1", text="Invoice No")
            rep_tri_tree.column("# 2", anchor=E, stretch=NO, width=100)
            rep_tri_tree.heading("# 2", text="Issue Date")
            rep_tri_tree.column("# 3", anchor=E, stretch=NO, width=100)
            rep_tri_tree.heading("# 3", text="Due Date")
            rep_tri_tree.column("# 4", anchor=E, stretch=NO, width=130)
            rep_tri_tree.heading("# 4", text="Total Before TAX")
            rep_tri_tree.column("# 5", anchor=E, stretch=NO, width=90)
            rep_tri_tree.heading("# 5", text="TAX1")
            rep_tri_tree.column("# 6", anchor=E, stretch=NO, width=90)
            rep_tri_tree.heading("# 6", text="TAX2")
            rep_tri_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rep_tri_tree.heading("# 7", text="Invoice Total")

            # Insert the data in Treeview widget
            rep_tri_tree.insert('', 'end',text="1",values=('','-No Data-','','Total Before TAX','TAX1','TAX2','Invoice Total'))

            window = canvas.create_window(270, 260, anchor="nw", window=rep_tri_tree)
        
    elif rpcheckvar1_tri.get()==0 and rpcheckvar2_tri.get()==1 and rpcheckvar3_tri.get()==0:
        if company is not None:

            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders
            rep_tro_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rep_tro_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 1", text="Invoice No")
            rep_tro_tree.column("# 2", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 2", text="Issue Date")
            rep_tro_tree.column("# 3", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 3", text="Due Date")
            rep_tro_tree.column("# 4", anchor=E, stretch=NO, width=130)
            rep_tro_tree.heading("# 4", text="Total Before TAX")
            rep_tro_tree.column("# 5", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 5", text="TAX1")
            rep_tro_tree.column("# 6", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 6", text="TAX2")
            rep_tro_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 7", text="Invoice Total")

            # Insert the data in Treeview widget
            rep_tro_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            
            for record in rep_tro_tree.get_children():
                rep_tro_tree.delete(record)
            count=0

            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE(invodate BETWEEN %s and %s AND 	invoicetot="0")'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()
            
            
            for i in tre:
                rep_tro_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[37], i[16], i[36],i[8]))
                count+=1
            
            window = canvas.create_window(270, 260, anchor="nw", window=rep_tro_tree)

        else:
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=50)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=300)
            tree.heading("# 4", text="Customer")
            tree.column("# 5", anchor=E, stretch=NO, width=100)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=100)
            tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)
       
       

    elif rpcheckvar1_tri.get()==1 and rpcheckvar2_tri.get()==0 and rpcheckvar3_tri.get()==1:
        if company is not None:

            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            rep_tro_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rep_tro_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 1", text="Invoice No")
            rep_tro_tree.column("# 2", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 2", text="Issue Date")
            rep_tro_tree.column("# 3", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 3", text="Due Date")
            rep_tro_tree.column("# 4", anchor=E, stretch=NO, width=130)
            rep_tro_tree.heading("# 4", text="Total Before TAX")
            rep_tro_tree.column("# 5", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 5", text="TAX1")
            rep_tro_tree.column("# 6", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 6", text="TAX2")
            rep_tro_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 7", text="Invoice Total")

            # Insert the data in Treeview widget
            rep_tro_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            
            for record in rep_tro_tree.get_children():
                rep_tro_tree.delete(record)
            count=0

            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE(invodate BETWEEN %s and %s and totpaid="0" or balance="0")'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()
            
            
            for i in tre:
                rep_tro_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[37], i[16], i[36],i[8]))
                count += 1
            
            window = canvas.create_window(270, 260, anchor="nw", window=rep_tro_tree)

        else:
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=50)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=300)
            tree.heading("# 4", text="Customer")
            tree.column("# 5", anchor=E, stretch=NO, width=100)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=100)
            tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)

    elif rpcheckvar1_tri.get()==0 and rpcheckvar2_tri.get()==0 and rpcheckvar3_tri.get()==1:
        if company is not None:

            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders
            rep_tro_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rep_tro_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 1", text="Invoice No")
            rep_tro_tree.column("# 2", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 2", text="Issue Date")
            rep_tro_tree.column("# 3", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 3", text="Due Date")
            rep_tro_tree.column("# 4", anchor=E, stretch=NO, width=130)
            rep_tro_tree.heading("# 4", text="Total Before TAX")
            rep_tro_tree.column("# 5", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 5", text="TAX1")
            rep_tro_tree.column("# 6", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 6", text="TAX2")
            rep_tro_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 7", text="Invoice Total")

            # Insert the data in Treeview widget
            rep_tro_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            
            for record in rep_tro_tree.get_children():
                rep_tro_tree.delete(record)
            count=0

            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE(invodate BETWEEN %s and %s and totpaid="0")'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()
            
            
            for i in tre:
                rep_tro_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[37], i[16], i[36],i[8]))
                count += 1
            
            window = canvas.create_window(270, 260, anchor="nw", window=rep_tro_tree)

        else:
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=50)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=300)
            tree.heading("# 4", text="Customer")
            tree.column("# 5", anchor=E, stretch=NO, width=100)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=100)
            tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)

    elif rpcheckvar1_tri.get()==1 and rpcheckvar2_tri.get()==0 and rpcheckvar3_tri.get()==0:
        if company is not None:

            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders
            rep_tro_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rep_tro_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 1", text="Invoice No")
            rep_tro_tree.column("# 2", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 2", text="Issue Date")
            rep_tro_tree.column("# 3", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 3", text="Due Date")
            rep_tro_tree.column("# 4", anchor=E, stretch=NO, width=130)
            rep_tro_tree.heading("# 4", text="Total Before TAX")
            rep_tro_tree.column("# 5", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 5", text="TAX1")
            rep_tro_tree.column("# 6", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 6", text="TAX2")
            rep_tro_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 7", text="Invoice Total")

            # Insert the data in Treeview widget
            rep_tro_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            
            for record in rep_tro_tree.get_children():
                rep_tro_tree.delete(record)
            count=0

            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE(invodate BETWEEN %s and %s and totpaid != "0")'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()
            
            
            for i in tre:
                rep_tro_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[37], i[16], i[36],i[8]))
                count += 1
            
            window = canvas.create_window(270, 260, anchor="nw", window=rep_tro_tree)

        else:
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=50)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=300)
            tree.heading("# 4", text="Customer")
            tree.column("# 5", anchor=E, stretch=NO, width=100)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=100)
            tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)

    elif rpcheckvar1_tri.get()==1 and rpcheckvar2_tri.get()==1 and rpcheckvar3_tri.get()==1:
        if company is not None:

            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders
            rep_tro_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rep_tro_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 1", text="Invoice No")
            rep_tro_tree.column("# 2", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 2", text="Issue Date")
            rep_tro_tree.column("# 3", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 3", text="Due Date")
            rep_tro_tree.column("# 4", anchor=E, stretch=NO, width=130)
            rep_tro_tree.heading("# 4", text="Total Before TAX")
            rep_tro_tree.column("# 5", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 5", text="TAX1")
            rep_tro_tree.column("# 6", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 6", text="TAX2")
            rep_tro_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 7", text="Invoice Total")

            # Insert the data in Treeview widget
            rep_tro_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            
            for record in rep_tro_tree.get_children():
                rep_tro_tree.delete(record)
            count=0

            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE invodate BETWEEN %s and %s'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()
            
            
            for i in tre:
                rep_tro_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[37], i[16], i[36],i[8]))
                count += 1
            
            window = canvas.create_window(270, 260, anchor="nw", window=rep_tro_tree)

        else:
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=50)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=300)
            tree.heading("# 4", text="Customer")
            tree.column("# 5", anchor=E, stretch=NO, width=100)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=100)
            tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)

    elif rpcheckvar1_tri.get()==0 and rpcheckvar2_tri.get()==1 and rpcheckvar3_tri.get()==1:
        if company is not None:

            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders
            rep_tro_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rep_tro_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 1", text="Invoice No")
            rep_tro_tree.column("# 2", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 2", text="Issue Date")
            rep_tro_tree.column("# 3", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 3", text="Due Date")
            rep_tro_tree.column("# 4", anchor=E, stretch=NO, width=130)
            rep_tro_tree.heading("# 4", text="Total Before TAX")
            rep_tro_tree.column("# 5", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 5", text="TAX1")
            rep_tro_tree.column("# 6", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 6", text="TAX2")
            rep_tro_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 7", text="Invoice Total")

            # Insert the data in Treeview widget
            rep_tro_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            
            for record in rep_tro_tree.get_children():
                rep_tro_tree.delete(record)
            count=0

            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE(invodate BETWEEN %s and %s and totpaid="0" or invoicetot="0")'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()
            
            
            for i in tre:
                rep_tro_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[37], i[16], i[36],i[8]))
                count += 1
            
            window = canvas.create_window(270, 260, anchor="nw", window=rep_tro_tree)

        else:
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=50)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=300)
            tree.heading("# 4", text="Customer")
            tree.column("# 5", anchor=E, stretch=NO, width=100)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=100)
            tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)

            

    elif rpcheckvar1_tri.get()==1 and rpcheckvar2_tri.get()==1 and rpcheckvar3_tri.get()==0:
        if company is not None:

            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders
            rep_tro_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rep_tro_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 1", text="Invoice No")
            rep_tro_tree.column("# 2", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 2", text="Issue Date")
            rep_tro_tree.column("# 3", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 3", text="Due Date")
            rep_tro_tree.column("# 4", anchor=E, stretch=NO, width=130)
            rep_tro_tree.heading("# 4", text="Total Before TAX")
            rep_tro_tree.column("# 5", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 5", text="TAX1")
            rep_tro_tree.column("# 6", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 6", text="TAX2")
            rep_tro_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 7", text="Invoice Total")

            # Insert the data in Treeview widget
            rep_tro_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            
            for record in rep_tro_tree.get_children():
                rep_tro_tree.delete(record)
            count=0

            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE(invodate BETWEEN %s and %s and totpaid is not null or invoicetot="0")'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()
            
            
            for i in tre:
                rep_tro_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[37], i[16], i[36],i[8]))
                count += 1
            
            window = canvas.create_window(270, 260, anchor="nw", window=rep_tro_tree)

        else:
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=50)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=300)
            tree.heading("# 4", text="Customer")
            tree.column("# 5", anchor=E, stretch=NO, width=100)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=100)
            tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)

    elif rpcheckvar1_tri.get()==1 and rpcheckvar2_tri.get()==0 and rpcheckvar3_tri.get()==1:
        if company is not None:

            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders
            rep_tro_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7"), show='headings', height=55, style='mystyle.Treeview')
            rep_tro_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 1", text="Invoice No")
            rep_tro_tree.column("# 2", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 2", text="Issue Date")
            rep_tro_tree.column("# 3", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 3", text="Due Date")
            rep_tro_tree.column("# 4", anchor=E, stretch=NO, width=130)
            rep_tro_tree.heading("# 4", text="Total Before TAX")
            rep_tro_tree.column("# 5", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 5", text="TAX1")
            rep_tro_tree.column("# 6", anchor=E, stretch=NO, width=90)
            rep_tro_tree.heading("# 6", text="TAX2")
            rep_tro_tree.column("# 7", anchor=E, stretch=NO, width=100)
            rep_tro_tree.heading("# 7", text="Invoice Total")

            # Insert the data in Treeview widget
            rep_tro_tree.insert('', 'end',text="1",values=('','','','Total Before TAX','TAX1','TAX2','Invoice Total'))
            
            for record in rep_tro_tree.get_children():
                rep_tro_tree.delete(record)
            count=0

            var1=in_dat
            var2=cr
            sql_inv_dt='SELECT * FROM invoice WHERE(invodate BETWEEN %s and %s and totpaid="0" or balance!="0")'
            inv_valuz=(var1,var2)
            fbcursor.execute(sql_inv_dt,inv_valuz)
            tre=fbcursor.fetchall()
            
            
            for i in tre:
                rep_tro_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[1], i[2], i[3], i[37], i[16], i[36],i[8]))
                count += 1
            
            window = canvas.create_window(270, 260, anchor="nw", window=rep_tro_tree)

        else:
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=50)
            tree.heading("# 1", text="No")
            tree.column("# 2", anchor=E, stretch=NO, width=70)
            tree.heading("# 2", text="Date")
            tree.column("# 3", anchor=E, stretch=NO, width=70)
            tree.heading("# 3", text="Due Date")
            tree.column("# 4", anchor=E, stretch=NO, width=300)
            tree.heading("# 4", text="Customer")
            tree.column("# 5", anchor=E, stretch=NO, width=100)
            tree.heading("# 5", text="Status")
            tree.column("# 6", anchor=E, stretch=NO, width=100)
            tree.heading("# 6", text="Invoice Total")

            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','','Invoice Total'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)
    else:
        pass

def check_plsr():
    or_company = "SELECT * from company"
    fbcursor.execute(or_company)
    company_or= fbcursor.fetchone()

    if rpcheckvar1_plr.get()==1 and rpcheckvar2_plr.get()==0:
        
        if company_or is not None:
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_plsr_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_plsr_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rp_plsr_tree.heading("# 1", text="Product Id")
            rp_plsr_tree.column("# 2", anchor=E, stretch=NO, width=100)
            rp_plsr_tree.heading("# 2", text="Category")
            rp_plsr_tree.column("# 3", anchor=E, stretch=NO, width=150)
            rp_plsr_tree.heading("# 3", text="Product Name")
            rp_plsr_tree.column("# 4", anchor=E, stretch=NO, width=130)
            rp_plsr_tree.heading("# 4", text="Warehouse")
            rp_plsr_tree.column("# 5", anchor=E, stretch=NO, width=130)
            rp_plsr_tree.heading("# 5", text="Low Stock Limit")
            rp_plsr_tree.column("# 6", anchor=E, stretch=NO, width=70)
            rp_plsr_tree.heading("# 6", text="Stock")
            # Insert the data in Treeview widget
            rp_plsr_tree.insert('', 'end',text="1",values=('','','','','',''))
            # Insert the data in Treeview widget
            for record in rp_plsr_tree.get_children():
                rp_plsr_tree.delete(record)
            count=0
            fbcursor.execute('SELECT * from storingproduct WHERE stock > stocklimit')
            for i in fbcursor:
                rp_plsr_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[5], i[6], i[17], i[16], i[15]))
                count += 1
            
            window = canvas.create_window(290, 130, anchor="nw", window=rp_plsr_tree)
        else:
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=100)
            tree.heading("# 1", text="Product Id")
            tree.column("# 2", anchor=E, stretch=NO, width=100)
            tree.heading("# 2", text="Category")
            tree.column("# 3", anchor=E, stretch=NO, width=150)
            tree.heading("# 3", text="Product Name")
            tree.column("# 4", anchor=E, stretch=NO, width=130)
            tree.heading("# 4", text="Warehouse")
            tree.column("# 5", anchor=E, stretch=NO, width=130)
            tree.heading("# 5", text="Low Stock Limit")
            tree.column("# 6", anchor=E, stretch=NO, width=70)
            tree.heading("# 6", text="Stock")
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','',''))

            window = canvas.create_window(290, 130, anchor="nw", window=tree)


    elif rpcheckvar1_plr.get()==0 and rpcheckvar2_plr.get()==0:
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=100)
            tree.heading("# 1", text="Product Id")
            tree.column("# 2", anchor=E, stretch=NO, width=100)
            tree.heading("# 2", text="Category")
            tree.column("# 3", anchor=E, stretch=NO, width=150)
            tree.heading("# 3", text="Product Name")
            tree.column("# 4", anchor=E, stretch=NO, width=130)
            tree.heading("# 4", text="Warehouse")
            tree.column("# 5", anchor=E, stretch=NO, width=130)
            tree.heading("# 5", text="Low Stock Limit")
            tree.column("# 6", anchor=E, stretch=NO, width=70)
            tree.heading("# 6", text="Stock")
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','-No Data-','','',''))

            window = canvas.create_window(290, 130, anchor="nw", window=tree)

    elif rpcheckvar1_plr.get()==0 and rpcheckvar2_plr.get()==1:
        if company_or is not None:
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_plsr_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_plsr_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rp_plsr_tree.heading("# 1", text="Product Id")
            rp_plsr_tree.column("# 2", anchor=E, stretch=NO, width=100)
            rp_plsr_tree.heading("# 2", text="Category")
            rp_plsr_tree.column("# 3", anchor=E, stretch=NO, width=150)
            rp_plsr_tree.heading("# 3", text="Product Name")
            rp_plsr_tree.column("# 4", anchor=E, stretch=NO, width=130)
            rp_plsr_tree.heading("# 4", text="Warehouse")
            rp_plsr_tree.column("# 5", anchor=E, stretch=NO, width=130)
            rp_plsr_tree.heading("# 5", text="Low Stock Limit")
            rp_plsr_tree.column("# 6", anchor=E, stretch=NO, width=70)
            rp_plsr_tree.heading("# 6", text="Stock")
            # Insert the data in Treeview widget
            rp_plsr_tree.insert('', 'end',text="1",values=('','','','','',''))
            # Insert the data in Treeview widget
            for record in rp_plsr_tree.get_children():
                rp_plsr_tree.delete(record)
            count=0
            fbcursor.execute('SELECT * from storingproduct WHERE stock < stocklimit')
            for i in fbcursor:
                rp_plsr_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[5], i[6], i[17], i[16], i[15]))
                count += 1
            
            window = canvas.create_window(290, 130, anchor="nw", window=rp_plsr_tree)
        else:
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=100)
            tree.heading("# 1", text="Product Id")
            tree.column("# 2", anchor=E, stretch=NO, width=100)
            tree.heading("# 2", text="Category")
            tree.column("# 3", anchor=E, stretch=NO, width=150)
            tree.heading("# 3", text="Product Name")
            tree.column("# 4", anchor=E, stretch=NO, width=130)
            tree.heading("# 4", text="Warehouse")
            tree.column("# 5", anchor=E, stretch=NO, width=130)
            tree.heading("# 5", text="Low Stock Limit")
            tree.column("# 6", anchor=E, stretch=NO, width=70)
            tree.heading("# 6", text="Stock")
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','',''))

            window = canvas.create_window(290, 130, anchor="nw", window=tree)
    elif rpcheckvar1_plr.get()==1 and rpcheckvar2_plr.get()==1:
        
        if company_or is not None:
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_plsr_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_plsr_tree.column("# 1", anchor=E, stretch=NO, width=100)
            rp_plsr_tree.heading("# 1", text="Product Id")
            rp_plsr_tree.column("# 2", anchor=E, stretch=NO, width=100)
            rp_plsr_tree.heading("# 2", text="Category")
            rp_plsr_tree.column("# 3", anchor=E, stretch=NO, width=150)
            rp_plsr_tree.heading("# 3", text="Product Name")
            rp_plsr_tree.column("# 4", anchor=E, stretch=NO, width=130)
            rp_plsr_tree.heading("# 4", text="Warehouse")
            rp_plsr_tree.column("# 5", anchor=E, stretch=NO, width=130)
            rp_plsr_tree.heading("# 5", text="Low Stock Limit")
            rp_plsr_tree.column("# 6", anchor=E, stretch=NO, width=70)
            rp_plsr_tree.heading("# 6", text="Stock")
            # Insert the data in Treeview widget
            rp_plsr_tree.insert('', 'end',text="1",values=('','','','','',''))
            # Insert the data in Treeview widget
            for record in rp_plsr_tree.get_children():
                rp_plsr_tree.delete(record)
            count=0
            fbcursor.execute('SELECT * from storingproduct WHERE stock=stocklimit')
            for i in fbcursor:
                rp_plsr_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[5], i[6], i[17], i[16], i[15]))
                count += 1
            
            window = canvas.create_window(290, 130, anchor="nw", window=rp_plsr_tree)
        else:
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=100)
            tree.heading("# 1", text="Product Id")
            tree.column("# 2", anchor=E, stretch=NO, width=100)
            tree.heading("# 2", text="Category")
            tree.column("# 3", anchor=E, stretch=NO, width=150)
            tree.heading("# 3", text="Product Name")
            tree.column("# 4", anchor=E, stretch=NO, width=130)
            tree.heading("# 4", text="Warehouse")
            tree.column("# 5", anchor=E, stretch=NO, width=130)
            tree.heading("# 5", text="Low Stock Limit")
            tree.column("# 6", anchor=E, stretch=NO, width=70)
            tree.heading("# 6", text="Stock")
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','',''))

            window = canvas.create_window(290, 130, anchor="nw", window=tree)
    else:
        pass


def check_pl():
    rth=prlfilter.get()
    or_company = "SELECT * from company"
    fbcursor.execute(or_company)
    company_tro= fbcursor.fetchone()
    
    if rpcheckvar1_pl.get()==1 and rpcheckvar2_pl.get()==0:
        if rth=="All product and Services ":
            if company_tro is not None:
                        
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                rp_pl_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4"), show='headings', height=55, style='mystyle.Treeview')
                rp_pl_tree.column("# 1", anchor=E, stretch=NO, width=150)
                rp_pl_tree.heading("# 1", text="Product ID")
                rp_pl_tree.column("# 2", anchor=E, stretch=NO, width=200)
                rp_pl_tree.heading("# 2", text="Product/Service Name")
                rp_pl_tree.column("# 3", anchor=E, stretch=NO, width=200)
                rp_pl_tree.heading("# 3", text="Description")
                rp_pl_tree.column("# 4", anchor=E, stretch=NO, width=150)
                rp_pl_tree.heading("# 4", text="Unit Price")
                
                # Insert the data in Treeview widget
                rp_pl_tree.insert('', 'end',text="1",values=('','','',''))


                # Insert the data in Treeview widget
                for record in rp_pl_tree.get_children():
                    rp_pl_tree.delete(record)
                count=0
                fbcursor.execute('SELECT * from productservice WHERE stock > stocklimit')
                for i in fbcursor:
                    rp_pl_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[4], i[5], i[7]))
                    count += 1
                window = canvas.create_window(280, 130, anchor="nw", window=rp_pl_tree)
            
            
            else:

                
                # Create an instance of Style widget
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4"), show='headings', height=55, style='mystyle.Treeview')
                tree.column("# 1", anchor=E, stretch=NO, width=150)
                tree.heading("# 1", text="Product ID")
                tree.column("# 2", anchor=E, stretch=NO, width=200)
                tree.heading("# 2", text="Product/Service Name")
                tree.column("# 3", anchor=E, stretch=NO, width=200)
                tree.heading("# 3", text="Description")
                tree.column("# 4", anchor=E, stretch=NO, width=150)
                tree.heading("# 4", text="Unit Price")
                
                # Insert the data in Treeview widget
                tree.insert('', 'end',text="1",values=('','','',''))

                window = canvas.create_window(280, 130, anchor="nw", window=tree)


        #--------------------------------------------------------------------------------------------------------------
        elif rth=="All products":
            
            if company_tro is not None:           
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                rp_pl_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4"), show='headings', height=55, style='mystyle.Treeview')
                rp_pl_tree.column("# 1", anchor=E, stretch=NO, width=150)
                rp_pl_tree.heading("# 1", text="Product ID")
                rp_pl_tree.column("# 2", anchor=E, stretch=NO, width=200)
                rp_pl_tree.heading("# 2", text="Product/Service Name")
                rp_pl_tree.column("# 3", anchor=E, stretch=NO, width=200)
                rp_pl_tree.heading("# 3", text="Description")
                rp_pl_tree.column("# 4", anchor=E, stretch=NO, width=150)
                rp_pl_tree.heading("# 4", text="Unit Price")
                
                # Insert the data in Treeview widget
                rp_pl_tree.insert('', 'end',text="1",values=('','','',''))


                # Insert the data in Treeview widget
                for record in rp_pl_tree.get_children():
                    rp_pl_tree.delete(record)
                count=0
                fbcursor.execute('SELECT * from productservice WHERE (category="Products" and stock > stocklimit)')
                for i in fbcursor:
                    rp_pl_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[4], i[5], i[7]))
                    count += 1
                window = canvas.create_window(280, 130, anchor="nw", window=rp_pl_tree)
            
            
            else:

                canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')


                # Create an instance of Style widget
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4"), show='headings', height=55, style='mystyle.Treeview')
                tree.column("# 1", anchor=E, stretch=NO, width=150)
                tree.heading("# 1", text="Product ID")
                tree.column("# 2", anchor=E, stretch=NO, width=200)
                tree.heading("# 2", text="Product/Service Name")
                tree.column("# 3", anchor=E, stretch=NO, width=200)
                tree.heading("# 3", text="Description")
                tree.column("# 4", anchor=E, stretch=NO, width=150)
                tree.heading("# 4", text="Unit Price")
                
                # Insert the data in Treeview widget
                tree.insert('', 'end',text="1",values=('','','',''))

                window = canvas.create_window(280, 130, anchor="nw", window=tree)

            #===============================================================================================
        elif rth=="All Service":
            if company_tro is not None:
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                rp_pl_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4"), show='headings', height=55, style='mystyle.Treeview')
                rp_pl_tree.column("# 1", anchor=E, stretch=NO, width=150)
                rp_pl_tree.heading("# 1", text="Product ID")
                rp_pl_tree.column("# 2", anchor=E, stretch=NO, width=200)
                rp_pl_tree.heading("# 2", text="Product/Service Name")
                rp_pl_tree.column("# 3", anchor=E, stretch=NO, width=200)
                rp_pl_tree.heading("# 3", text="Description")
                rp_pl_tree.column("# 4", anchor=E, stretch=NO, width=150)
                rp_pl_tree.heading("# 4", text="Unit Price")
                
                # Insert the data in Treeview widget
                rp_pl_tree.insert('', 'end',text="1",values=('','','',''))


                # Insert the data in Treeview widget
                for record in rp_pl_tree.get_children():
                    rp_pl_tree.delete(record)
                count=0
                fbcursor.execute('SELECT * from productservice WHERE (category="Service" and stock > stocklimit)')
                for i in fbcursor:
                    rp_pl_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[4], i[5], i[7]))
                    count += 1
                window = canvas.create_window(280, 130, anchor="nw", window=rp_pl_tree)
            else:
                canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

                
                # Create an instance of Style widget
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4"), show='headings', height=55, style='mystyle.Treeview')
                tree.column("# 1", anchor=E, stretch=NO, width=150)
                tree.heading("# 1", text="Product ID")
                tree.column("# 2", anchor=E, stretch=NO, width=200)
                tree.heading("# 2", text="Product/Service Name")
                tree.column("# 3", anchor=E, stretch=NO, width=200)
                tree.heading("# 3", text="Description")
                tree.column("# 4", anchor=E, stretch=NO, width=150)
                tree.heading("# 4", text="Unit Price")
                
                # Insert the data in Treeview widget
                tree.insert('', 'end',text="1",values=('','','',''))

                window = canvas.create_window(280, 130, anchor="nw", window=tree)
        elif rth=="Default":
            if company_tro is not None:
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                rp_pl_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4"), show='headings', height=55, style='mystyle.Treeview')
                rp_pl_tree.column("# 1", anchor=E, stretch=NO, width=150)
                rp_pl_tree.heading("# 1", text="Product ID")
                rp_pl_tree.column("# 2", anchor=E, stretch=NO, width=200)
                rp_pl_tree.heading("# 2", text="Product/Service Name")
                rp_pl_tree.column("# 3", anchor=E, stretch=NO, width=200)
                rp_pl_tree.heading("# 3", text="Description")
                rp_pl_tree.column("# 4", anchor=E, stretch=NO, width=150)
                rp_pl_tree.heading("# 4", text="Unit Price")
                
                # Insert the data in Treeview widget
                rp_pl_tree.insert('', 'end',text="1",values=('','','',''))


                # Insert the data in Treeview widget
                for record in rp_pl_tree.get_children():
                    rp_pl_tree.delete(record)
                count=0
                fbcursor.execute('SELECT * from productservice')
                for i in fbcursor:
                    rp_pl_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[4], i[5], i[7]))
                    count += 1
                window = canvas.create_window(280, 130, anchor="nw", window=rp_pl_tree)
            else:
                canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

                
                # Create an instance of Style widget
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4"), show='headings', height=55, style='mystyle.Treeview')
                tree.column("# 1", anchor=E, stretch=NO, width=150)
                tree.heading("# 1", text="Product ID")
                tree.column("# 2", anchor=E, stretch=NO, width=200)
                tree.heading("# 2", text="Product/Service Name")
                tree.column("# 3", anchor=E, stretch=NO, width=200)
                tree.heading("# 3", text="Description")
                tree.column("# 4", anchor=E, stretch=NO, width=150)
                tree.heading("# 4", text="Unit Price")
                
                # Insert the data in Treeview widget
                tree.insert('', 'end',text="1",values=('','','',''))

                window = canvas.create_window(280, 130, anchor="nw", window=tree)
            
    elif rpcheckvar1_pl.get()==0 and rpcheckvar2_pl.get()==1:
        if rth=="All product and Services ":
            if company_tro is not None:
                        
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                rp_pl_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4"), show='headings', height=55, style='mystyle.Treeview')
                rp_pl_tree.column("# 1", anchor=E, stretch=NO, width=150)
                rp_pl_tree.heading("# 1", text="Product ID")
                rp_pl_tree.column("# 2", anchor=E, stretch=NO, width=200)
                rp_pl_tree.heading("# 2", text="Product/Service Name")
                rp_pl_tree.column("# 3", anchor=E, stretch=NO, width=200)
                rp_pl_tree.heading("# 3", text="Description")
                rp_pl_tree.column("# 4", anchor=E, stretch=NO, width=150)
                rp_pl_tree.heading("# 4", text="Unit Price")
                
                # Insert the data in Treeview widget
                rp_pl_tree.insert('', 'end',text="1",values=('','','',''))


                # Insert the data in Treeview widget
                for record in rp_pl_tree.get_children():
                    rp_pl_tree.delete(record)
                count=0
                fbcursor.execute('SELECT * from productservice WHERE stock < stocklimit')
                for i in fbcursor:
                    rp_pl_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[4], i[5], i[7]))
                    count += 1
                window = canvas.create_window(280, 130, anchor="nw", window=rp_pl_tree)
            
            
            else:

                
                # Create an instance of Style widget
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4"), show='headings', height=55, style='mystyle.Treeview')
                tree.column("# 1", anchor=E, stretch=NO, width=150)
                tree.heading("# 1", text="Product ID")
                tree.column("# 2", anchor=E, stretch=NO, width=200)
                tree.heading("# 2", text="Product/Service Name")
                tree.column("# 3", anchor=E, stretch=NO, width=200)
                tree.heading("# 3", text="Description")
                tree.column("# 4", anchor=E, stretch=NO, width=150)
                tree.heading("# 4", text="Unit Price")
                
                # Insert the data in Treeview widget
                tree.insert('', 'end',text="1",values=('','','',''))

                window = canvas.create_window(280, 130, anchor="nw", window=tree)


        #--------------------------------------------------------------------------------------------------------------
        elif rth=="All products":
            
            if company_tro is not None:           
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                rp_pl_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4"), show='headings', height=55, style='mystyle.Treeview')
                rp_pl_tree.column("# 1", anchor=E, stretch=NO, width=150)
                rp_pl_tree.heading("# 1", text="Product ID")
                rp_pl_tree.column("# 2", anchor=E, stretch=NO, width=200)
                rp_pl_tree.heading("# 2", text="Product/Service Name")
                rp_pl_tree.column("# 3", anchor=E, stretch=NO, width=200)
                rp_pl_tree.heading("# 3", text="Description")
                rp_pl_tree.column("# 4", anchor=E, stretch=NO, width=150)
                rp_pl_tree.heading("# 4", text="Unit Price")
                
                # Insert the data in Treeview widget
                rp_pl_tree.insert('', 'end',text="1",values=('','','',''))


                # Insert the data in Treeview widget
                for record in rp_pl_tree.get_children():
                    rp_pl_tree.delete(record)
                count=0
                fbcursor.execute('SELECT * from productservice WHERE (category="Products" and stock < stocklimit)')
                for i in fbcursor:
                    rp_pl_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[4], i[5], i[7]))
                    count += 1
                window = canvas.create_window(280, 130, anchor="nw", window=rp_pl_tree)
            
            
            else:

                canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')


                # Create an instance of Style widget
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4"), show='headings', height=55, style='mystyle.Treeview')
                tree.column("# 1", anchor=E, stretch=NO, width=150)
                tree.heading("# 1", text="Product ID")
                tree.column("# 2", anchor=E, stretch=NO, width=200)
                tree.heading("# 2", text="Product/Service Name")
                tree.column("# 3", anchor=E, stretch=NO, width=200)
                tree.heading("# 3", text="Description")
                tree.column("# 4", anchor=E, stretch=NO, width=150)
                tree.heading("# 4", text="Unit Price")
                
                # Insert the data in Treeview widget
                tree.insert('', 'end',text="1",values=('','','',''))

                window = canvas.create_window(280, 130, anchor="nw", window=tree)

            #===============================================================================================
        elif rth=="All Service":
            if company_tro is not None:
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                rp_pl_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4"), show='headings', height=55, style='mystyle.Treeview')
                rp_pl_tree.column("# 1", anchor=E, stretch=NO, width=150)
                rp_pl_tree.heading("# 1", text="Product ID")
                rp_pl_tree.column("# 2", anchor=E, stretch=NO, width=200)
                rp_pl_tree.heading("# 2", text="Product/Service Name")
                rp_pl_tree.column("# 3", anchor=E, stretch=NO, width=200)
                rp_pl_tree.heading("# 3", text="Description")
                rp_pl_tree.column("# 4", anchor=E, stretch=NO, width=150)
                rp_pl_tree.heading("# 4", text="Unit Price")
                
                # Insert the data in Treeview widget
                rp_pl_tree.insert('', 'end',text="1",values=('','','',''))


                # Insert the data in Treeview widget
                for record in rp_pl_tree.get_children():
                    rp_pl_tree.delete(record)
                count=0
                fbcursor.execute('SELECT * from productservice WHERE (category="Service" and stock < stocklimit)')
                for i in fbcursor:
                    rp_pl_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[4], i[5], i[7]))
                    count += 1
                window = canvas.create_window(280, 130, anchor="nw", window=rp_pl_tree)
            else:
                canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

                
                # Create an instance of Style widget
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4"), show='headings', height=55, style='mystyle.Treeview')
                tree.column("# 1", anchor=E, stretch=NO, width=150)
                tree.heading("# 1", text="Product ID")
                tree.column("# 2", anchor=E, stretch=NO, width=200)
                tree.heading("# 2", text="Product/Service Name")
                tree.column("# 3", anchor=E, stretch=NO, width=200)
                tree.heading("# 3", text="Description")
                tree.column("# 4", anchor=E, stretch=NO, width=150)
                tree.heading("# 4", text="Unit Price")
                
                # Insert the data in Treeview widget
                tree.insert('', 'end',text="1",values=('','','',''))

                window = canvas.create_window(280, 130, anchor="nw", window=tree)

        
    #==============================================================================================================
        elif rth=="Default":
            if company_tro is not None:
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                rp_pl_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4"), show='headings', height=55, style='mystyle.Treeview')
                rp_pl_tree.column("# 1", anchor=E, stretch=NO, width=150)
                rp_pl_tree.heading("# 1", text="Product ID")
                rp_pl_tree.column("# 2", anchor=E, stretch=NO, width=200)
                rp_pl_tree.heading("# 2", text="Product/Service Name")
                rp_pl_tree.column("# 3", anchor=E, stretch=NO, width=200)
                rp_pl_tree.heading("# 3", text="Description")
                rp_pl_tree.column("# 4", anchor=E, stretch=NO, width=150)
                rp_pl_tree.heading("# 4", text="Unit Price")
                
                # Insert the data in Treeview widget
                rp_pl_tree.insert('', 'end',text="1",values=('','','',''))


                # Insert the data in Treeview widget
                for record in rp_pl_tree.get_children():
                    rp_pl_tree.delete(record)
                count=0
                fbcursor.execute('SELECT * from productservice WHERE (category="Default" and stock < stocklimit)')
                for i in fbcursor:
                    rp_pl_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[4], i[5], i[7]))
                    count += 1
                window = canvas.create_window(280, 130, anchor="nw", window=rp_pl_tree)
            else:
                canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

                
                # Create an instance of Style widget
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4"), show='headings', height=55, style='mystyle.Treeview')
                tree.column("# 1", anchor=E, stretch=NO, width=150)
                tree.heading("# 1", text="Product ID")
                tree.column("# 2", anchor=E, stretch=NO, width=200)
                tree.heading("# 2", text="Product/Service Name")
                tree.column("# 3", anchor=E, stretch=NO, width=200)
                tree.heading("# 3", text="Description")
                tree.column("# 4", anchor=E, stretch=NO, width=150)
                tree.heading("# 4", text="Unit Price")
                
                # Insert the data in Treeview widget
                tree.insert('', 'end',text="1",values=('','','',''))

                window = canvas.create_window(280, 130, anchor="nw", window=tree)
    elif rpcheckvar1_pl.get()==1 and rpcheckvar2_pl.get()==1:
        if rth=="All product and Services ":
            if company_tro is not None:
                        
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                rp_pl_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4"), show='headings', height=55, style='mystyle.Treeview')
                rp_pl_tree.column("# 1", anchor=E, stretch=NO, width=150)
                rp_pl_tree.heading("# 1", text="Product ID")
                rp_pl_tree.column("# 2", anchor=E, stretch=NO, width=200)
                rp_pl_tree.heading("# 2", text="Product/Service Name")
                rp_pl_tree.column("# 3", anchor=E, stretch=NO, width=200)
                rp_pl_tree.heading("# 3", text="Description")
                rp_pl_tree.column("# 4", anchor=E, stretch=NO, width=150)
                rp_pl_tree.heading("# 4", text="Unit Price")
                
                # Insert the data in Treeview widget
                rp_pl_tree.insert('', 'end',text="1",values=('','','',''))


                # Insert the data in Treeview widget
                for record in rp_pl_tree.get_children():
                    rp_pl_tree.delete(record)
                count=0
                fbcursor.execute('SELECT * from productservice')
                for i in fbcursor:
                    rp_pl_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[4], i[5], i[7]))
                    count += 1
                window = canvas.create_window(280, 130, anchor="nw", window=rp_pl_tree)
            
            
            else:

                
                # Create an instance of Style widget
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4"), show='headings', height=55, style='mystyle.Treeview')
                tree.column("# 1", anchor=E, stretch=NO, width=150)
                tree.heading("# 1", text="Product ID")
                tree.column("# 2", anchor=E, stretch=NO, width=200)
                tree.heading("# 2", text="Product/Service Name")
                tree.column("# 3", anchor=E, stretch=NO, width=200)
                tree.heading("# 3", text="Description")
                tree.column("# 4", anchor=E, stretch=NO, width=150)
                tree.heading("# 4", text="Unit Price")
                
                # Insert the data in Treeview widget
                tree.insert('', 'end',text="1",values=('','','',''))

                window = canvas.create_window(280, 130, anchor="nw", window=tree)


        #--------------------------------------------------------------------------------------------------------------
        elif rth=="All products":
            
            if company_tro is not None:           
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                rp_pl_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4"), show='headings', height=55, style='mystyle.Treeview')
                rp_pl_tree.column("# 1", anchor=E, stretch=NO, width=150)
                rp_pl_tree.heading("# 1", text="Product ID")
                rp_pl_tree.column("# 2", anchor=E, stretch=NO, width=200)
                rp_pl_tree.heading("# 2", text="Product/Service Name")
                rp_pl_tree.column("# 3", anchor=E, stretch=NO, width=200)
                rp_pl_tree.heading("# 3", text="Description")
                rp_pl_tree.column("# 4", anchor=E, stretch=NO, width=150)
                rp_pl_tree.heading("# 4", text="Unit Price")
                
                # Insert the data in Treeview widget
                rp_pl_tree.insert('', 'end',text="1",values=('','','',''))


                # Insert the data in Treeview widget
                for record in rp_pl_tree.get_children():
                    rp_pl_tree.delete(record)
                count=0
                fbcursor.execute('SELECT * from productservice WHERE category="Products" ')
                for i in fbcursor:
                    rp_pl_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[4], i[5], i[7]))
                    count += 1
                window = canvas.create_window(280, 130, anchor="nw", window=rp_pl_tree)
            
            
            else:

             


                # Create an instance of Style widget
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4"), show='headings', height=55, style='mystyle.Treeview')
                tree.column("# 1", anchor=E, stretch=NO, width=150)
                tree.heading("# 1", text="Product ID")
                tree.column("# 2", anchor=E, stretch=NO, width=200)
                tree.heading("# 2", text="Product/Service Name")
                tree.column("# 3", anchor=E, stretch=NO, width=200)
                tree.heading("# 3", text="Description")
                tree.column("# 4", anchor=E, stretch=NO, width=150)
                tree.heading("# 4", text="Unit Price")
                
                # Insert the data in Treeview widget
                tree.insert('', 'end',text="1",values=('','','',''))

                window = canvas.create_window(280, 130, anchor="nw", window=tree)

            #===============================================================================================
        elif rth=="All Service":
            if company_tro is not None:
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                rp_pl_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4"), show='headings', height=55, style='mystyle.Treeview')
                rp_pl_tree.column("# 1", anchor=E, stretch=NO, width=150)
                rp_pl_tree.heading("# 1", text="Product ID")
                rp_pl_tree.column("# 2", anchor=E, stretch=NO, width=200)
                rp_pl_tree.heading("# 2", text="Product/Service Name")
                rp_pl_tree.column("# 3", anchor=E, stretch=NO, width=200)
                rp_pl_tree.heading("# 3", text="Description")
                rp_pl_tree.column("# 4", anchor=E, stretch=NO, width=150)
                rp_pl_tree.heading("# 4", text="Unit Price")
                
                # Insert the data in Treeview widget
                rp_pl_tree.insert('', 'end',text="1",values=('','','',''))


                # Insert the data in Treeview widget
                for record in rp_pl_tree.get_children():
                    rp_pl_tree.delete(record)
                count=0
                fbcursor.execute('SELECT * from productservice WHERE category="Service"')
                for i in fbcursor:
                    rp_pl_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[4], i[5], i[7]))
                    count += 1
                window = canvas.create_window(280, 130, anchor="nw", window=rp_pl_tree)
            else:
                canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

                
                # Create an instance of Style widget
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4"), show='headings', height=55, style='mystyle.Treeview')
                tree.column("# 1", anchor=E, stretch=NO, width=150)
                tree.heading("# 1", text="Product ID")
                tree.column("# 2", anchor=E, stretch=NO, width=200)
                tree.heading("# 2", text="Product/Service Name")
                tree.column("# 3", anchor=E, stretch=NO, width=200)
                tree.heading("# 3", text="Description")
                tree.column("# 4", anchor=E, stretch=NO, width=150)
                tree.heading("# 4", text="Unit Price")
                
                # Insert the data in Treeview widget
                tree.insert('', 'end',text="1",values=('','','',''))

                window = canvas.create_window(280, 130, anchor="nw", window=tree)

        
    #==============================================================================================================
        elif rth=="Default":
            if company_tro is not None:
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                rp_pl_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4"), show='headings', height=55, style='mystyle.Treeview')
                rp_pl_tree.column("# 1", anchor=E, stretch=NO, width=150)
                rp_pl_tree.heading("# 1", text="Product ID")
                rp_pl_tree.column("# 2", anchor=E, stretch=NO, width=200)
                rp_pl_tree.heading("# 2", text="Product/Service Name")
                rp_pl_tree.column("# 3", anchor=E, stretch=NO, width=200)
                rp_pl_tree.heading("# 3", text="Description")
                rp_pl_tree.column("# 4", anchor=E, stretch=NO, width=150)
                rp_pl_tree.heading("# 4", text="Unit Price")
                
                # Insert the data in Treeview widget
                rp_pl_tree.insert('', 'end',text="1",values=('','','',''))


                # Insert the data in Treeview widget
                for record in rp_pl_tree.get_children():
                    rp_pl_tree.delete(record)
                count=0
                fbcursor.execute('SELECT * from productservice WHERE category="Default"')
                for i in fbcursor:
                    rp_pl_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[4], i[5], i[7]))
                    count += 1
                window = canvas.create_window(280, 130, anchor="nw", window=rp_pl_tree)
            else:
                canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

                
                # Create an instance of Style widget
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4"), show='headings', height=55, style='mystyle.Treeview')
                tree.column("# 1", anchor=E, stretch=NO, width=150)
                tree.heading("# 1", text="Product ID")
                tree.column("# 2", anchor=E, stretch=NO, width=200)
                tree.heading("# 2", text="Product/Service Name")
                tree.column("# 3", anchor=E, stretch=NO, width=200)
                tree.heading("# 3", text="Description")
                tree.column("# 4", anchor=E, stretch=NO, width=150)
                tree.heading("# 4", text="Unit Price")
                
                # Insert the data in Treeview widget
                tree.insert('', 'end',text="1",values=('','','',''))

                window = canvas.create_window(280, 130, anchor="nw", window=tree)

    elif rpcheckvar1_pl.get()==0 and rpcheckvar2_pl.get()==0:
        if rth=="All product and Services ":
            

                # Create an instance of Style widget
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4"), show='headings', height=55, style='mystyle.Treeview')
                tree.column("# 1", anchor=E, stretch=NO, width=150)
                tree.heading("# 1", text="Product ID")
                tree.column("# 2", anchor=E, stretch=NO, width=200)
                tree.heading("# 2", text="Product/Service Name")
                tree.column("# 3", anchor=E, stretch=NO, width=200)
                tree.heading("# 3", text="Description")
                tree.column("# 4", anchor=E, stretch=NO, width=150)
                tree.heading("# 4", text="Unit Price")
                
                # Insert the data in Treeview widget
                tree.insert('', 'end',text="1",values=('','','-No Data-',''))

                window = canvas.create_window(280, 130, anchor="nw", window=tree)


        #--------------------------------------------------------------------------------------------------------------
        elif rth=="All products":
            
                # Create an instance of Style widget
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4"), show='headings', height=55, style='mystyle.Treeview')
                tree.column("# 1", anchor=E, stretch=NO, width=150)
                tree.heading("# 1", text="Product ID")
                tree.column("# 2", anchor=E, stretch=NO, width=200)
                tree.heading("# 2", text="Product/Service Name")
                tree.column("# 3", anchor=E, stretch=NO, width=200)
                tree.heading("# 3", text="Description")
                tree.column("# 4", anchor=E, stretch=NO, width=150)
                tree.heading("# 4", text="Unit Price")
                
                # Insert the data in Treeview widget
                tree.insert('', 'end',text="1",values=('','-No Data-','',''))

                window = canvas.create_window(280, 130, anchor="nw", window=tree)

            #===============================================================================================
        elif rth=="All Service":
            
                
                # Create an instance of Style widget
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4"), show='headings', height=55, style='mystyle.Treeview')
                tree.column("# 1", anchor=E, stretch=NO, width=150)
                tree.heading("# 1", text="Product ID")
                tree.column("# 2", anchor=E, stretch=NO, width=200)
                tree.heading("# 2", text="Product/Service Name")
                tree.column("# 3", anchor=E, stretch=NO, width=200)
                tree.heading("# 3", text="Description")
                tree.column("# 4", anchor=E, stretch=NO, width=150)
                tree.heading("# 4", text="Unit Price")
                
                # Insert the data in Treeview widget
                tree.insert('', 'end',text="1",values=('','','-No Data-',''))

                window = canvas.create_window(280, 130, anchor="nw", window=tree)

        
    #==============================================================================================================
        elif rth=="Default":
                
                # Create an instance of Style widget
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4"), show='headings', height=55, style='mystyle.Treeview')
                tree.column("# 1", anchor=E, stretch=NO, width=150)
                tree.heading("# 1", text="Product ID")
                tree.column("# 2", anchor=E, stretch=NO, width=200)
                tree.heading("# 2", text="Product/Service Name")
                tree.column("# 3", anchor=E, stretch=NO, width=200)
                tree.heading("# 3", text="Description")
                tree.column("# 4", anchor=E, stretch=NO, width=150)
                tree.heading("# 4", text="Unit Price")
                
                # Insert the data in Treeview widget
                tree.insert('', 'end',text="1",values=('','','-No Data-',''))

                window = canvas.create_window(280, 130, anchor="nw", window=tree)
    else:
        pass


def check_psl():
    rth=pslfilter.get()
    or_company = "SELECT * from company"
    fbcursor.execute(or_company)
    company_tro= fbcursor.fetchone()
    
    if rpcheckvar1_psl.get()==1 and rpcheckvar2_psl.get()==0:
        if rth=="All product and Services ":
            if company_tro is not None:
                        
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                rp_psl_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
                rp_psl_tree.column("# 1", anchor=E, stretch=NO, width=100)
                rp_psl_tree.heading("# 1", text="Product ID")
                rp_psl_tree.column("# 2", anchor=E, stretch=NO, width=120)
                rp_psl_tree.heading("# 2", text="Category")
                rp_psl_tree.column("# 3", anchor=E, stretch=NO, width=180)
                rp_psl_tree.heading("# 3", text="Product/ Service Name")
                rp_psl_tree.column("# 4", anchor=E, stretch=NO, width=130)
                rp_psl_tree.heading("# 4", text="Description")
                rp_psl_tree.column("# 5", anchor=E, stretch=NO, width=150)
                rp_psl_tree.heading("# 5", text="Warehouse")
                rp_psl_tree.column("# 6", anchor=E, stretch=NO, width=100)
                rp_psl_tree.heading("# 6", text="Stock")
                rp_psl_tree.column("# 7", anchor=E, stretch=NO, width=100)
                rp_psl_tree.heading("# 7", text="Cost")
                rp_psl_tree.column("# 8", anchor=E, stretch=NO, width=100)
                rp_psl_tree.heading("# 8", text="Price")
                # Insert the data in Treeview widget
                rp_psl_tree.insert('', 'end',text="1",values=('','','','','','','',''))


                # Insert the data in Treeview widget
                for record in rp_psl_tree.get_children():
                    rp_psl_tree.delete(record)
                count=0
                fbcursor.execute('SELECT * from productservice where stock>stocklimit')
                for i in fbcursor:
                    rp_psl_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[3], i[4], i[5], i[15], i[13], i[9], i[11]))
                    count += 1
                window = canvas.create_window(170, 150, anchor="nw",  window=rp_psl_tree)
            
            
            else:

                # Create an instance of Style widget
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
                tree.column("# 1", anchor=E, stretch=NO, width=100)
                tree.heading("# 1", text="Product ID")
                tree.column("# 2", anchor=E, stretch=NO, width=120)
                tree.heading("# 2", text="Category")
                tree.column("# 3", anchor=E, stretch=NO, width=180)
                tree.heading("# 3", text="Product/ Service Name")
                tree.column("# 4", anchor=E, stretch=NO, width=130)
                tree.heading("# 4", text="Description")
                tree.column("# 5", anchor=E, stretch=NO, width=150)
                tree.heading("# 5", text="Warehouse")
                tree.column("# 6", anchor=E, stretch=NO, width=100)
                tree.heading("# 6", text="Stock")
                tree.column("# 7", anchor=E, stretch=NO, width=100)
                tree.heading("# 7", text="Cost")
                tree.column("# 8", anchor=E, stretch=NO, width=100)
                tree.heading("# 8", text="Price")
                # Insert the data in Treeview widget
                tree.insert('', 'end',text="1",values=('','','','','','','',''))

                window = canvas.create_window(170, 150, anchor="nw", window=tree)

        #--------------------------------------------------------------------------------------------------------------
        elif rth=="All products":
            
            if company_tro is not None:           
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                rp_psl_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
                rp_psl_tree.column("# 1", anchor=E, stretch=NO, width=100)
                rp_psl_tree.heading("# 1", text="Product ID")
                rp_psl_tree.column("# 2", anchor=E, stretch=NO, width=120)
                rp_psl_tree.heading("# 2", text="Category")
                rp_psl_tree.column("# 3", anchor=E, stretch=NO, width=180)
                rp_psl_tree.heading("# 3", text="Product/ Service Name")
                rp_psl_tree.column("# 4", anchor=E, stretch=NO, width=130)
                rp_psl_tree.heading("# 4", text="Description")
                rp_psl_tree.column("# 5", anchor=E, stretch=NO, width=150)
                rp_psl_tree.heading("# 5", text="Warehouse")
                rp_psl_tree.column("# 6", anchor=E, stretch=NO, width=100)
                rp_psl_tree.heading("# 6", text="Stock")
                rp_psl_tree.column("# 7", anchor=E, stretch=NO, width=100)
                rp_psl_tree.heading("# 7", text="Cost")
                rp_psl_tree.column("# 8", anchor=E, stretch=NO, width=100)
                rp_psl_tree.heading("# 8", text="Price")
                # Insert the data in Treeview widget
                rp_psl_tree.insert('', 'end',text="1",values=('','','','','','','',''))


                # Insert the data in Treeview widget
                for record in rp_psl_tree.get_children():
                    rp_psl_tree.delete(record)
                count=0
                fbcursor.execute('SELECT * from productservice where (category="Products" and stock>stocklimit)')
                for i in fbcursor:
                    rp_psl_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[3], i[4], i[5], i[15], i[13], i[9], i[11]))
                    count += 1
                window = canvas.create_window(170, 150, anchor="nw",  window=rp_psl_tree)
            
            
            else:

                # Create an instance of Style widget
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
                tree.column("# 1", anchor=E, stretch=NO, width=100)
                tree.heading("# 1", text="Product ID")
                tree.column("# 2", anchor=E, stretch=NO, width=120)
                tree.heading("# 2", text="Category")
                tree.column("# 3", anchor=E, stretch=NO, width=180)
                tree.heading("# 3", text="Product/ Service Name")
                tree.column("# 4", anchor=E, stretch=NO, width=130)
                tree.heading("# 4", text="Description")
                tree.column("# 5", anchor=E, stretch=NO, width=150)
                tree.heading("# 5", text="Warehouse")
                tree.column("# 6", anchor=E, stretch=NO, width=100)
                tree.heading("# 6", text="Stock")
                tree.column("# 7", anchor=E, stretch=NO, width=100)
                tree.heading("# 7", text="Cost")
                tree.column("# 8", anchor=E, stretch=NO, width=100)
                tree.heading("# 8", text="Price")
                # Insert the data in Treeview widget
                tree.insert('', 'end',text="1",values=('','','','','','','',''))

                window = canvas.create_window(170, 150, anchor="nw", window=tree)


            #===============================================================================================
        elif rth=="All Service":
            if company_tro is not None:
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                rp_psl_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
                rp_psl_tree.column("# 1", anchor=E, stretch=NO, width=100)
                rp_psl_tree.heading("# 1", text="Product ID")
                rp_psl_tree.column("# 2", anchor=E, stretch=NO, width=120)
                rp_psl_tree.heading("# 2", text="Category")
                rp_psl_tree.column("# 3", anchor=E, stretch=NO, width=180)
                rp_psl_tree.heading("# 3", text="Product/ Service Name")
                rp_psl_tree.column("# 4", anchor=E, stretch=NO, width=130)
                rp_psl_tree.heading("# 4", text="Description")
                rp_psl_tree.column("# 5", anchor=E, stretch=NO, width=150)
                rp_psl_tree.heading("# 5", text="Warehouse")
                rp_psl_tree.column("# 6", anchor=E, stretch=NO, width=100)
                rp_psl_tree.heading("# 6", text="Stock")
                rp_psl_tree.column("# 7", anchor=E, stretch=NO, width=100)
                rp_psl_tree.heading("# 7", text="Cost")
                rp_psl_tree.column("# 8", anchor=E, stretch=NO, width=100)
                rp_psl_tree.heading("# 8", text="Price")
                # Insert the data in Treeview widget
                rp_psl_tree.insert('', 'end',text="1",values=('','','','','','','',''))


                # Insert the data in Treeview widget
                for record in rp_psl_tree.get_children():
                    rp_psl_tree.delete(record)
                count=0
                fbcursor.execute('SELECT * from productservice where (category="Service" and stock > stocklimit)')
                for i in fbcursor:
                    rp_psl_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[3], i[4], i[5], i[15], i[13], i[9], i[11]))
                    count += 1
                window = canvas.create_window(170, 150, anchor="nw",  window=rp_psl_tree)
            
            
            else:

                # Create an instance of Style widget
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
                tree.column("# 1", anchor=E, stretch=NO, width=100)
                tree.heading("# 1", text="Product ID")
                tree.column("# 2", anchor=E, stretch=NO, width=120)
                tree.heading("# 2", text="Category")
                tree.column("# 3", anchor=E, stretch=NO, width=180)
                tree.heading("# 3", text="Product/ Service Name")
                tree.column("# 4", anchor=E, stretch=NO, width=130)
                tree.heading("# 4", text="Description")
                tree.column("# 5", anchor=E, stretch=NO, width=150)
                tree.heading("# 5", text="Warehouse")
                tree.column("# 6", anchor=E, stretch=NO, width=100)
                tree.heading("# 6", text="Stock")
                tree.column("# 7", anchor=E, stretch=NO, width=100)
                tree.heading("# 7", text="Cost")
                tree.column("# 8", anchor=E, stretch=NO, width=100)
                tree.heading("# 8", text="Price")
                # Insert the data in Treeview widget
                tree.insert('', 'end',text="1",values=('','','','','','','',''))

                window = canvas.create_window(170, 150, anchor="nw", window=tree)

        elif rth=="Default":
            if company_tro is not None:
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                rp_psl_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
                rp_psl_tree.column("# 1", anchor=E, stretch=NO, width=100)
                rp_psl_tree.heading("# 1", text="Product ID")
                rp_psl_tree.column("# 2", anchor=E, stretch=NO, width=120)
                rp_psl_tree.heading("# 2", text="Category")
                rp_psl_tree.column("# 3", anchor=E, stretch=NO, width=180)
                rp_psl_tree.heading("# 3", text="Product/ Service Name")
                rp_psl_tree.column("# 4", anchor=E, stretch=NO, width=130)
                rp_psl_tree.heading("# 4", text="Description")
                rp_psl_tree.column("# 5", anchor=E, stretch=NO, width=150)
                rp_psl_tree.heading("# 5", text="Warehouse")
                rp_psl_tree.column("# 6", anchor=E, stretch=NO, width=100)
                rp_psl_tree.heading("# 6", text="Stock")
                rp_psl_tree.column("# 7", anchor=E, stretch=NO, width=100)
                rp_psl_tree.heading("# 7", text="Cost")
                rp_psl_tree.column("# 8", anchor=E, stretch=NO, width=100)
                rp_psl_tree.heading("# 8", text="Price")
                # Insert the data in Treeview widget
                rp_psl_tree.insert('', 'end',text="1",values=('','','','','','','',''))


                # Insert the data in Treeview widget
                for record in rp_psl_tree.get_children():
                    rp_psl_tree.delete(record)
                count=0
                fbcursor.execute('SELECT * from productservice where (category="Default" and stock > stocklimit)')
                for i in fbcursor:
                    rp_psl_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[3], i[4], i[5], i[15], i[13], i[9], i[11]))
                    count += 1
                window = canvas.create_window(170, 150, anchor="nw",  window=rp_psl_tree)
            
            
            else:

                # Create an instance of Style widget
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
                tree.column("# 1", anchor=E, stretch=NO, width=100)
                tree.heading("# 1", text="Product ID")
                tree.column("# 2", anchor=E, stretch=NO, width=120)
                tree.heading("# 2", text="Category")
                tree.column("# 3", anchor=E, stretch=NO, width=180)
                tree.heading("# 3", text="Product/ Service Name")
                tree.column("# 4", anchor=E, stretch=NO, width=130)
                tree.heading("# 4", text="Description")
                tree.column("# 5", anchor=E, stretch=NO, width=150)
                tree.heading("# 5", text="Warehouse")
                tree.column("# 6", anchor=E, stretch=NO, width=100)
                tree.heading("# 6", text="Stock")
                tree.column("# 7", anchor=E, stretch=NO, width=100)
                tree.heading("# 7", text="Cost")
                tree.column("# 8", anchor=E, stretch=NO, width=100)
                tree.heading("# 8", text="Price")
                # Insert the data in Treeview widget
                tree.insert('', 'end',text="1",values=('','','','','','','',''))

                window = canvas.create_window(170, 150, anchor="nw", window=tree)


    elif rpcheckvar1_psl.get()==0 and rpcheckvar2_psl.get()==1:
        if rth=="All product and Services ":
            if company_tro is not None:
                        
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                rp_psl_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
                rp_psl_tree.column("# 1", anchor=E, stretch=NO, width=100)
                rp_psl_tree.heading("# 1", text="Product ID")
                rp_psl_tree.column("# 2", anchor=E, stretch=NO, width=120)
                rp_psl_tree.heading("# 2", text="Category")
                rp_psl_tree.column("# 3", anchor=E, stretch=NO, width=180)
                rp_psl_tree.heading("# 3", text="Product/ Service Name")
                rp_psl_tree.column("# 4", anchor=E, stretch=NO, width=130)
                rp_psl_tree.heading("# 4", text="Description")
                rp_psl_tree.column("# 5", anchor=E, stretch=NO, width=150)
                rp_psl_tree.heading("# 5", text="Warehouse")
                rp_psl_tree.column("# 6", anchor=E, stretch=NO, width=100)
                rp_psl_tree.heading("# 6", text="Stock")
                rp_psl_tree.column("# 7", anchor=E, stretch=NO, width=100)
                rp_psl_tree.heading("# 7", text="Cost")
                rp_psl_tree.column("# 8", anchor=E, stretch=NO, width=100)
                rp_psl_tree.heading("# 8", text="Price")
                # Insert the data in Treeview widget
                rp_psl_tree.insert('', 'end',text="1",values=('','','','','','','',''))


                # Insert the data in Treeview widget
                for record in rp_psl_tree.get_children():
                    rp_psl_tree.delete(record)
                count=0
                fbcursor.execute('SELECT * from productservice Where stock < stocklimit')
                for i in fbcursor:
                    rp_psl_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[3], i[4], i[5], i[15], i[13], i[9], i[11]))
                    count += 1
                window = canvas.create_window(170, 150, anchor="nw",  window=rp_psl_tree)
            
            
            else:

                # Create an instance of Style widget
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
                tree.column("# 1", anchor=E, stretch=NO, width=100)
                tree.heading("# 1", text="Product ID")
                tree.column("# 2", anchor=E, stretch=NO, width=120)
                tree.heading("# 2", text="Category")
                tree.column("# 3", anchor=E, stretch=NO, width=180)
                tree.heading("# 3", text="Product/ Service Name")
                tree.column("# 4", anchor=E, stretch=NO, width=130)
                tree.heading("# 4", text="Description")
                tree.column("# 5", anchor=E, stretch=NO, width=150)
                tree.heading("# 5", text="Warehouse")
                tree.column("# 6", anchor=E, stretch=NO, width=100)
                tree.heading("# 6", text="Stock")
                tree.column("# 7", anchor=E, stretch=NO, width=100)
                tree.heading("# 7", text="Cost")
                tree.column("# 8", anchor=E, stretch=NO, width=100)
                tree.heading("# 8", text="Price")
                # Insert the data in Treeview widget
                tree.insert('', 'end',text="1",values=('','','','','','','',''))

                window = canvas.create_window(170, 150, anchor="nw", window=tree)

        #--------------------------------------------------------------------------------------------------------------
        elif rth=="All products":
            
            if company_tro is not None:           
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                rp_psl_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
                rp_psl_tree.column("# 1", anchor=E, stretch=NO, width=100)
                rp_psl_tree.heading("# 1", text="Product ID")
                rp_psl_tree.column("# 2", anchor=E, stretch=NO, width=120)
                rp_psl_tree.heading("# 2", text="Category")
                rp_psl_tree.column("# 3", anchor=E, stretch=NO, width=180)
                rp_psl_tree.heading("# 3", text="Product/ Service Name")
                rp_psl_tree.column("# 4", anchor=E, stretch=NO, width=130)
                rp_psl_tree.heading("# 4", text="Description")
                rp_psl_tree.column("# 5", anchor=E, stretch=NO, width=150)
                rp_psl_tree.heading("# 5", text="Warehouse")
                rp_psl_tree.column("# 6", anchor=E, stretch=NO, width=100)
                rp_psl_tree.heading("# 6", text="Stock")
                rp_psl_tree.column("# 7", anchor=E, stretch=NO, width=100)
                rp_psl_tree.heading("# 7", text="Cost")
                rp_psl_tree.column("# 8", anchor=E, stretch=NO, width=100)
                rp_psl_tree.heading("# 8", text="Price")
                # Insert the data in Treeview widget
                rp_psl_tree.insert('', 'end',text="1",values=('','','','','','','',''))


                # Insert the data in Treeview widget
                for record in rp_psl_tree.get_children():
                    rp_psl_tree.delete(record)
                count=0
                fbcursor.execute('SELECT * from productservice where (category="Products" and stock < stocklimit)')
                for i in fbcursor:
                    rp_psl_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[3], i[4], i[5], i[15], i[13], i[9], i[11]))
                    count += 1
                window = canvas.create_window(170, 150, anchor="nw",  window=rp_psl_tree)
            
            
            else:

                # Create an instance of Style widget
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
                tree.column("# 1", anchor=E, stretch=NO, width=100)
                tree.heading("# 1", text="Product ID")
                tree.column("# 2", anchor=E, stretch=NO, width=120)
                tree.heading("# 2", text="Category")
                tree.column("# 3", anchor=E, stretch=NO, width=180)
                tree.heading("# 3", text="Product/ Service Name")
                tree.column("# 4", anchor=E, stretch=NO, width=130)
                tree.heading("# 4", text="Description")
                tree.column("# 5", anchor=E, stretch=NO, width=150)
                tree.heading("# 5", text="Warehouse")
                tree.column("# 6", anchor=E, stretch=NO, width=100)
                tree.heading("# 6", text="Stock")
                tree.column("# 7", anchor=E, stretch=NO, width=100)
                tree.heading("# 7", text="Cost")
                tree.column("# 8", anchor=E, stretch=NO, width=100)
                tree.heading("# 8", text="Price")
                # Insert the data in Treeview widget
                tree.insert('', 'end',text="1",values=('','','','','','','',''))

                window = canvas.create_window(170, 150, anchor="nw", window=tree)


            #===============================================================================================
        elif rth=="All Service":
            if company_tro is not None:
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                rp_psl_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
                rp_psl_tree.column("# 1", anchor=E, stretch=NO, width=100)
                rp_psl_tree.heading("# 1", text="Product ID")
                rp_psl_tree.column("# 2", anchor=E, stretch=NO, width=120)
                rp_psl_tree.heading("# 2", text="Category")
                rp_psl_tree.column("# 3", anchor=E, stretch=NO, width=180)
                rp_psl_tree.heading("# 3", text="Product/ Service Name")
                rp_psl_tree.column("# 4", anchor=E, stretch=NO, width=130)
                rp_psl_tree.heading("# 4", text="Description")
                rp_psl_tree.column("# 5", anchor=E, stretch=NO, width=150)
                rp_psl_tree.heading("# 5", text="Warehouse")
                rp_psl_tree.column("# 6", anchor=E, stretch=NO, width=100)
                rp_psl_tree.heading("# 6", text="Stock")
                rp_psl_tree.column("# 7", anchor=E, stretch=NO, width=100)
                rp_psl_tree.heading("# 7", text="Cost")
                rp_psl_tree.column("# 8", anchor=E, stretch=NO, width=100)
                rp_psl_tree.heading("# 8", text="Price")
                # Insert the data in Treeview widget
                rp_psl_tree.insert('', 'end',text="1",values=('','','','','','','',''))


                # Insert the data in Treeview widget
                for record in rp_psl_tree.get_children():
                    rp_psl_tree.delete(record)
                count=0
                fbcursor.execute('SELECT * from productservice where (category="Service" and stock < stocklimit)')
                for i in fbcursor:
                    rp_psl_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[3], i[4], i[5], i[15], i[13], i[9], i[11]))
                    count += 1
                window = canvas.create_window(170, 150, anchor="nw",  window=rp_psl_tree)
            
            
            else:

                # Create an instance of Style widget
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
                tree.column("# 1", anchor=E, stretch=NO, width=100)
                tree.heading("# 1", text="Product ID")
                tree.column("# 2", anchor=E, stretch=NO, width=120)
                tree.heading("# 2", text="Category")
                tree.column("# 3", anchor=E, stretch=NO, width=180)
                tree.heading("# 3", text="Product/ Service Name")
                tree.column("# 4", anchor=E, stretch=NO, width=130)
                tree.heading("# 4", text="Description")
                tree.column("# 5", anchor=E, stretch=NO, width=150)
                tree.heading("# 5", text="Warehouse")
                tree.column("# 6", anchor=E, stretch=NO, width=100)
                tree.heading("# 6", text="Stock")
                tree.column("# 7", anchor=E, stretch=NO, width=100)
                tree.heading("# 7", text="Cost")
                tree.column("# 8", anchor=E, stretch=NO, width=100)
                tree.heading("# 8", text="Price")
                # Insert the data in Treeview widget
                tree.insert('', 'end',text="1",values=('','','','','','','',''))

                window = canvas.create_window(170, 150, anchor="nw", window=tree)

        elif rth=="Default":
            if company_tro is not None:
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                rp_psl_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
                rp_psl_tree.column("# 1", anchor=E, stretch=NO, width=100)
                rp_psl_tree.heading("# 1", text="Product ID")
                rp_psl_tree.column("# 2", anchor=E, stretch=NO, width=120)
                rp_psl_tree.heading("# 2", text="Category")
                rp_psl_tree.column("# 3", anchor=E, stretch=NO, width=180)
                rp_psl_tree.heading("# 3", text="Product/ Service Name")
                rp_psl_tree.column("# 4", anchor=E, stretch=NO, width=130)
                rp_psl_tree.heading("# 4", text="Description")
                rp_psl_tree.column("# 5", anchor=E, stretch=NO, width=150)
                rp_psl_tree.heading("# 5", text="Warehouse")
                rp_psl_tree.column("# 6", anchor=E, stretch=NO, width=100)
                rp_psl_tree.heading("# 6", text="Stock")
                rp_psl_tree.column("# 7", anchor=E, stretch=NO, width=100)
                rp_psl_tree.heading("# 7", text="Cost")
                rp_psl_tree.column("# 8", anchor=E, stretch=NO, width=100)
                rp_psl_tree.heading("# 8", text="Price")
                # Insert the data in Treeview widget
                rp_psl_tree.insert('', 'end',text="1",values=('','','','','','','',''))


                # Insert the data in Treeview widget
                for record in rp_psl_tree.get_children():
                    rp_psl_tree.delete(record)
                count=0
                fbcursor.execute('SELECT * from productservice where (category="Default" and stock<stocklimit)')
                for i in fbcursor:
                    rp_psl_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[3], i[4], i[5], i[15], i[13], i[9], i[11]))
                    count += 1
                window = canvas.create_window(170, 150, anchor="nw",  window=rp_psl_tree)
            
            
            else:

                # Create an instance of Style widget
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
                tree.column("# 1", anchor=E, stretch=NO, width=100)
                tree.heading("# 1", text="Product ID")
                tree.column("# 2", anchor=E, stretch=NO, width=120)
                tree.heading("# 2", text="Category")
                tree.column("# 3", anchor=E, stretch=NO, width=180)
                tree.heading("# 3", text="Product/ Service Name")
                tree.column("# 4", anchor=E, stretch=NO, width=130)
                tree.heading("# 4", text="Description")
                tree.column("# 5", anchor=E, stretch=NO, width=150)
                tree.heading("# 5", text="Warehouse")
                tree.column("# 6", anchor=E, stretch=NO, width=100)
                tree.heading("# 6", text="Stock")
                tree.column("# 7", anchor=E, stretch=NO, width=100)
                tree.heading("# 7", text="Cost")
                tree.column("# 8", anchor=E, stretch=NO, width=100)
                tree.heading("# 8", text="Price")
                # Insert the data in Treeview widget
                tree.insert('', 'end',text="1",values=('','','','','','','',''))

                window = canvas.create_window(170, 150, anchor="nw", window=tree)
    elif rpcheckvar1_psl.get()==1 and rpcheckvar2_psl.get()==1:
        if rth=="All product and Services ":
            if company_tro is not None:
                        
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                rp_psl_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
                rp_psl_tree.column("# 1", anchor=E, stretch=NO, width=100)
                rp_psl_tree.heading("# 1", text="Product ID")
                rp_psl_tree.column("# 2", anchor=E, stretch=NO, width=120)
                rp_psl_tree.heading("# 2", text="Category")
                rp_psl_tree.column("# 3", anchor=E, stretch=NO, width=180)
                rp_psl_tree.heading("# 3", text="Product/ Service Name")
                rp_psl_tree.column("# 4", anchor=E, stretch=NO, width=130)
                rp_psl_tree.heading("# 4", text="Description")
                rp_psl_tree.column("# 5", anchor=E, stretch=NO, width=150)
                rp_psl_tree.heading("# 5", text="Warehouse")
                rp_psl_tree.column("# 6", anchor=E, stretch=NO, width=100)
                rp_psl_tree.heading("# 6", text="Stock")
                rp_psl_tree.column("# 7", anchor=E, stretch=NO, width=100)
                rp_psl_tree.heading("# 7", text="Cost")
                rp_psl_tree.column("# 8", anchor=E, stretch=NO, width=100)
                rp_psl_tree.heading("# 8", text="Price")
                # Insert the data in Treeview widget
                rp_psl_tree.insert('', 'end',text="1",values=('','','','','','','',''))


                # Insert the data in Treeview widget
                for record in rp_psl_tree.get_children():
                    rp_psl_tree.delete(record)
                count=0
                fbcursor.execute('SELECT * from productservice')
                for i in fbcursor:
                    rp_psl_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[3], i[4], i[5], i[15], i[13], i[9], i[11]))
                    count += 1
                window = canvas.create_window(170, 150, anchor="nw",  window=rp_psl_tree)
            
            
            else:

                # Create an instance of Style widget
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
                tree.column("# 1", anchor=E, stretch=NO, width=100)
                tree.heading("# 1", text="Product ID")
                tree.column("# 2", anchor=E, stretch=NO, width=120)
                tree.heading("# 2", text="Category")
                tree.column("# 3", anchor=E, stretch=NO, width=180)
                tree.heading("# 3", text="Product/ Service Name")
                tree.column("# 4", anchor=E, stretch=NO, width=130)
                tree.heading("# 4", text="Description")
                tree.column("# 5", anchor=E, stretch=NO, width=150)
                tree.heading("# 5", text="Warehouse")
                tree.column("# 6", anchor=E, stretch=NO, width=100)
                tree.heading("# 6", text="Stock")
                tree.column("# 7", anchor=E, stretch=NO, width=100)
                tree.heading("# 7", text="Cost")
                tree.column("# 8", anchor=E, stretch=NO, width=100)
                tree.heading("# 8", text="Price")
                # Insert the data in Treeview widget
                tree.insert('', 'end',text="1",values=('','','','','','','',''))

                window = canvas.create_window(170, 150, anchor="nw", window=tree)

        #--------------------------------------------------------------------------------------------------------------
        elif rth=="All products":
            
            if company_tro is not None:           
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                rp_psl_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
                rp_psl_tree.column("# 1", anchor=E, stretch=NO, width=100)
                rp_psl_tree.heading("# 1", text="Product ID")
                rp_psl_tree.column("# 2", anchor=E, stretch=NO, width=120)
                rp_psl_tree.heading("# 2", text="Category")
                rp_psl_tree.column("# 3", anchor=E, stretch=NO, width=180)
                rp_psl_tree.heading("# 3", text="Product/ Service Name")
                rp_psl_tree.column("# 4", anchor=E, stretch=NO, width=130)
                rp_psl_tree.heading("# 4", text="Description")
                rp_psl_tree.column("# 5", anchor=E, stretch=NO, width=150)
                rp_psl_tree.heading("# 5", text="Warehouse")
                rp_psl_tree.column("# 6", anchor=E, stretch=NO, width=100)
                rp_psl_tree.heading("# 6", text="Stock")
                rp_psl_tree.column("# 7", anchor=E, stretch=NO, width=100)
                rp_psl_tree.heading("# 7", text="Cost")
                rp_psl_tree.column("# 8", anchor=E, stretch=NO, width=100)
                rp_psl_tree.heading("# 8", text="Price")
                # Insert the data in Treeview widget
                rp_psl_tree.insert('', 'end',text="1",values=('','','','','','','',''))


                # Insert the data in Treeview widget
                for record in rp_psl_tree.get_children():
                    rp_psl_tree.delete(record)
                count=0
                fbcursor.execute('SELECT * from productservice where category="Products" ')
                for i in fbcursor:
                    rp_psl_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[3], i[4], i[5], i[15], i[13], i[9], i[11]))
                    count += 1
                window = canvas.create_window(170, 150, anchor="nw",  window=rp_psl_tree)
            
            
            else:

                # Create an instance of Style widget
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
                tree.column("# 1", anchor=E, stretch=NO, width=100)
                tree.heading("# 1", text="Product ID")
                tree.column("# 2", anchor=E, stretch=NO, width=120)
                tree.heading("# 2", text="Category")
                tree.column("# 3", anchor=E, stretch=NO, width=180)
                tree.heading("# 3", text="Product/ Service Name")
                tree.column("# 4", anchor=E, stretch=NO, width=130)
                tree.heading("# 4", text="Description")
                tree.column("# 5", anchor=E, stretch=NO, width=150)
                tree.heading("# 5", text="Warehouse")
                tree.column("# 6", anchor=E, stretch=NO, width=100)
                tree.heading("# 6", text="Stock")
                tree.column("# 7", anchor=E, stretch=NO, width=100)
                tree.heading("# 7", text="Cost")
                tree.column("# 8", anchor=E, stretch=NO, width=100)
                tree.heading("# 8", text="Price")
                # Insert the data in Treeview widget
                tree.insert('', 'end',text="1",values=('','','','','','','',''))

                window = canvas.create_window(170, 150, anchor="nw", window=tree)


            #===============================================================================================
        elif rth=="All Service":
            if company_tro is not None:
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                rp_psl_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
                rp_psl_tree.column("# 1", anchor=E, stretch=NO, width=100)
                rp_psl_tree.heading("# 1", text="Product ID")
                rp_psl_tree.column("# 2", anchor=E, stretch=NO, width=120)
                rp_psl_tree.heading("# 2", text="Category")
                rp_psl_tree.column("# 3", anchor=E, stretch=NO, width=180)
                rp_psl_tree.heading("# 3", text="Product/ Service Name")
                rp_psl_tree.column("# 4", anchor=E, stretch=NO, width=130)
                rp_psl_tree.heading("# 4", text="Description")
                rp_psl_tree.column("# 5", anchor=E, stretch=NO, width=150)
                rp_psl_tree.heading("# 5", text="Warehouse")
                rp_psl_tree.column("# 6", anchor=E, stretch=NO, width=100)
                rp_psl_tree.heading("# 6", text="Stock")
                rp_psl_tree.column("# 7", anchor=E, stretch=NO, width=100)
                rp_psl_tree.heading("# 7", text="Cost")
                rp_psl_tree.column("# 8", anchor=E, stretch=NO, width=100)
                rp_psl_tree.heading("# 8", text="Price")
                # Insert the data in Treeview widget
                rp_psl_tree.insert('', 'end',text="1",values=('','','','','','','',''))


                # Insert the data in Treeview widget
                for record in rp_psl_tree.get_children():
                    rp_psl_tree.delete(record)
                count=0
                fbcursor.execute('SELECT * from productservice where category="Service" ')
                for i in fbcursor:
                    rp_psl_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[3], i[4], i[5], i[15], i[13], i[9], i[11]))
                    count += 1
                window = canvas.create_window(170, 150, anchor="nw",  window=rp_psl_tree)
            
            
            else:

                # Create an instance of Style widget
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
                tree.column("# 1", anchor=E, stretch=NO, width=100)
                tree.heading("# 1", text="Product ID")
                tree.column("# 2", anchor=E, stretch=NO, width=120)
                tree.heading("# 2", text="Category")
                tree.column("# 3", anchor=E, stretch=NO, width=180)
                tree.heading("# 3", text="Product/ Service Name")
                tree.column("# 4", anchor=E, stretch=NO, width=130)
                tree.heading("# 4", text="Description")
                tree.column("# 5", anchor=E, stretch=NO, width=150)
                tree.heading("# 5", text="Warehouse")
                tree.column("# 6", anchor=E, stretch=NO, width=100)
                tree.heading("# 6", text="Stock")
                tree.column("# 7", anchor=E, stretch=NO, width=100)
                tree.heading("# 7", text="Cost")
                tree.column("# 8", anchor=E, stretch=NO, width=100)
                tree.heading("# 8", text="Price")
                # Insert the data in Treeview widget
                tree.insert('', 'end',text="1",values=('','','','','','','',''))

                window = canvas.create_window(170, 150, anchor="nw", window=tree)

        elif rth=="Default":
            if company_tro is not None:
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                rp_psl_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
                rp_psl_tree.column("# 1", anchor=E, stretch=NO, width=100)
                rp_psl_tree.heading("# 1", text="Product ID")
                rp_psl_tree.column("# 2", anchor=E, stretch=NO, width=120)
                rp_psl_tree.heading("# 2", text="Category")
                rp_psl_tree.column("# 3", anchor=E, stretch=NO, width=180)
                rp_psl_tree.heading("# 3", text="Product/ Service Name")
                rp_psl_tree.column("# 4", anchor=E, stretch=NO, width=130)
                rp_psl_tree.heading("# 4", text="Description")
                rp_psl_tree.column("# 5", anchor=E, stretch=NO, width=150)
                rp_psl_tree.heading("# 5", text="Warehouse")
                rp_psl_tree.column("# 6", anchor=E, stretch=NO, width=100)
                rp_psl_tree.heading("# 6", text="Stock")
                rp_psl_tree.column("# 7", anchor=E, stretch=NO, width=100)
                rp_psl_tree.heading("# 7", text="Cost")
                rp_psl_tree.column("# 8", anchor=E, stretch=NO, width=100)
                rp_psl_tree.heading("# 8", text="Price")
                # Insert the data in Treeview widget
                rp_psl_tree.insert('', 'end',text="1",values=('','','','','','','',''))


                # Insert the data in Treeview widget
                for record in rp_psl_tree.get_children():
                    rp_psl_tree.delete(record)
                count=0
                fbcursor.execute('SELECT * from productservice where category="Default" ')
                for i in fbcursor:
                    rp_psl_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[3], i[4], i[5], i[15], i[13], i[9], i[11]))
                    count += 1
                window = canvas.create_window(170, 150, anchor="nw",  window=rp_psl_tree)
            
            
            else:

                # Create an instance of Style widget
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
                tree.column("# 1", anchor=E, stretch=NO, width=100)
                tree.heading("# 1", text="Product ID")
                tree.column("# 2", anchor=E, stretch=NO, width=120)
                tree.heading("# 2", text="Category")
                tree.column("# 3", anchor=E, stretch=NO, width=180)
                tree.heading("# 3", text="Product/ Service Name")
                tree.column("# 4", anchor=E, stretch=NO, width=130)
                tree.heading("# 4", text="Description")
                tree.column("# 5", anchor=E, stretch=NO, width=150)
                tree.heading("# 5", text="Warehouse")
                tree.column("# 6", anchor=E, stretch=NO, width=100)
                tree.heading("# 6", text="Stock")
                tree.column("# 7", anchor=E, stretch=NO, width=100)
                tree.heading("# 7", text="Cost")
                tree.column("# 8", anchor=E, stretch=NO, width=100)
                tree.heading("# 8", text="Price")
                # Insert the data in Treeview widget
                tree.insert('', 'end',text="1",values=('','','','','','','',''))

                window = canvas.create_window(170, 150, anchor="nw", window=tree)

    elif rpcheckvar1_psl.get()==0 and rpcheckvar2_psl.get()==0:

                # Create an instance of Style widget
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6", "c7", "c8"), show='headings', height=55, style='mystyle.Treeview')
                tree.column("# 1", anchor=E, stretch=NO, width=100)
                tree.heading("# 1", text="Product ID")
                tree.column("# 2", anchor=E, stretch=NO, width=120)
                tree.heading("# 2", text="Category")
                tree.column("# 3", anchor=E, stretch=NO, width=180)
                tree.heading("# 3", text="Product/ Service Name")
                tree.column("# 4", anchor=E, stretch=NO, width=130)
                tree.heading("# 4", text="Description")
                tree.column("# 5", anchor=E, stretch=NO, width=150)
                tree.heading("# 5", text="Warehouse")
                tree.column("# 6", anchor=E, stretch=NO, width=100)
                tree.heading("# 6", text="Stock")
                tree.column("# 7", anchor=E, stretch=NO, width=100)
                tree.heading("# 7", text="Cost")
                tree.column("# 8", anchor=E, stretch=NO, width=100)
                tree.heading("# 8", text="Price")
                # Insert the data in Treeview widget
                tree.insert('', 'end',text="1",values=('','','','','','','',''))

                window = canvas.create_window(170, 150, anchor="nw", window=tree)
    else:
        pass


def check_exp():
    tro_company = "SELECT * from company"
    fbcursor.execute(tro_company)
    company_tro= fbcursor.fetchone()
    if rpcheckvar1_exp.get()==1 and rpcheckvar2_exp.get()==0:
        
        if company_tro is not None:
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_exp_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_exp_tree.column("# 1", anchor=E, stretch=NO, width=80)
            rp_exp_tree.heading("# 1", text="Date")
            rp_exp_tree.column("# 2", anchor=E, stretch=NO, width=160)
            rp_exp_tree.heading("# 2", text="Customer")
            rp_exp_tree.column("# 3", anchor=E, stretch=NO, width=160)
            rp_exp_tree.heading("# 3", text="Vendor")
            rp_exp_tree.column("# 4", anchor=E, stretch=NO, width=100)
            rp_exp_tree.heading("# 4", text="Invoice")
            rp_exp_tree.column("# 5", anchor=E, stretch=NO, width=115)
            rp_exp_tree.heading("# 5", text="Rebill.Amount")
            rp_exp_tree.column("# 6", anchor=E, stretch=NO, width=115)
            rp_exp_tree.heading("# 6", text="Amount")
            # Insert the data in Treeview widget
            rp_exp_tree.insert('', 'end',text="1",values=('','','','','Rebill.Amount','Amount'))
            
            for record in rp_exp_tree.get_children():
                rp_exp_tree.delete(record)
            count=0
            var_1=exp_frm.get_date()
            var_2=exp_to.get_date()

            lre='SELECT * from expenses WHERE(date BETWEEN %s and %s and invoiced="Yes")'
            sre=(var_1, var_2)
            fbcursor.execute(lre,sre)
            tre=fbcursor.fetchall()

            for i in tre:
                rp_exp_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[4], i[10], i[5], i[14], i[16], i[3]))
                count += 1

            rp_exp_tree.insert('', 'end',text="1",values=('','','','-End List-','Rebill.Amount','Amount'))
            

            window = canvas.create_window(270, 260, anchor="nw", window=rp_exp_tree)

            
            
        else:

            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')

            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=80)
            tree.heading("# 1", text="Date")
            tree.column("# 2", anchor=E, stretch=NO, width=150)
            tree.heading("# 2", text="Customer")
            tree.column("# 3", anchor=E, stretch=NO, width=120)
            tree.heading("# 3", text="Vendor")
            tree.column("# 4", anchor=E, stretch=NO, width=100)
            tree.heading("# 4", text="Invoice")
            tree.column("# 5", anchor=E, stretch=NO, width=115)
            tree.heading("# 5", text="Rebill.Amount")
            tree.column("# 6", anchor=E, stretch=NO, width=115)
            tree.heading("# 6", text="Amount")
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','Rebill.Amount','Amount'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)

    elif rpcheckvar1_exp.get()==0 and rpcheckvar2_exp.get()==1:
        if company_tro is not None:
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_exp_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_exp_tree.column("# 1", anchor=E, stretch=NO, width=80)
            rp_exp_tree.heading("# 1", text="Date")
            rp_exp_tree.column("# 2", anchor=E, stretch=NO, width=160)
            rp_exp_tree.heading("# 2", text="Customer")
            rp_exp_tree.column("# 3", anchor=E, stretch=NO, width=160)
            rp_exp_tree.heading("# 3", text="Vendor")
            rp_exp_tree.column("# 4", anchor=E, stretch=NO, width=100)
            rp_exp_tree.heading("# 4", text="Invoice")
            rp_exp_tree.column("# 5", anchor=E, stretch=NO, width=115)
            rp_exp_tree.heading("# 5", text="Rebill.Amount")
            rp_exp_tree.column("# 6", anchor=E, stretch=NO, width=115)
            rp_exp_tree.heading("# 6", text="Amount")
            # Insert the data in Treeview widget
            rp_exp_tree.insert('', 'end',text="1",values=('','','','','Rebill.Amount','Amount'))
            
            for record in rp_exp_tree.get_children():
                rp_exp_tree.delete(record)
            count=0
            var_1=exp_frm.get_date()
            var_2=exp_to.get_date()

            lre='SELECT * from expenses WHERE(date BETWEEN %s and %s and rebillable="Yes")'
            sre=(var_1, var_2)
            fbcursor.execute(lre,sre)
            tre=fbcursor.fetchall()

            for i in tre:
                rp_exp_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[4], i[10], i[5], i[14], i[16], i[3]))
                count += 1

            rp_exp_tree.insert('', 'end',text="1",values=('','','','-End List-','Rebill.Amount','Amount'))
            

            window = canvas.create_window(270, 260, anchor="nw", window=rp_exp_tree)

            
            
        else:

            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')

            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=80)
            tree.heading("# 1", text="Date")
            tree.column("# 2", anchor=E, stretch=NO, width=150)
            tree.heading("# 2", text="Customer")
            tree.column("# 3", anchor=E, stretch=NO, width=120)
            tree.heading("# 3", text="Vendor")
            tree.column("# 4", anchor=E, stretch=NO, width=100)
            tree.heading("# 4", text="Invoice")
            tree.column("# 5", anchor=E, stretch=NO, width=115)
            tree.heading("# 5", text="Rebill.Amount")
            tree.column("# 6", anchor=E, stretch=NO, width=115)
            tree.heading("# 6", text="Amount")
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','Rebill.Amount','Amount'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)
    elif rpcheckvar1_exp.get()==1 and rpcheckvar2_exp.get()==1:
        if company_tro is not None:
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            rp_exp_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            rp_exp_tree.column("# 1", anchor=E, stretch=NO, width=80)
            rp_exp_tree.heading("# 1", text="Date")
            rp_exp_tree.column("# 2", anchor=E, stretch=NO, width=160)
            rp_exp_tree.heading("# 2", text="Customer")
            rp_exp_tree.column("# 3", anchor=E, stretch=NO, width=160)
            rp_exp_tree.heading("# 3", text="Vendor")
            rp_exp_tree.column("# 4", anchor=E, stretch=NO, width=100)
            rp_exp_tree.heading("# 4", text="Invoice")
            rp_exp_tree.column("# 5", anchor=E, stretch=NO, width=115)
            rp_exp_tree.heading("# 5", text="Rebill.Amount")
            rp_exp_tree.column("# 6", anchor=E, stretch=NO, width=115)
            rp_exp_tree.heading("# 6", text="Amount")
            # Insert the data in Treeview widget
            rp_exp_tree.insert('', 'end',text="1",values=('','','','','Rebill.Amount','Amount'))
            
            for record in rp_exp_tree.get_children():
                rp_exp_tree.delete(record)
            count=0
            var_1=exp_frm.get_date()
            var_2=exp_to.get_date()

            lre='SELECT * from expenses WHERE(date BETWEEN %s and %s)'
            sre=(var_1, var_2)
            fbcursor.execute(lre,sre)
            tre=fbcursor.fetchall()

            for i in tre:
                rp_exp_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[4], i[10], i[5], i[14], i[16], i[3]))
                count += 1

            rp_exp_tree.insert('', 'end',text="1",values=('','','','-End List-','Rebill.Amount','Amount'))
            

            window = canvas.create_window(270, 260, anchor="nw", window=rp_exp_tree)

            
            
        else:

            canvas.create_text(360,100,text="Your Company Name",fill='black',font=("Helvetica", 12), justify='center')

            canvas.create_text(335,165,text="Address line1\nAddress line2\nAddress line3\nAddress line3\nAddress line4\nPhone 555-5555",fill='black',font=("Helvetica", 10), justify='left')

            
            # Create an instance of Style widget
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=80)
            tree.heading("# 1", text="Date")
            tree.column("# 2", anchor=E, stretch=NO, width=150)
            tree.heading("# 2", text="Customer")
            tree.column("# 3", anchor=E, stretch=NO, width=120)
            tree.heading("# 3", text="Vendor")
            tree.column("# 4", anchor=E, stretch=NO, width=100)
            tree.heading("# 4", text="Invoice")
            tree.column("# 5", anchor=E, stretch=NO, width=115)
            tree.heading("# 5", text="Rebill.Amount")
            tree.column("# 6", anchor=E, stretch=NO, width=115)
            tree.heading("# 6", text="Amount")
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','','','Rebill.Amount','Amount'))

            window = canvas.create_window(290, 260, anchor="nw", window=tree)

    elif rpcheckvar1_exp.get()==0 and rpcheckvar2_exp.get()==0:
        if company_tro is not None:
            
            style=ttk.Style()
            style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
            style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
            style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

            # Add a Treeview widge
                    
            tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
            tree.column("# 1", anchor=E, stretch=NO, width=130)
            tree.heading("# 1", text="Date")
            tree.column("# 2", anchor=E, stretch=NO, width=150)
            tree.heading("# 2", text="Customer")
            tree.column("# 3", anchor=E, stretch=NO, width=120)
            tree.heading("# 3", text="Vendor")
            tree.column("# 4", anchor=E, stretch=NO, width=100)
            tree.heading("# 4", text="Invoice")
            tree.column("# 5", anchor=E, stretch=NO, width=115)
            tree.heading("# 5", text="Rebill.Amount")
            tree.column("# 6", anchor=E, stretch=NO, width=115)
            tree.heading("# 6", text="Amount")
            # Insert the data in Treeview widget
            tree.insert('', 'end',text="1",values=('','','-No Data-','','Rebill.Amount','Amount'))

            window = canvas.create_window(270, 260, anchor="nw", window=tree)

    else:
        pass


def check_cl():
    
    
    rth=clfilter.get()
    tro_company = "SELECT * from company"
    fbcursor.execute(tro_company)
    company_tro= fbcursor.fetchone()

    if rpcheckvar1_cl.get()==1 and rpcheckvar2_cl.get()==0:
        
        if company_tro is not None:
            
            if rth=="All Customers ":
                
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                rp_cl_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
                rp_cl_tree.column("# 1", anchor=E, stretch=NO, width=100)
                rp_cl_tree.heading("# 1", text="Customer Id")
                rp_cl_tree.column("# 2", anchor=E, stretch=NO, width=170)
                rp_cl_tree.heading("# 2", text="Category")
                rp_cl_tree.column("# 3", anchor=E, stretch=NO, width=250)
                rp_cl_tree.heading("# 3", text="Customer Businnes Name")
                rp_cl_tree.column("# 4", anchor=E, stretch=NO, width=180)
                rp_cl_tree.heading("# 4", text="Customer Person")
                rp_cl_tree.column("# 5", anchor=E, stretch=NO, width=140)
                rp_cl_tree.heading("# 5", text="Tel")
                rp_cl_tree.column("# 6", anchor=E, stretch=NO, width=130)
                rp_cl_tree.heading("# 6", text="Fax")
                # Insert the data in Treeview widget
                rp_cl_tree.insert('', 'end',text="1",values=('','','','','',''))

                # Insert the data in Treeview widget
                for record in rp_cl_tree.get_children():
                    rp_cl_tree.delete(record)
                count=0
                trs='SELECT * from invoice GROUP by businessname HAVING COUNT(businessname)>1'
                fbcursor.execute(trs)
                thj=fbcursor.fetchall()
                for i in thj:
                    trf='select * from customer where businessname=%s'
                    vs=(str(i[18]),)
                    
                    fbcursor.execute(trf, vs)
                    thg=fbcursor.fetchall()

                    for i in thg:
                        rp_cl_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[2], i[4], i[8], i[10], i[11]))
                        count += 1
                window = canvas.create_window(170, 150, anchor="nw",  window=rp_cl_tree) 
            

            elif rth=="Default":
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                rp_cl_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
                rp_cl_tree.column("# 1", anchor=E, stretch=NO, width=100)
                rp_cl_tree.heading("# 1", text="Customer Id")
                rp_cl_tree.column("# 2", anchor=E, stretch=NO, width=170)
                rp_cl_tree.heading("# 2", text="Category")
                rp_cl_tree.column("# 3", anchor=E, stretch=NO, width=250)
                rp_cl_tree.heading("# 3", text="Customer Businnes Name")
                rp_cl_tree.column("# 4", anchor=E, stretch=NO, width=180)
                rp_cl_tree.heading("# 4", text="Customer Person")
                rp_cl_tree.column("# 5", anchor=E, stretch=NO, width=140)
                rp_cl_tree.heading("# 5", text="Tel")
                rp_cl_tree.column("# 6", anchor=E, stretch=NO, width=130)
                rp_cl_tree.heading("# 6", text="Fax")
                # Insert the data in Treeview widget
                rp_cl_tree.insert('', 'end',text="1",values=('','','','','',''))

                # Insert the data in Treeview widget
                for record in rp_cl_tree.get_children():
                    rp_cl_tree.delete(record)
                count=0
                trs='SELECT * from invoice GROUP by businessname HAVING COUNT(businessname)>1'
                fbcursor.execute(trs)
                thj=fbcursor.fetchall()
                for i in thj:
                    trf='select * from customer where businessname=%s and category="Default"'
                    vs=(str(i[18]),)
                    
                    fbcursor.execute(trf, vs)
                    thg=fbcursor.fetchall()

                    for i in thg:
                        rp_cl_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[2], i[4], i[8], i[10], i[11]))
                        count += 1
                else:
                    rp_cl_tree.insert('', 'end',text="1",values=('','','','-No Data-','',''))


                window = canvas.create_window(170, 150, anchor="nw",  window=rp_cl_tree)

            else:
                pass
        else:
                    
                # Create an instance of Style widget
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
                tree.column("# 1", anchor=E, stretch=NO, width=100)
                tree.heading("# 1", text="Customer Id")
                tree.column("# 2", anchor=E, stretch=NO, width=170)
                tree.heading("# 2", text="Category")
                tree.column("# 3", anchor=E, stretch=NO, width=250)
                tree.heading("# 3", text="Customer Businnes Name")
                tree.column("# 4", anchor=E, stretch=NO, width=180)
                tree.heading("# 4", text="Customer Person")
                tree.column("# 5", anchor=E, stretch=NO, width=130)
                tree.heading("# 5", text="Tel")
                tree.column("# 6", anchor=E, stretch=NO, width=130)
                tree.heading("# 6", text="Fax")
                # Insert the data in Treeview widget
                tree.insert('', 'end',text="1",values=('','','','','',''))

                window = canvas.create_window(170, 150, anchor="nw", window=tree)

    elif rpcheckvar1_cl.get()==0 and rpcheckvar2_cl.get()==1:
        
        if company_tro is not None:
            if rth=="All Customers ":
                
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                rp_cl_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
                rp_cl_tree.column("# 1", anchor=E, stretch=NO, width=100)
                rp_cl_tree.heading("# 1", text="Customer Id")
                rp_cl_tree.column("# 2", anchor=E, stretch=NO, width=170)
                rp_cl_tree.heading("# 2", text="Category")
                rp_cl_tree.column("# 3", anchor=E, stretch=NO, width=250)
                rp_cl_tree.heading("# 3", text="Customer Businnes Name")
                rp_cl_tree.column("# 4", anchor=E, stretch=NO, width=180)
                rp_cl_tree.heading("# 4", text="Customer Person")
                rp_cl_tree.column("# 5", anchor=E, stretch=NO, width=140)
                rp_cl_tree.heading("# 5", text="Tel")
                rp_cl_tree.column("# 6", anchor=E, stretch=NO, width=130)
                rp_cl_tree.heading("# 6", text="Fax")
                # Insert the data in Treeview widget
                rp_cl_tree.insert('', 'end',text="1",values=('','','','','',''))

                # Insert the data in Treeview widget
                for record in rp_cl_tree.get_children():
                    rp_cl_tree.delete(record)
                count=0
                trs='SELECT * from invoice GROUP by businessname HAVING COUNT(businessname)>1'
                fbcursor.execute(trs)
                thj=fbcursor.fetchall()
                for i in thj:
                    trf='select * from customer where businessname=%s'
                    vs=(str(i[18]),)
                    
                    fbcursor.execute(trf, vs)
                    thg=fbcursor.fetchall()

                    for i in thg:
                        rp_cl_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[2], i[4], i[8], i[10], i[11]))
                        count += 1
                window = canvas.create_window(170, 150, anchor="nw",  window=rp_cl_tree) 
            

            elif rth=="Default":
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                rp_cl_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
                rp_cl_tree.column("# 1", anchor=E, stretch=NO, width=100)
                rp_cl_tree.heading("# 1", text="Customer Id")
                rp_cl_tree.column("# 2", anchor=E, stretch=NO, width=170)
                rp_cl_tree.heading("# 2", text="Category")
                rp_cl_tree.column("# 3", anchor=E, stretch=NO, width=250)
                rp_cl_tree.heading("# 3", text="Customer Businnes Name")
                rp_cl_tree.column("# 4", anchor=E, stretch=NO, width=180)
                rp_cl_tree.heading("# 4", text="Customer Person")
                rp_cl_tree.column("# 5", anchor=E, stretch=NO, width=140)
                rp_cl_tree.heading("# 5", text="Tel")
                rp_cl_tree.column("# 6", anchor=E, stretch=NO, width=130)
                rp_cl_tree.heading("# 6", text="Fax")
                # Insert the data in Treeview widget
                rp_cl_tree.insert('', 'end',text="1",values=('','','','','',''))

                # Insert the data in Treeview widget
                for record in rp_cl_tree.get_children():
                    rp_cl_tree.delete(record)
                count=0
                trs='SELECT * from invoice GROUP by businessname HAVING COUNT(businessname)=1'
                fbcursor.execute(trs)
                thj=fbcursor.fetchall()
                for i in thj:
                    trf='select * from customer where businessname=%s and category="Default"'
                    vs=(str(i[18]),)
                    
                    fbcursor.execute(trf, vs)
                    thg=fbcursor.fetchall()

                    for i in thg:
                        rp_cl_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[2], i[4], i[8], i[10], i[11]))
                        count += 1
                else:
                    rp_cl_tree.insert('', 'end',text="1",values=('','','','-No Data-','',''))


                window = canvas.create_window(170, 150, anchor="nw",  window=rp_cl_tree)

            else:
                pass
        else:
                    
                # Create an instance of Style widget
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
                tree.column("# 1", anchor=E, stretch=NO, width=100)
                tree.heading("# 1", text="Customer Id")
                tree.column("# 2", anchor=E, stretch=NO, width=170)
                tree.heading("# 2", text="Category")
                tree.column("# 3", anchor=E, stretch=NO, width=250)
                tree.heading("# 3", text="Customer Businnes Name")
                tree.column("# 4", anchor=E, stretch=NO, width=180)
                tree.heading("# 4", text="Customer Person")
                tree.column("# 5", anchor=E, stretch=NO, width=130)
                tree.heading("# 5", text="Tel")
                tree.column("# 6", anchor=E, stretch=NO, width=130)
                tree.heading("# 6", text="Fax")
                # Insert the data in Treeview widget
                tree.insert('', 'end',text="1",values=('','','','','',''))

                window = canvas.create_window(170, 150, anchor="nw", window=tree)
    elif rpcheckvar1_cl.get()==1 and rpcheckvar2_cl.get()==1:
        if company_tro is not None:
            if rth=="All Customers ":
                
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                rp_cl_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
                rp_cl_tree.column("# 1", anchor=E, stretch=NO, width=100)
                rp_cl_tree.heading("# 1", text="Customer Id")
                rp_cl_tree.column("# 2", anchor=E, stretch=NO, width=170)
                rp_cl_tree.heading("# 2", text="Category")
                rp_cl_tree.column("# 3", anchor=E, stretch=NO, width=250)
                rp_cl_tree.heading("# 3", text="Customer Businnes Name")
                rp_cl_tree.column("# 4", anchor=E, stretch=NO, width=180)
                rp_cl_tree.heading("# 4", text="Customer Person")
                rp_cl_tree.column("# 5", anchor=E, stretch=NO, width=140)
                rp_cl_tree.heading("# 5", text="Tel")
                rp_cl_tree.column("# 6", anchor=E, stretch=NO, width=130)
                rp_cl_tree.heading("# 6", text="Fax")
                # Insert the data in Treeview widget
                rp_cl_tree.insert('', 'end',text="1",values=('','','','','',''))

                # Insert the data in Treeview widget
                for record in rp_cl_tree.get_children():
                    rp_cl_tree.delete(record)
                count=0
                trf='select * from customer'
                
                fbcursor.execute(trf)
                thg=fbcursor.fetchall()

                for i in thg:
                    rp_cl_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[2], i[4], i[8], i[10], i[11]))
                    count += 1
                else:
                    rp_cl_tree.insert('', 'end',text="1",values=('','','','-No Data-','',''))
                window = canvas.create_window(170, 150, anchor="nw",  window=rp_cl_tree) 
            

            elif rth=="Default":
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                rp_cl_tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
                rp_cl_tree.column("# 1", anchor=E, stretch=NO, width=100)
                rp_cl_tree.heading("# 1", text="Customer Id")
                rp_cl_tree.column("# 2", anchor=E, stretch=NO, width=170)
                rp_cl_tree.heading("# 2", text="Category")
                rp_cl_tree.column("# 3", anchor=E, stretch=NO, width=250)
                rp_cl_tree.heading("# 3", text="Customer Businnes Name")
                rp_cl_tree.column("# 4", anchor=E, stretch=NO, width=180)
                rp_cl_tree.heading("# 4", text="Customer Person")
                rp_cl_tree.column("# 5", anchor=E, stretch=NO, width=140)
                rp_cl_tree.heading("# 5", text="Tel")
                rp_cl_tree.column("# 6", anchor=E, stretch=NO, width=130)
                rp_cl_tree.heading("# 6", text="Fax")
                # Insert the data in Treeview widget
                rp_cl_tree.insert('', 'end',text="1",values=('','','','','',''))

                # Insert the data in Treeview widget
                for record in rp_cl_tree.get_children():
                    rp_cl_tree.delete(record)
                count=0
                
                trf='select * from customer where category="Default"'
                
                fbcursor.execute(trf)
                thg=fbcursor.fetchall()

                for i in thg:
                    rp_cl_tree.insert(parent='', index='end', iid=i, text='hello', values=(i[0], i[2], i[4], i[8], i[10], i[11]))
                    count += 1
                else:
                    rp_cl_tree.insert('', 'end',text="1",values=('','','','-No Data-','',''))


                window = canvas.create_window(170, 150, anchor="nw",  window=rp_cl_tree)

            else:
                pass
        else:
                    
                # Create an instance of Style widget
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
                tree.column("# 1", anchor=E, stretch=NO, width=100)
                tree.heading("# 1", text="Customer Id")
                tree.column("# 2", anchor=E, stretch=NO, width=170)
                tree.heading("# 2", text="Category")
                tree.column("# 3", anchor=E, stretch=NO, width=250)
                tree.heading("# 3", text="Customer Businnes Name")
                tree.column("# 4", anchor=E, stretch=NO, width=180)
                tree.heading("# 4", text="Customer Person")
                tree.column("# 5", anchor=E, stretch=NO, width=140)
                tree.heading("# 5", text="Tel")
                tree.column("# 6", anchor=E, stretch=NO, width=130)
                tree.heading("# 6", text="Fax")
                # Insert the data in Treeview widget
                tree.insert('', 'end',text="1",values=('','','','','',''))

                window = canvas.create_window(170, 150, anchor="nw", window=tree)
    elif rpcheckvar1_cl.get()==0 and rpcheckvar2_cl.get()==0:
        if company_tro is not None:
            
                # Create an instance of Style widget
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5", "c6"), show='headings', height=55, style='mystyle.Treeview')
                tree.column("# 1", anchor=E, stretch=NO, width=100)
                tree.heading("# 1", text="Customer Id")
                tree.column("# 2", anchor=E, stretch=NO, width=170)
                tree.heading("# 2", text="Category")
                tree.column("# 3", anchor=E, stretch=NO, width=250)
                tree.heading("# 3", text="Customer Businnes Name")
                tree.column("# 4", anchor=E, stretch=NO, width=180)
                tree.heading("# 4", text="Customer Person")
                tree.column("# 5", anchor=E, stretch=NO, width=130)
                tree.heading("# 5", text="Tel")
                tree.column("# 6", anchor=E, stretch=NO, width=130)
                tree.heading("# 6", text="Fax")
                # Insert the data in Treeview widget
                tree.insert('', 'end',text="1",values=('','',' -=No Data-','','',''))

                window = canvas.create_window(170, 150, anchor="nw", window=tree)
    else:
        pass

def check_cld():
    rth=cldfilter.get()
    tro_company = "SELECT * from company"
    fbcursor.execute(tro_company)
    company_tro= fbcursor.fetchone()

    if rpcheckvar1_cld.get()==1 and rpcheckvar2_cld.get()==0:
        
        if company_tro is not None:
            
            if rth=="All Customers ":
                
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                rp_cld_tree=ttk.Treeview(canvas, column=("c1", "c2"), show='headings', height=55, style='mystyle.Treeview')
                rp_cld_tree.column("# 1", anchor="sw", stretch=NO, width=345)
                rp_cld_tree.heading("# 1", text="")
                rp_cld_tree.column("# 2", anchor="sw", stretch=NO, width=345)
                rp_cld_tree.heading("# 2", text="")
                
                # Insert the data in Treeview widget
                rp_cld_tree.insert('', 'end',text="1",values=('',''))

                # Insert the data in Treeview widget
                for record in rp_cld_tree.get_children():
                    rp_cld_tree.delete(record)
                count=0
                trs='SELECT * from invoice GROUP by businessname HAVING COUNT(businessname)>1'
                fbcursor.execute(trs)
                thj=fbcursor.fetchall()
                for i in thj:
                    trf='select * from customer where businessname=%s'
                    vs=(str(i[18]),)
                    
                    fbcursor.execute(trf, vs)
                    thg=fbcursor.fetchall()

                    for i in thg:
                        rp_cld_tree.insert("","end", iid=i, text='hello', values=("Billing Information:                      Customer Id:"+str(i[0]),"Shipping Information:                      Tax exempt No.:"+str(i[17])))

                        rp_cld_tree.insert("","end", values=('Name: '+str(i[4]),'Name:'+str(i[6])))

                        rp_cld_tree.insert("","end", values=('Address: '+str(i[5]),'Address:'+str(i[7])))
                        rp_cld_tree.insert("","end", values=('Contact Person: '+str(i[8]),'Contact Person:'+str(i[13])))
                        rp_cld_tree.insert("","end", values=('Tel:'+str(i[10])+'          Fax: '+str(i[11]),'Tel:'+str(i[15])+'          Fax: '+str(i[16])))
                        rp_cld_tree.insert("","end", values=('Email: '+str(i[9]),'Email: '+str(i[14])))
                        rp_cld_tree.insert('', 'end',text="1",values=('____________________________________________________________','____________________________________________________________'))
                        
                        count += 1
                window = canvas.create_window(290, 130, anchor="nw",  window=rp_cld_tree) 
            

            elif rth=="Default":
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                rp_cld_tree=ttk.Treeview(canvas, column=("c1", "c2"), show='headings', height=55, style='mystyle.Treeview')
                rp_cld_tree.column("# 1", anchor="sw", stretch=NO, width=345)
                rp_cld_tree.heading("# 1", text="")
                rp_cld_tree.column("# 2", anchor="sw", stretch=NO, width=345)
                rp_cld_tree.heading("# 2", text="")
            
            # Insert the data in Treeview widget
                rp_cld_tree.insert('', 'end',text="1",values=('',''))
                # Insert the data in Treeview widget
                for record in rp_cld_tree.get_children():
                    rp_cld_tree.delete(record)
                count=0
                trs='SELECT * from invoice GROUP by businessname HAVING COUNT(businessname)>1'
                fbcursor.execute(trs)
                thj=fbcursor.fetchall()
                for i in thj:
                    trf='select * from customer where businessname=%s and category="Default"'
                    vs=(str(i[18]),)
                    
                    fbcursor.execute(trf, vs)
                    thg=fbcursor.fetchall()

                    for i in thg:
                        rp_cld_tree.insert("","end", iid=i, text='hello', values=("Billing Information:                      Customer Id:"+str(i[0]),"Shipping Information:                      Tax exempt No.:"+str(i[17])))

                        rp_cld_tree.insert("","end", values=('Name: '+str(i[4]),'Name:'+str(i[6])))

                        rp_cld_tree.insert("","end", values=('Address: '+str(i[5]),'Address:'+str(i[7])))
                        rp_cld_tree.insert("","end", values=('Contact Person: '+str(i[8]),'Contact Person:'+str(i[13])))
                        rp_cld_tree.insert("","end", values=('Tel:'+str(i[10])+'          Fax: '+str(i[11]),'Tel:'+str(i[15])+'          Fax: '+str(i[16])))
                        rp_cld_tree.insert("","end", values=('Email: '+str(i[9]),'Email: '+str(i[14])))
                        rp_cld_tree.insert('', 'end',text="1",values=('____________________________________________________________','____________________________________________________________'))
                        
                        count += 1
                else:
                    rp_cld_tree.insert('', 'end',text="1",values=('','','','-No Data-','',''))


                window = canvas.create_window(290, 130, anchor="nw",  window=rp_cld_tree)

            else:
                pass
        else:
                    
                # Create an instance of Style widget
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                rp_cld_tree=ttk.Treeview(canvas, column=("c1", "c2"), show='headings', height=55, style='mystyle.Treeview')
                rp_cld_tree.column("# 1", anchor="sw", stretch=NO, width=345)
                rp_cld_tree.heading("# 1", text="")
                rp_cld_tree.column("# 2", anchor="sw", stretch=NO, width=345)
                rp_cld_tree.heading("# 2", text="")
                
                # Insert the data in Treeview widget
                rp_cld_tree.insert('', 'end',text="1",values=('No Data',''))
                window = canvas.create_window(290, 130, anchor="nw", window=rp_cld_tree)

    elif rpcheckvar1_cld.get()==0 and rpcheckvar2_cld.get()==1:
        
        if company_tro is not None:
            if rth=="All Customers ":
                
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                rp_cld_tree=ttk.Treeview(canvas, column=("c1", "c2"), show='headings', height=55, style='mystyle.Treeview')
                rp_cld_tree.column("# 1", anchor="sw", stretch=NO, width=345)
                rp_cld_tree.heading("# 1", text="")
                rp_cld_tree.column("# 2", anchor="sw", stretch=NO, width=345)
                rp_cld_tree.heading("# 2", text="")
                
                # Insert the data in Treeview widget
                rp_cld_tree.insert('', 'end',text="1",values=('',''))

                # Insert the data in Treeview widget
                for record in rp_cld_tree.get_children():
                    rp_cld_tree.delete(record)
                count=0
                trs='SELECT * from invoice GROUP by businessname HAVING COUNT(businessname)=1'
                fbcursor.execute(trs)
                thj=fbcursor.fetchall()
                for i in thj:
                    trf='select * from customer where businessname=%s'
                    vs=(str(i[18]),)
                    
                    fbcursor.execute(trf, vs)
                    thg=fbcursor.fetchall()

                    for i in thg:
                        rp_cld_tree.insert("","end", iid=i, text='hello', values=("Billing Information:                      Customer Id:"+str(i[0]),"Shipping Information:                      Tax exempt No.:"+str(i[17])))

                        rp_cld_tree.insert("","end", values=('Name: '+str(i[4]),'Name:'+str(i[6])))

                        rp_cld_tree.insert("","end", values=('Address: '+str(i[5]),'Address:'+str(i[7])))
                        rp_cld_tree.insert("","end", values=('Contact Person: '+str(i[8]),'Contact Person:'+str(i[13])))
                        rp_cld_tree.insert("","end", values=('Tel:'+str(i[10])+'          Fax: '+str(i[11]),'Tel:'+str(i[15])+'          Fax: '+str(i[16])))
                        rp_cld_tree.insert("","end", values=('Email: '+str(i[9]),'Email: '+str(i[14])))
                        rp_cld_tree.insert('', 'end',text="1",values=('____________________________________________________________','____________________________________________________________'))
                        
                        count += 1
                window = canvas.create_window(290, 130, anchor="nw",  window=rp_cld_tree) 
            

            elif rth=="Default":
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                rp_cld_tree=ttk.Treeview(canvas, column=("c1", "c2"), show='headings', height=55, style='mystyle.Treeview')
                rp_cld_tree.column("# 1", anchor="sw", stretch=NO, width=345)
                rp_cld_tree.heading("# 1", text="")
                rp_cld_tree.column("# 2", anchor="sw", stretch=NO, width=345)
                rp_cld_tree.heading("# 2", text="")
                
                # Insert the data in Treeview widget
                rp_cld_tree.insert('', 'end',text="1",values=('',''))

                # Insert the data in Treeview widget
                for record in rp_cld_tree.get_children():
                    rp_cld_tree.delete(record)
                count=0
                trs='SELECT * from invoice GROUP by businessname HAVING COUNT(businessname)=1'
                fbcursor.execute(trs)
                thj=fbcursor.fetchall()
                for i in thj:
                    trf='select * from customer where businessname=%s and category="Default"'
                    vs=(str(i[18]),)
                    
                    fbcursor.execute(trf, vs)
                    thg=fbcursor.fetchall()

                    for i in thg:
                        rp_cld_tree.insert("","end", iid=i, text='hello', values=("Billing Information:                      Customer Id:"+str(i[0]),"Shipping Information:                      Tax exempt No.:"+str(i[17])))

                        rp_cld_tree.insert("","end", values=('Name: '+str(i[4]),'Name:'+str(i[6])))

                        rp_cld_tree.insert("","end", values=('Address: '+str(i[5]),'Address:'+str(i[7])))
                        rp_cld_tree.insert("","end", values=('Contact Person: '+str(i[8]),'Contact Person:'+str(i[13])))
                        rp_cld_tree.insert("","end", values=('Tel:'+str(i[10])+'          Fax: '+str(i[11]),'Tel:'+str(i[15])+'          Fax: '+str(i[16])))
                        rp_cld_tree.insert("","end", values=('Email: '+str(i[9]),'Email: '+str(i[14])))
                        rp_cld_tree.insert('', 'end',text="1",values=('____________________________________________________________','____________________________________________________________'))
                        
                        count += 1
                else:
                    rp_cld_tree.insert('', 'end',text="1",values=('','','','-No Data-','',''))


                window = canvas.create_window(290, 130, anchor="nw",  window=rp_cld_tree)

            else:
                pass
        else:
                    
                # Create an instance of Style widget
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                rp_cld_tree=ttk.Treeview(canvas, column=("c1", "c2"), show='headings', height=55, style='mystyle.Treeview')
                rp_cld_tree.column("# 1", anchor="sw", stretch=NO, width=345)
                rp_cld_tree.heading("# 1", text="")
                rp_cld_tree.column("# 2", anchor="sw", stretch=NO, width=345)
                rp_cld_tree.heading("# 2", text="")
                
                # Insert the data in Treeview widget
                rp_cld_tree.insert('', 'end',text="1",values=('No Data',''))

                window = canvas.create_window(290, 130, anchor="nw", window=rp_cld_tree)
    elif rpcheckvar1_cld.get()==0 and rpcheckvar2_cld.get()==0:
        if company_tro is not None:
            
                # Create an instance of Style widget
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13,'bold')) # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                rp_cld_tree=ttk.Treeview(canvas, column=("c1", "c2"), show='headings', height=55, style='mystyle.Treeview')
                rp_cld_tree.column("# 1", anchor="sw", stretch=NO, width=345)
                rp_cld_tree.heading("# 1", text="")
                rp_cld_tree.column("# 2", anchor="sw", stretch=NO, width=345)
                rp_cld_tree.heading("# 2", text="")
                
                # Insert the data in Treeview widget
                rp_cld_tree.insert('', 'end',text="1",values=('-No Data-',''))

                window = canvas.create_window(290, 130, anchor="nw", window=rp_cld_tree)
    elif rpcheckvar1_cld.get()==1 and rpcheckvar2_cld.get()==1:
        if company_tro is not None:
            
            if rth=="All Customers ":
                
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                rp_cld_tree=ttk.Treeview(canvas, column=("c1", "c2"), show='headings', height=55, style='mystyle.Treeview')
                rp_cld_tree.column("# 1", anchor="sw", stretch=NO, width=345)
                rp_cld_tree.heading("# 1", text="")
                rp_cld_tree.column("# 2", anchor="sw", stretch=NO, width=345)
                rp_cld_tree.heading("# 2", text="")
                
                # Insert the data in Treeview widget
                rp_cld_tree.insert('', 'end',text="1",values=('',''))
                # Insert the data in Treeview widget
                for record in rp_cld_tree.get_children():
                    rp_cld_tree.delete(record)
                count=0
                trs='select * from customer'
                fbcursor.execute(trs)
                thj=fbcursor.fetchall()
                for i in thj:
                        rp_cld_tree.insert("","end", iid=i, text='hello', values=("Billing Information:                      Customer Id:"+str(i[0]),"Shipping Information:                      Tax exempt No.:"+str(i[17])))

                        rp_cld_tree.insert("","end", values=('Name: '+str(i[4]),'Name:'+str(i[6])))

                        rp_cld_tree.insert("","end", values=('Address: '+str(i[5]),'Address:'+str(i[7])))
                        rp_cld_tree.insert("","end", values=('Contact Person: '+str(i[8]),'Contact Person:'+str(i[13])))
                        rp_cld_tree.insert("","end", values=('Tel:'+str(i[10])+'          Fax: '+str(i[11]),'Tel:'+str(i[15])+'          Fax: '+str(i[16])))
                        rp_cld_tree.insert("","end", values=('Email: '+str(i[9]),'Email: '+str(i[14])))
                        rp_cld_tree.insert('', 'end',text="1",values=('____________________________________________________________','____________________________________________________________'))
                        
                        count += 1
                window = canvas.create_window(290, 130, anchor="nw",  window=rp_cld_tree) 
            

            elif rth=="Default":
                style=ttk.Style()
                style.configure("mystyle.Treeview", highlightthickness=0, bd=0, font=('Calibri', 11)) # Modify the font of the body
                style.configure("mystyle.Treeview.Heading", font=('Calibri', 13), background='white') # Modify the font of the headings
                style.layout("mystyle.Treeview", [('mystyle.Treeview.treearea', {'sticky': 'nswe'})]) # Remove the borders

                # Add a Treeview widge
                        
                rp_cld_tree=ttk.Treeview(canvas, column=("c1", "c2"), show='headings', height=55, style='mystyle.Treeview')
                rp_cld_tree.column("# 1", anchor="sw", stretch=NO, width=345)
                rp_cld_tree.heading("# 1", text="")
                rp_cld_tree.column("# 2", anchor="sw", stretch=NO, width=345)
                rp_cld_tree.heading("# 2", text="")
                
                # Insert the data in Treeview widget
                rp_cld_tree.insert('', 'end',text="1",values=('',''))

                # Insert the data in Treeview widget
                for record in rp_cld_tree.get_children():
                    rp_cld_tree.delete(record)
                count=0
                trs='select * from customer where category="Default"'
                fbcursor.execute(trs)
                thj=fbcursor.fetchall()
                for i in thj:
                        rp_cld_tree.insert("","end", iid=i, text='hello', values=("Billing Information:                      Customer Id:"+str(i[0]),"Shipping Information:                      Tax exempt No.:"+str(i[17])))

                        rp_cld_tree.insert("","end", values=('Name: '+str(i[4]),'Name:'+str(i[6])))

                        rp_cld_tree.insert("","end", values=('Address: '+str(i[5]),'Address:'+str(i[7])))
                        rp_cld_tree.insert("","end", values=('Contact Person: '+str(i[8]),'Contact Person:'+str(i[13])))
                        rp_cld_tree.insert("","end", values=('Tel:'+str(i[10])+'          Fax: '+str(i[11]),'Tel:'+str(i[15])+'          Fax: '+str(i[16])))
                        rp_cld_tree.insert("","end", values=('Email: '+str(i[9]),'Email: '+str(i[14])))
                        rp_cld_tree.insert('', 'end',text="1",values=('____________________________________________________________','____________________________________________________________'))
                        
                        count += 1
                else:
                    rp_cld_tree.insert('', 'end',text="1",values=('','','','-No Data-','',''))


                window = canvas.create_window(290, 130, anchor="nw",  window=rp_cld_tree)

            else:
                pass


    else:
        pass
#==============================================================================================================
        
    
#*****************************************Two Checkbox*****************************************************

############################################################(Screen Chart)###################################
lbl_invdtt = Label(lbframe, text="Report Type:  ", bg="#f8f8f2")
lbl_invdtt.place(x=8, y=10)
global menu1
menu1 = StringVar()
drop=ttk.Combobox(lbframe, textvariable=menu1, width=30)
drop.grid(row=2, column=0, pady=5, padx=(5, 0))
drop["values"]=("Screen Charts","Invoice Report","Invoice Report(With Customer)", "Order Report", "Recurring Invoice Report", "Past Due Invoices", "Payment Reports", "Customers List","Customers List(Detailed)","Product/Service List", "Price List", "Products Low Stock Report", "Tax Report(Invoices)", "Tax Report(Orders)", "Sales Report(group by date)", "Invoice Report(Detailed)", "Daily Invoices Report", "Purchase orders Report", "Expenses Report"
)
drop.current(0)
drop.bind("<<ComboboxSelected>>",maindropmenu)



lbl_invdtt = Label(lbframe, text="Category:", bg="#f8f8f2")
lbl_invdtt.grid(row=1, column=0, pady=5, padx=(150, 0))

menu = StringVar()
drop1=ttk.Combobox(lbframe, textvariable=menu)
drop1.grid(row=1, column=3, pady=5, padx=(5, 0))
drop1["values"]=("0")
drop1.current(0)


drop2=ttk.Combobox(lbframe, textvariable=scrfilter)
drop2.grid(row=2, column=3, pady=5, padx=(5, 0))
drop2["values"]=("Year To Date","Current year","Last 3 Month","Last 6 Month", "Last 12 Month", "Last 18 Month", "Last 24 Month","Previous Year", "Before Previous Year", "Custom Range")
drop2.current(0)

  
lbl_invdtt =Label(lbframe, text="From:" , bg="#f8f8f2")
lbl_invdtt.grid(row=1, column=4, pady=5, padx=(5, 0))
global rp_scr_frm
global rp_sc_to

rp_scr_frm=DateEntry(lbframe,textvariable=scrfrm)
rp_scr_frm.grid(row=1, column=5)

lbl_invdtt =Label(lbframe, text="To:", bg="#f8f8f2")
lbl_invdtt.grid(row=2, column=4, pady=5, padx=(5, 0))

rp_sc_to=DateEntry(lbframe,textvariable=scrto)
rp_sc_to.grid(row=2, column=5)

# checkvar1 = BooleanVar()
rp_1_chkbtn1 = Checkbutton(lbframe, text = "Invoice", variable = checkvar1, onvalue = 1, offvalue = 0, height = 2, width = 8, bg="#f8f8f2",command=chek_function)
rp_1_chkbtn1.grid(row=0, column=6, rowspan=2, padx=(0,3))
rp_1_chkbtn1.select()

# checkvar2 = BooleanVar()
rp_2_chkbtn2 = Checkbutton(lbframe, text = "Outstanding", variable = checkvar2, onvalue = 1, offvalue = 0, height = 2, width = 8, bg="#f8f8f2", command=chek_function)
rp_2_chkbtn2.grid(row=2, column=6,rowspan=2,padx=(25,0))
rp_2_chkbtn2.select()

# checkvar3 = BooleanVar()
rp_3_chkbtn3 = Checkbutton(lbframe, text = "Paid", variable = checkvar3, onvalue = 1, offvalue = 0, height = 2, width = 8, bg="#f8f8f2", command=chek_function)
rp_3_chkbtn3.grid(row=1, column=7)
rp_3_chkbtn3.select()


# dt_to=rp_sc_to.get_date()
# dts=2020-01-01
# print(dt_to-dts)
######################################################################################################################


#########################################(Graph Section)#############################################################
#first graph



sql_paid = "SELECT SUM(invoicetot)from invoice"
fbcursor.execute(sql_paid)
invoice= fbcursor.fetchone()

x_axis = "SELECT invodate from invoice WHERE invoicetot=(SELECT MAX(invoicetot) from invoice)"
fbcursor.execute(x_axis)
axis_x= fbcursor.fetchone()



sql_company = "SELECT SUM(totpaid)from invoice"
fbcursor.execute(sql_company)
paid= fbcursor.fetchone()



sql_outstanding = "SELECT SUM(balance)from invoice"
fbcursor.execute(sql_outstanding)
outstanding= fbcursor.fetchone()



# print(rp_scr_frm.get_date())
# x=rp_scr_frm.get_date()
# # print(x.get_date())
# invoice=1200
# outstanding=22
# paid=14

#------------------------------------with cursor----------------
# y=float(invoice)
# x+=1
# fig, ax =plt.subplots()
# plt.bar(x,y, label="Invoice", color="orange")
# plt.legend()
# plt.xlabel("x-axis")
# plt.ylabel("y-label")
# axes=plt.gca()
# axes.yaxis.grid()
# cursor=Cursor(ax, horizOn=True, vertOn=True, color='r', linewidth=1)
# plt.show()
#-------------------------------------------------------------------------------


frame = Frame(
        reportframe,
        width=1380,
        height=1000,
        bg='#b3b3b3',
        )
frame.pack(expand=True, fill=BOTH,  padx=0, pady=0)
    
frame.pack()


x=datetime.today()

y=invoice

x=axis_x
figfirst = plt.figure(figsize=(17, 3.58), dpi=80)
plt.bar(x,y, label="Invoice", color="orange")
plt.legend()
plt.xlabel("x-axis")
plt.ylabel("y-label")
axes=plt.gca()
axes.yaxis.grid()

# # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)




#**************add dates********

dates=axis_x[0]+timedelta(days=2)

y=outstanding
x=dates
plt.bar(x,y, label="Outstanding", color="blue")
plt.legend()
plt.xlabel("x-axis")
plt.ylabel("y-label")
axes=plt.gca()
axes.yaxis.grid()
# cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)


dates3=axis_x[0]-timedelta(days=2)
y=paid
x=dates3
plt.bar(x,y, label="Paid", color="green") 
plt.legend()
plt.xlabel("x-axis")
plt.ylabel("y-label")
axes=plt.gca()
axes.yaxis.grid()
# # cursor=Cursor(ax, horizOn=True, vertOn=True, useblit=True, color='r', linewidth=1)

#used to display chart in our frame
canvasbar = FigureCanvasTkAgg(figfirst, master=frame)
canvasbar.draw()
canvasbar.get_tk_widget().place(x=0, y=0) # show the barchart on the ouput window

#second graph

sec_paid = "SELECT invoicetot from invoice  GROUP BY businessname ORDER by COUNT(businessname) DESC LIMIT 1"
fbcursor.execute(sec_paid)
paid_sec_x= fbcursor.fetchone()

        
sec_paid_y = "SELECT businessname from invoice  GROUP BY businessname  ORDER by COUNT(businessname) DESC LIMIT 1"
fbcursor.execute(sec_paid_y)

paid_sec_y= fbcursor.fetchone()




figsecond = plt.figure(figsize=(9, 4), dpi=80)

x=paid_sec_y
y=paid_sec_x
plt.barh(x,y, label="Top Billed Customer", color="orange") 
plt.legend()
plt.xlabel("x-axis")
plt.ylabel("y-label")
axes=plt.gca()
axes.xaxis.grid()


canvasbar = FigureCanvasTkAgg(figsecond, master=reportframe)
canvasbar.draw() 
canvasbar.get_tk_widget().place(x=0, y=370)

# #second graph

thrd_paid = "SELECT invoicetot from invoice GROUP BY Productserviceid ORDER by COUNT(Productserviceid) DESC LIMIT 1"

fbcursor.execute(thrd_paid)
paid_thrd_x= fbcursor.fetchone()
            


thrd_paid_y = "select name from productservice where Productserviceid=(SELECT Productserviceid from invoice GROUP BY Productserviceid  ORDER by COUNT(Productserviceid) DESC LIMIT 1)"

fbcursor.execute(thrd_paid_y)

paid_thrd_y= fbcursor.fetchone()

figlast = plt.figure(figsize=(9, 4), dpi=80)

x=paid_thrd_y
y=paid_thrd_x   
plt.barh(x,y, label="Top Product Sale", color="blue") 
plt.legend()
plt.xlabel("x-axis")
plt.ylabel("y-label")
axes=plt.gca()
axes.xaxis.grid()
 

canvasbar = FigureCanvasTkAgg(figlast, master=reportframe)
canvasbar.draw()
canvasbar.get_tk_widget().place(x=650, y=370)
lbl_ir = Label(reportframe, text="Right Click On Each Chart For More Options", bg="white" , font=("arial", 8))
lbl_ir.place(x=1115,y=85)


lbl_invdtt2 =Label(reportframe, text="Screen Charts", bg="white" , font=("arial", 16))
lbl_invdtt2.place(x=2, y=85)
##################################################################################################################
root.mainloop()